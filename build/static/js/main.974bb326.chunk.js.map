{"version":3,"sources":["handlers/sceneHandlers_new.js","consts/enemies.js","utils/reducer-utils.js","effects.js","consts/allCards.js","consts/consts.js","actions.js","components/common/Dialog.js","components/common/ThemedButton.js","consts/party/parties.js","scenes.js","utils/debugging-utils.js","consts/pals/pals.js","consts/allMoves.js","consts/party/trainers.js","consts/mapGenerator_new.js","consts/startingData.js","MainContext.js","components/common/DialoguePopup.js","consts/fun/pal.js","components/scenes/Intro.js","consts/allEvents.js","components/scenes/Event.js","consts/packs.js","consts/allShopItems.js","components/common/Card.js","components/scenes/Shop.js","components/scenes/Rest.js","components/reward/ChibipalsSelection.js","handlers/partyHandlers_new.js","components/scenes/Reward.js","utils/reward-utils.js","components/scenes/PackRewardTemp.js","convos/convos.js","convos/tutorialConvos.js","components/scenes/Convo.js","components/info/Monster.js","handlers/moveHandlers.js","components/info/RenderIndAttack.js","components/common/MenuPopup.js","components/common/AttackPopup.js","components/battle/BattleTopDisplay.js","components/battle/BattleBotDisplay.js","components/battle/UserPartyDisplay.js","components/battle/MenuButtonGroup.js","components/battle/HUDHeader.js","components/scenes/Battle.js","components/map/Map.js","components/scenes/Trans.js","components/scenes/Victory.js","components/scenes/ChooseCharacter.js","components/Screen.js","consts/mapGenerator_old.js","handlers/dataHandlers.js","consts/allAvailableRewards.js","handlers/sceneHandlers.js","handlers/battleHandlers.js","handlers/battleSetupHandlers.js","handlers/eventHandlers.js","reducer.js","components/effects/QuestionMarks.js","App.js","index.js"],"names":["SCENES","TRANSITION","INTRO","SHOP","MAP","EVENT","REST","REWARD","PACKREWARD","CONVO","BATTLE","MINIBOSS","BOSS","GAMEOVER","VICTORY","CHOOSECHARACTER","updateLevel","newData","newLevel","updatedData","_objectSpread","current","level","updateScene","newScene","console","log","scene","changeLevel","state","concat","allEnemies","1","regular","name","health","maxHP","passive","bio","img","status","attacks","type","damage","mini","boss","2","3","shuffle","a","s","obj","Object","entries","reduce","o","n","hash","id","length","push","sort","_ref","_ref2","_slicedToArray","f","_ref5","v","_toConsumableArray","decideEnemyArr","act","decideEnemy","seed","enemiesArr","Math","floor","decideEnemyATK","enemyAttacks","nextATK","uniqueId","EFFECTS","poisonCards","ToxicGas","num","cost","effect","qty","price","AcidSpray","ToxicSpores","PoisonousTouch","ToxicOoze","PoisonCloud","stunCards","throwFist","throwFistPlus","chaoticBolt","effectChance","ddamageCards","focus","focusPunch","sleepCards","hypnosis","hypnosisPlus","buildupCards","channel","channelPlus","rewardCards","flameToss","fireBreath","broil","waterMissile","aquaBlast","drippingWet","grassBlade","pelletGun","swarm","shadowDrop","electricSymphony","backstab","frostBlast","hypnoticDistress","blackOoze","overload","stunningDelivery","shopCards","ToxicFog","AcidRain","PoisonousMist","NoxiousBite","VenomousFang","PoisonousClaw","ElectroPunch","Shockwave","ThunderFist","PowerSurge","ElectricBolt","StrongHit","PowerPunch","ForcefulBlow","DreamCatcher","HypnoWave","PsychicBlast","basicCards","DRAW","STUN","DOUBLEDAMAGE","SLEEP","POISON","startingDeck","startingData","deck","gold","hero","energy","effects","buff","buildup","maxEnergy","armor","power","battle","enemy","nextAttack","runes","hand","discarded","beginning","dialog","curScene","lvl","curEvent","availableRewards","alert","eventResultObj","devMode","energyEmoji","ACTIONS","SET_TRANS","SET_SCENE","SET_MYDATA","APPLY_HEAL","SET_MYBALANCE","SET_ENEMY","SET_ATK","SET_DECK","SET_ALERT","DRAW_CARD","PLAY_CARD","SELECT_REST","GENERATE_REWARDS","SELECT_REWARD","SELECT_PACK","PURCHASE_ITEM","DISCARD_CARD","BEGIN_BATTLE","TAKE_DAMAGE","END_TURN","ADD_CARD","GAME_OVER","ENEMY_TYPES","addPackAction","ourPack","payload","pack","battlePayload","enemySeed","random","atkSeed","beginBattleSeed","startingHandCount","setSceneAction","Dialog","myText","size","_ref$speed","speed","usedText","React","createElement","Fragment","split","map","text","index","motion","span","key","initial","animate","backgroundColor","color","width","transition","duration","delay","style","fontSize","fontFamily","ThemedButton","onClick","className","Party","SLOT_1","SLOT_2","SLOT_3","SLOT_4","SLOT_5","SLOT_6","userParty","_userParty","_defineProperty","_opponent","emojis","primary","secondary","debug","info","warn","error","success","link","change","creature","move","pay","calcDamage","apply","end","logTypes","background","cusLog","message","group","source","Error","stack","trim","formatted","_logTypes$type","format","_len","arguments","objects","Array","_key","_logTypes$type2","css","groupEnd","groupCollapsed","_console","_console2","Luminowl","PropTypes","shape","number","isRequired","string","elemental_type","creature_type","specialty_group","nature","quirks","arrayOf","stats","hp","max_hp","attack","defense","special_attack","special_defense","strengths","weaknesses","experience","moves","possible_moves","passive_ability","image","description","weight","lore","enterAbility","energyCost","chance","result","priority","targets","notSoFast","evasion_boost","forceful","confusion_resist","commander_ability","Glowbuggle","shield_value","charm_resist","healing","healing_boost","Umbrabunny","debuff_resist","Ticklefairy","hikerBrak","reward","currency","items","quantity","monsters","dialogue","enter","win","lose","placeholderTrainer","spirit","basicTrainers","allTrainers","trainer","generateNextLevelOptions","options","i","randomValue","randomTrainer","screen","details","area","difficulty","generateMap","results","undefined","newStartingData","opponent","battleManager","turn","currentPlayer","phase","incomingLevels","game","player","credability","inventory","battlesAhead","events","introEvent","action","alerts","isOpen","label","title","header","stateContext","createContext","dispatchContext","useStateContext","useContext","useDispatchContext","SET_HEALTH","SET_GOLD","SET_LEVEL","SET_INVENTORY","ATTACK","UPDATEGAMEDATA","MainProvider","children","_React$useReducer","useReducer","playerParty","_React$useReducer2","dispatch","Provider","value","DialoguePopup","props","_objectDestructuringEmpty","contextualState","contextualDispatch","position","top","left","height","display","justifyContent","alignItems","zIndex","padding","maxWidth","boxShadow","marginBottom","marginRight","fontWeight","button","closeDialogueState","closeDialogPopup","border","margin","cursor","palAcronyms","Intro","loadNextLevel","nextLevelState","_useState","useState","_useState2","lastPlayedTime","setLastPlayedTime","_useState3","_useState4","streak","setStreak","_useState5","_useState6","longestStreak","setLongestStreak","useEffect","today","Date","toDateString","lastPlayed","localStorage","getItem","localStreak","localLongestStreak","newStreak","now","Number","setItem","_useState7","_useState8","_useState9","_useState10","div","opacity","randomIndex","getRandomPALAcronym","src","alt","paddingRight","paddingLeft","possibleEvents","choices","choice","resultType","resultNum","resultDialog","resultDialogTitle","Event","executeChoice","EVENT_CHOICE","eventChoiceAction","chosenEvent","ourEvent","choiceOBJ","rewardPack","allBasicPacks","desc","buttonText","allShopItems","Card","cardValue","useCard","isBattle","isOnSale","BUILDUP","effectString","exit","y","whileHover","scale","bounce","flexDirection","backgroundImage","backgroundRepeat","backgroundSize","flex","repeat","Shop","gameData","itemSelection","slice","buyCard","card","buyCardAction","flexWrap","Rest","ChibipalsSelection","selectedMonster","setSelectedMonster","showDetails","setShowDetails","placeholderImageStyle","borderRadius","paddingTop","monster","handleMonsterClick","objectFit","transform","textAlign","marginTop","gap","partyWithMonsterAdded","slot","_i","_Object$entries","partySlot","addMonsterToParty","newState","Reward","generateRewardPackSelection","packPool","PackReward","packSelection","packObj","yoyo","Infinity","whileTap","Pack","testConvo","actor","pos","actions","resultLocation","Convo","conversation","line","setLine","convo","setConvo","attackContainerStyle","attackInfoStyle","monsterNameStyle","monsterAbilitiesStyle","marginLeft","Monster","abilities","monsterIcon","isArray","ability","ATK_PHASES","PAY","CALCULATE_DAMAGE","RESOLVE_EFFECT","APPLY_STATUSES","APPLY_DAMAGE","END","executeMove","user","targetMonster","playerEnergy","moveCost","dialogState","prevState","closedPopupState","playerEnergyAfterPayment","energyPaidState","costPaidDialogState","ourDmg","doesItLand","parseFloat","RESOLVE_EFFECTS","blind","RenderIndAttack","togglePopup","attackType","setAttackType","fuel","renderBasic","join","resultState","runMove","MenuOptions","ATTACKS","BENCH_ATTACKS","DO_SOMETHING","attackHeaderStyle","characterIconStyle","attackLabelStyle","MenuPopup","_menuContent","currentMenu","setCurrentMenu","renderTab","menuOption","menuContent","content","selectedPal","trigger","maxHeight","overflowY","values","styles","attackContainer","attackContainerHover","attackInfo","attackName","attackDamage","attackDescription","attackEnergyCost","alignSelf","AttackPopup","onAttackClick","closeAttackPopup","removeAttackButton","attackTargets","attackPriority","attackSpeed","attackFuel","attackNotSoFast","attackForceful","BattleTopDisplay","attackPopupStyles","overlay","container","isAttackPopupVisible","setAttackPopupVisible","yourVariants","visible","x","currentMonDetails","currentMon","max","variants","BattleBotDisplay","ourCurrentMon","ourParty","ourMain","strength","weakness","UserPartyDisplay","member","MenuButtonGroup","alignContent","HUDHeader","Battle","popupOpen","setPopupOpen","_gameData$hero","showPopup","setShowPopup","handleButtonClick","onButtonClick","buttonText2","Map","sectionStyle","headingStyle","buttonStyle","imageControls","useAnimation","imageAnimation","ease","start","handleChangeLevel","stateWithChangedLevel","option","renderMonsterDetails","Trans","rotate","flip","Victory","ChooseCharacter","Screen","levelToSet","randomizedVal","setMyDataHandler","healHandler","nextState","newHealth","setMyBalanceHandler","newBalance","addCardHandler","ourDeck","cardWithFreshID","table","updatedDeck","addPackHandler","setAlertHandler","allAvailableRewards","setSceneHandler","nextLevel","enemyArr","setEnemyHandler","setAtkHandler","beginBattleHandler","setTransitionHandler","winBattleHandler","nextDeck","generateRewardsHandler","gameOverHandler","playCardHandler","myEnergy","enemyHealth","cardName","myHandIndex","setDialogHandler","indexOf","splice","applyStatusHandler","energyLeft","enemyHealthLeft","discardCardHandler","cardToAddToDiscarded","statusEffect","poison","drawCardHandler","healAmount","endTurnHandler","_nextState","enemyStatus","heroBuff","finalHealth","endTurnState","drawCardState","drawSecondCardState","shuffledDeck","randomizedCards","cardsToReturn","setRewardHandler","newStateWithFreshRewards","restHandler","eventChoiceHandler","transSceneState","purchaseHandler","addedCardState","newGoldBalance","newCardandGoldState","reducer","greenColors","QuestionMarks","App","_useReducer","_useReducer2","center","rootElement","document","getElementById","createRoot","render"],"mappings":"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,+BACA,6BACA,sBACA,yBACA,mCACA,kCACA,kCACA,+BACA,gCACA,mCACA,8BACA,oCACA,mCACA,4BACA,+BACA,6BACA,2BACA,2BACA,gCACA,wBACA,2BACA,mCACA,mCACA,kCACA,iCACA,+BACA,kCACA,8BACA,mCACA,oCACA,6BACA,+BACA,4BACA,2BACA,+BACA,4BACA,6BACA,4BACA,mCACA,sCACA,kCACA,+BACA,kCACA,iCACA,kCACA,uCACA,gCACA,+BACA,+BACA,8BACA,8BACA,+BACA,gCACA,0BACA,8BACA,mCACA,mCACA,+BACA,kCACA,+BACA,kCACA,oCACA,oCACA,mCACA,4BACA,kCACA,0BACA,2BACA,6BACA,gCACA,4BACA,+BACA,mCACA,sCACA,kCACA,4BACA,+BACA,qCACA,iCACA,oCACA,mCACA,8BACA,6BACA,2BACA,iCACA,2BACA,gCACA,4BACA,6BACA,mCACA,mCACA,+BACA,+BACA,kCACA,iCACA,kCACA,iCACA,iCACA,+BACA,+BACA,6BACA,4BACA,4BACA,4BACA,8BACA,+BACA,mCACA,sCACA,kCACA,kCACA,kCACA,kCACA,iCACA,uCACA,gCACA,+BACA,+BACA,wBACA,gCACA,4BACA,gCACA,0BACA,iCACA,mCACA,mCACA,+BACA,+BACA,kCACA,sCCvKF,IA0LeC,GA1LD,SAAHpX,GAAqB,IAAfuV,EAAQvV,EAARuV,SAcTM,EAAkBrB,KAClBsB,EAAqBpB,KAErB2C,EAAgB,WAEpB1Z,QAAQC,IAAG,yBACX2X,EAASlM,KAGT,IAIMiO,EAAiBpa,EAJAO,EAAYoY,EAAiB,CAClDnD,OAAQxW,EAAOe,gBACf0V,QAAS,OAEwC,GACnDmD,EAAmB,CACjBjN,QAASyO,EACT1Y,KAAMuI,GAAQ6N,kBAKlBuC,EAC4CC,mBAAS,MAAKC,EAAAvX,YAAAqX,EAAA,GAAnDG,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAAAG,EACZJ,mBAAS,GAAEK,EAAA3X,YAAA0X,EAAA,GAAhCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAAAG,EACkBR,mBAAS,GAAES,EAAA/X,YAAA8X,EAAA,GAA9CE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,oBAAU,WACR,IAAMC,GAAQ,IAAIC,MAAOC,eACnBC,EAAaC,aAAaC,QAAQ,cAExC,GAAIF,IAAeH,EAAO,CACxB,IAAMM,EAAcF,aAAaC,QAAQ,UACnCE,EAAqBH,aAAaC,QAAQ,iBAC5CG,EAAY,EACZL,IAAe,IAAIF,KAAKA,KAAKQ,MAAQ,OAAUP,gBACjDM,EAAYF,EAAcI,OAAOJ,GAAe,EAAI,EACpDF,aAAaO,QAAQ,SAAUH,GAC/Bd,EAAUc,KAEVJ,aAAaO,QAAQ,SAAU,GAC/BjB,EAAU,MAEPa,GAAsBC,EAAYE,OAAOH,MAC5CH,aAAaO,QAAQ,gBAAiBH,GACtCV,EAAiBU,IAEnBJ,aAAaO,QAAQ,aAAcX,GAGrCV,EAAkBc,aAAaC,QAAQ,eACvCX,EAAUgB,OAAON,aAAaC,QAAQ,YACtCP,EAAiBY,OAAON,aAAaC,QAAQ,oBAC5C,IAEH,IAyCCO,EAE6BzB,oBAAS,GAAM0B,EAAAhZ,YAAA+Y,EAAA,GAAnBE,GAAZD,EAAA,GAAYA,EAAA,GACkB1B,oBAAS,IAAM4B,EAAAlZ,YAAAiZ,EAAA,GAAtCC,EAAA,GAAmBA,EAAA,GAOxC,OACExP,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEsB,UAAU,yFAGVvB,IAAAC,cAAA,OAAKiB,MAAO,CAAEL,MAAO,SAAU,iBAC/Bb,IAAAC,cAAA,WACED,IAAAC,cAACM,SAAOkP,IAAG,CACT/O,QAAS,CAAEgP,QAAS,GACpB/O,QAAS,CAAE+O,QAAS,GACpB3O,WAAY,CAAEE,MAAO,IAAKD,SAAU,GACpCE,MAlIC,CACTE,WAAY,aAEZD,SAAU,OACVN,MAAO,QACP8L,QAAS,SA8HF,yBAEC3M,IAAAC,cAAA,UDmCP,WACL,IAAM0P,EAAc3Y,KAAKC,MAAMD,KAAKqI,SAAWkO,GAAYtX,QAC3D,OAAOsX,GAAYoC,GCrCFC,MAGT5P,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEiB,MAAO,CAAEJ,MAAO,IAAKwL,OAAQ,IAAKK,QAAS,QAC3CkD,IAAI,yBACJC,IAAI,uBAGR9P,IAAAC,cAAA,OAAKiB,MAAO,CAAE6O,aAAc,MAAOC,YAAa,QAE9ChQ,IAAAC,cAACP,EAAM,CACLE,KAAK,KACLD,OAAM,kLAGRK,IAAAC,cAAA,YACK,IAUPD,IAAAC,cAAA,OAAKiB,MAAO,CAAEyL,QAAS,SACpB,IACD3M,IAAAC,cAACoB,EAAY,CAAChB,KAAI,kBAAqBiB,QAASmM,KAGlDzN,IAAAC,cAACoB,EAAY,CAAChB,KAAI,UAAaiB,QAASmM,IACxCzN,IAAAC,cAACoB,EAAY,CAAChB,KAAI,SAAYiB,QAASmM,IAEvCzN,IAAAC,cAAA,OAAKiB,MAAO,CAAEN,gBAAiB,OAAQ+L,QAAS,QAC9C3M,IAAAC,cAAA,KAAGsB,UAAU,6CAA4C,iCACxB2M,EAAO,kBAAgBI,EAAc,mBACnDR,EAAe,UClMjCmC,GAAiB,CAC5B,CACEzb,KAAM,eACN4R,YAAa,0BACb8J,QAAS,CACP,CACEC,OAAQ,sBACRC,WAAY,QACZC,UAAW,GACXC,aAAc,YACdC,kBAAmB,WAErB,CACEJ,OAAQ,2BACRC,WAAY,OACZC,UAAW,EACXC,aAAc,0BACdC,kBAAmB,cAIzB,CACE/b,KAAM,uBACN4R,YACE,mFACF8J,QAAS,CACP,CACEC,OAAQ,WACRC,WAAY,QACZC,UAAW,GACXC,aAAc,oDACdC,kBAAmB,WAErB,CACEJ,OAAQ,YACRC,WAAY,SACZC,WAAY,EACZC,aACE,oEACFC,kBAAmB,iBAIzB,CACE/b,KAAM,iBACN4R,YACE,gGACF8J,QAAS,CACP,CACEC,OAAQ,mBACRC,WAAY,QACZC,UAAW,GACXC,aAAc,oDACdC,kBAAmB,eAErB,CACEJ,OAAQ,iBACRC,WAAY,SACZC,UAAW,GACXC,aACE,uEACFC,kBAAmB,sBAIzB,CACE/b,KAAM,mBACN4R,YAAa,4DACb8J,QAAS,CACP,CACEC,OAAQ,kBACRC,WAAY,SACZC,UAAW,GACXC,aACE,0EACFC,kBAAmB,qBAErB,CACEJ,OAAQ,mBACRC,WAAY,SACZC,WAAY,EACZC,aACE,kEACFC,kBAAmB,iBAIzB,CACE/b,KAAM,qBACN4R,YACE,8EACF8J,QAAS,CACP,CACEC,OAAQ,iBACRC,WAAY,QACZC,UAAW,GACXC,aAAc,qDACdC,kBAAmB,eAErB,CACEJ,OAAQ,kBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,qDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,iBACN4R,YACE,+GACF8J,QAAS,CACP,CACEC,OAAQ,0BACRC,WAAY,QACZC,UAAW,GACXC,aAAc,uDACdC,kBAAmB,eAErB,CACEJ,OAAQ,oBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,uDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,gBACN4R,YACE,2FACF8J,QAAS,CACP,CACEC,OAAQ,cACRC,WAAY,QACZC,UAAW,GACXC,aAAc,+CACdC,kBAAmB,WAErB,CACEJ,OAAQ,kBACRC,WAAY,SACZC,WAAY,EACZC,aACE,sEACFC,kBAAmB,iBAIzB,CACE/b,KAAM,mBACN4R,YACE,sFACF8J,QAAS,CACP,CACEC,OAAQ,mBACRC,WAAY,SACZC,UAAW,GACXC,aAAc,yDACdC,kBAAmB,iBAErB,CACEJ,OAAQ,mBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,sDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,mBACN4R,YACE,+EACF8J,QAAS,CACP,CACEC,OAAQ,wBACRC,WAAY,SACZC,UAAW,GACXC,aACE,8DACFC,kBAAmB,iBAErB,CACEJ,OAAQ,mBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,sDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,iBACN4R,YACE,+EACF8J,QAAS,CACP,CACEC,OAAQ,iBACRC,WAAY,QACZC,UAAW,GACXC,aAAc,mDACdC,kBAAmB,WAErB,CACEJ,OAAQ,gBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,mDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,8BACN4R,YACE,8HACF8J,QAAS,CACP,CACEC,OAAQ,uBACRC,WAAY,OACZC,UAAW,IACXC,aACE,yQACFC,kBAAmB,eAErB,CACEJ,OAAQ,qBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,wDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,mCACN4R,YACE,2HACF8J,QAAS,CACP,CACEC,OAAQ,qBACRC,WAAY,OACZC,UAAW,GACXC,aACE,kNACFC,kBAAmB,YAErB,CACEJ,OAAQ,WACRC,WAAY,SACZC,WAAY,GACZC,aACE,sJACFC,kBAAmB,aAIzB,CACE/b,KAAM,mBACN4R,YACE,+GACF8J,QAAS,CACP,CACEC,OAAQ,iBACRC,WAAY,SACZC,UAAW,GACXC,aACE,kRACFC,kBAAmB,qBAErB,CACEJ,OAAQ,kBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,qDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,sBACN4R,YACE,kGACF8J,QAAS,CACP,CACEC,OAAQ,6BACRC,WAAY,OACZC,UAAW,IACXC,aACE,8YACFC,kBAAmB,eAErB,CACEJ,OAAQ,uBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,0DACdC,kBAAmB,qBAIzB,CACE/b,KAAM,yBACN4R,YACE,uEACF8J,QAAS,CACP,CACEC,OAAQ,gCACRC,WAAY,OACZC,UAAW,GACXC,aACE,8SACFC,kBAAmB,YAErB,CACEJ,OAAQ,oBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,uDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,gBACN4R,YACE,yGACF8J,QAAS,CACP,CACEC,OAAQ,mBACRC,WAAY,OACZC,UAAW,IACXC,aACE,4PACFC,kBAAmB,eAErB,CACEJ,OAAQ,iBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,oDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,mBACN4R,YACE,qGACF8J,QAAS,CACP,CACEC,OAAQ,wBACRC,WAAY,SACZC,UAAW,GACXC,aACE,6OACFC,kBAAmB,WAErB,CACEJ,OAAQ,mBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,sDACdC,kBAAmB,qBAIzB,CACE/b,KAAM,mBACN4R,YACE,6GACF8J,QAAS,CACP,CACEC,OAAQ,qBACRC,WAAY,OACZC,UAAW,GACXC,aACE,sOACFC,kBAAmB,eAErB,CACEJ,OAAQ,mBACRC,WAAY,OACZC,UAAW,EACXC,aAAc,sDACdC,kBAAmB,sBCpWZC,GA5BD,SAAHpa,GAAqB,IAAfuV,EAAQvV,EAARuV,SACT8E,EAAgB,SAACN,GACrBxE,EhBiI6B,SAACwE,GAChC,MAAO,CACLnb,KAAMuI,EAAQmT,aACdzR,QAAS,CACPkR,SACAhR,cAAe,CACbC,UAAWpI,KAAKqI,SAChBC,QAAStI,KAAKqI,SACdE,gBAAiBvI,KAAKqI,SACtBG,kBDmMsB,KiB7UjBmR,CAAkBR,KAKvBS,EAAc5Z,KAAKC,MAAMD,KAAKqI,SAAW4Q,GAAeha,QACxD4a,EAAWZ,GAAeW,GAChC,OACE5Q,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAK4P,IAAI,gCAAgCC,IAAI,kBAC7C9P,IAAAC,cAAA,UAAI,eAAa4Q,EAASrc,KAAK,KAC/BwL,IAAAC,cAAA,WAAM4Q,EAASzK,aACfpG,IAAAC,cAAA,WACC4Q,EAASX,QAAQ9P,IAAI,SAAC0Q,GACrB,OACE9Q,IAAAC,cAAA,UAAQqB,QAAS,kBAAMmP,EAAcK,KAClCA,EAAUX,UAIjBnQ,IAAAC,cAAA,WACAD,IAAAC,cAAA,aCsEO8Q,GAAa,CACxB9X,EAAYC,UACZD,EAAYE,WACZF,EAAYG,MACZH,EAAYI,aACZJ,EAAYK,UACZL,EAAYM,YACZN,EAAYO,WACZP,EAAYQ,UACZR,EAAYS,MACZT,EAAYU,WACZV,EAAYW,iBACZX,EAAYY,SACZZ,EAAYc,iBACZd,EAAYe,UACZf,EAAYgB,SACZhB,EAAYiB,kBAuBD8W,GAAgB,CA5HE,CAC7BzG,MAAO,SACP0G,KAAI,oGAEJC,WAAY,uBACZrc,IAAK,yBACLmB,GAAI,EACJkJ,KAAM,CACJ3H,EAAYC,SACZD,EAAYO,UACZP,EAAYQ,YACZR,EAAYS,eACZT,EAAYU,UACZV,EAAYW,cAIqB,CACnCqS,MAAO,eACP0G,KAAI,iFAEJC,WAAY,iBACZrc,IAAK,+BACLmB,GAAI,EACJkJ,KAAM,CACJ1G,EAAaC,MACbD,EAAaC,MACbD,EAAaC,MACbD,EAAaE,WACbF,EAAaE,WACbF,EAAaE,aAKY,CAC3B6R,MAAO,OACP0G,KAAI,8DACJC,WAAY,+BACZrc,IAAK,uBACLmB,GAAI,EACJkJ,KAAM,CACJ/G,EAAUC,UACVD,EAAUC,UACVD,EAAUC,UACVD,EAAUE,cACVF,EAAUE,cACVF,EAAUE,gBAKgB,CAC5BkS,MAAO,QACP0G,KAAI,0GAEJC,WAAY,oBACZrc,IAAK,wBACLmB,GAAI,EACJkJ,KAAM,CACJvG,EAAWC,SACXD,EAAWC,SACXD,EAAWC,SACXD,EAAWC,SACXD,EAAWE,aACXF,EAAWE,eAIiB,CAC9B0R,MAAO,UACP0G,KAAI,qGACJC,WAAY,iBACZrc,IAAK,0BACLmB,GAAI,EACJkJ,KAAM,CACJpG,EAAaC,QACbD,EAAaC,QACbD,EAAaC,QACbD,EAAaC,QACbD,EAAaE,YACbF,EAAaE,eC1FJmY,GDiHW,CACtBhX,EAAUE,SACVF,EAAUe,aACVf,EAAUW,aACVX,EAAUO,aACVP,EAAUc,aACVd,EAAUgB,UACVhB,EAAUI,YACVJ,EAAUM,cACVN,EAAUG,cACVH,EAAUa,WACVb,EAAUU,WACVV,EAAUiB,aACVjB,EAAUQ,UACVR,EAAUY,UACVZ,EAAUS,YACVT,EAAUC,SACVD,EAAUK,cEAG4W,GAjIF,SAAHhb,GAAmD,IAA7Cib,EAASjb,EAATib,UAAWC,EAAOlb,EAAPkb,QAASC,EAAQnb,EAARmb,SAC1BhW,GAD4CnF,EAARob,SACiBla,GAA/CgE,EAA+ChE,EAAzCmE,EAAyCnE,EAAlCoE,EAAkCpE,EAA1BkE,EAA0BlE,EAAZma,EAAYna,EACrDtC,EAAyDqc,EAAzDrc,KAAMR,EAAmD6c,EAAnD7c,KAAMiD,EAA6C4Z,EAA7C5Z,IAAKC,EAAwC2Z,EAAxC3Z,KAAMC,EAAkC0Z,EAAlC1Z,OAAQY,EAA0B8Y,EAA1B9Y,aAAcX,EAAYyZ,EAAZzZ,IAAK5B,EAAOqb,EAAPrb,GAkCtD0b,EAAe,GAEnB,OAAQ/Z,GACN,KAAK4D,EACHmW,EAAY,GAAAtd,OAAMmE,EAAY,GAAAnE,OAAkB,IAAbmE,EAAgB,YAAY,GAAE,qBACjE,MACF,KAAK+C,EACHoW,EAAY,SAAAtd,OAAYwD,EAAG,UAC3B,MACF,KAAK6D,EACHiW,EAAY,gBACZ,MACF,KAAKhW,EACHgW,EAAY,WAAAtd,OAAcwD,EAAG,WAC7B,MACF,KAAK4D,EACHkW,EAAY,eACZ,MACF,KAAKD,EAEHC,EAAY,YAAAtd,OAAewD,EAAG,gBAC9B,MACF,QACE8Z,EAAY,GAKhB,OACE1R,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,SAEnBvM,IAAAC,cAACM,SAAO0M,OAAM,CAEZ0E,KAAM,CAAEC,GAAI,KACZnR,IAAKzK,EACL6b,WAAY,CACVC,MAAO,EACP/Q,WAAY,CAAE/L,KAAM,SAAUgM,SAAU,IAAK+Q,OAAQ,KAQvD7Q,MAAKxN,YAAA,GA9DC,CACZ0N,WAAY,aACZR,gBAAiB,QACjB2L,QAAS,OACTyF,cAAe,SACfvF,WAAY,SACZwF,gBAAiB,yCACjBC,iBAAkB,SAClBC,eAAgB,SAChBrR,MAAO,QACPwL,OAAQ,QACRK,QAAS,MACTW,OAAQ,WAmDsB,CACtBF,OAAM,aAAAhZ,OACK,WAATY,EACI,UACS,aAATA,EACA,SACS,cAATA,EACA,OACS,aAATA,EACA,QACS,YAATA,EACA,SACA,YAGRsM,QAAS,kBAAMgQ,EAAQD,KAEvBrR,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,OAAQ6F,KAAM,MAAM,GAAAhe,OACrCI,EAAI,KAAAJ,OAtCA,eAsCgBie,OAAO3a,KAEjCsI,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,OAAQ6F,KAAM,MACnCpS,IAAAC,cAAA,MAAIiB,MAAO,CAAEL,MAAO,SAAS,IAAAzM,OAAMY,EAAI,OAEzCgL,IAAAC,cAAA,OAAKiB,MAAO,CAAEL,MAAO,OAAQ0L,QAAS,OAAQ6F,KAAM,MACjD3a,GAAO,EAAI,IAAG,SAAArD,OAAYqD,EAAG,YAEhCuI,IAAAC,cAAA,QAAMiB,MAAO,CAAEqL,QAAS,OAAQ6F,KAAM,MACpCpS,IAAAC,cAAA,OAAKiB,MAAO,CAAEL,MAAO,UAClB,IACA6Q,GAIFL,EAAUxZ,QAAsB,IAAb0Z,EAClBvR,IAAAC,cAAA,WAAK,UAAQoR,EAAUxZ,OAEvBmI,IAAAC,cAAAD,IAAAE,SAAA,WC7DDoS,GAtDF,SAAHlc,GAA+B,IAAzBmc,EAAQnc,EAARmc,SAAU5G,EAAQvV,EAARuV,SAElB6G,EADgBld,EAAQ6b,IACMsB,MAAM,EAAG,GAGvCC,EAAU,SAACC,GACf5e,QAAQC,IAAG,oBAAsB2e,GACjChH,EpBwGyB,SAACgH,GAE5B,OADA5e,QAAQC,IAAG,oBAAsB2e,GAC1B,CACL3d,KAAMuI,EAAQgB,cACdU,QAAS,CACP0T,OACAxT,cAAe,CACbC,UAAWpI,KAAKqI,SAChBC,QAAStI,KAAKqI,SACdE,gBAAiBvI,KAAKqI,SACtBG,kBDkNsB,KqBpUjBoT,CAAcD,KAOzB,OACE3S,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKsB,UAAU,eACbvB,IAAAC,cAAA,YAAA7L,OACMme,EAASzW,MACbkE,IAAAC,cAAA,QAAMiB,MAAO,CAAEL,MAAO,YAAa,QACnCb,IAAAC,cAAA,QAAMiB,MAAO,CAAEL,MAAO,YAAa,UAClC0R,EAASxV,SAASC,IAClB,KACDgD,IAAAC,cAAA,QAAMiB,MAAO,CAAEL,MAAO,YAAa,OAClC0R,EAASxV,SAASnG,IAAI,MAI3BoJ,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,4CACJD,IAAAC,cAAA,WAAK,sGAILD,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTyF,cAAe,MACfxF,eAAgB,SAChBC,WAAY,SACZoG,SAAU,SAGXL,EAAcpS,IAAI,SAACuS,GAClB,OAAO3S,IAAAC,cAACmR,GAAI,CAAC3Q,IAAKkS,EAAK3c,GAAIqb,UAAWsB,EAAMrB,QAASoB,OAGzD1S,IAAAC,cAACoB,EAAY,CAAChB,KAAI,iCAAoCiB,QAvCpC,WACpBvN,QAAQC,IAAG,iBACX2X,EAASlM,UCsBEqT,GArCF,SAAH1c,GAA+B,IAAzBmc,EAAQnc,EAARmc,SAAU5G,EAAQvV,EAARuV,SAWxB,OACE3L,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAK4P,IAAI,+BAA+BC,IAAI,yBAC5C9P,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,4BACJD,IAAAC,cAAA,WAAK,+CACLD,IAAAC,cAAA,WAAK,kCACLD,IAAAC,cAAA,WAAK,gFAILD,IAAAC,cAAA,WAAK,uBAAqBsS,EAASxW,KAAKtH,OAAO,UAC/CuL,IAAAC,cAAA,UACEqB,QAAS,WAjBbqK,EAAS,CACP3W,KAAMuI,EAAQY,gBAmBb,QAGD6B,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQqB,QA/BU,WACpBvN,QAAQC,IAAG,iBACX2X,EAASlM,OA6ByB,gBCuUvBsT,GA9VY,WAAM,IAAApF,EACeC,mBAAS,MAAKC,EAAAvX,YAAAqX,EAAA,GAArDqF,EAAenF,EAAA,GAAEoF,EAAkBpF,EAAA,GAAAG,EACJJ,oBAAS,GAAMK,EAAA3X,YAAA0X,EAAA,GAA9CkF,EAAWjF,EAAA,GAAEkF,EAAclF,EAAA,GAE5BlG,EAAW,CAACrD,GAAUwC,GAAYK,IA6BlC6L,EAAwB,CAC5BxS,gBAAiB,QACjByS,aAAc,MACdvS,MAAO,OACPwS,WAAY,QAGRrH,EAAkBrB,KAClBsB,EAAqBpB,KAETmB,EAAgBrC,KAAKxJ,IAAI,GAyC3C,OACEJ,IAAAC,cAAA,WACED,IAAAC,cAAA,MAAIiB,MAAO,CAAEL,MAAO,UAAW,wBAC/Bb,IAAAC,cAAA,OAAKsB,UAAU,eAAeL,MA3DT,CACvBqL,QAAS,OACTC,eAAgB,WA0DXzE,EAAS3H,IAAI,SAACmT,GAAO,OACpBvT,IAAAC,cAAA,OACEQ,IAAK8S,EAAQvd,GACbuL,UAAS,WAAAnN,OACP4e,IAAoBO,EAAU,WAAa,IAE7CjS,QAAS,kBAxFQ,SAACiS,GAC1BN,EAAmBM,GACnBJ,GAAe,GAsFQK,CAAmBD,IAClCrS,MAAO,CAAEkR,KAAM,IAAK/E,OAAQ,OAAQC,OAAQ,YAE5CtN,IAAAC,cAAA,OACEiB,MAAOkS,EACP7R,UAAWgS,EAAQpN,MAAQ,aAAe,iBAEzCoN,EAAQpN,OACPnG,IAAAC,cAAA,OACE4P,IAAK0D,EAAQpN,MACb2J,IAAKyD,EAAQ/e,KACb0M,MAAO,CAAEJ,MAAO,OAAQwL,OAAQ,OAAQmH,UAAW,SACnDhT,IAAK8S,EAAQvd,MAInBgK,IAAAC,cAAA,KAAGiB,MAAO,CAAEL,MAAO,UAAY0S,EAAQ/e,UAK5C0e,GACClT,IAAAC,cAAA,OAAKiB,MArGQ,CACjBiL,SAAU,QACVC,IAAK,MACLC,KAAM,MACNqH,UAAW,wBACXtQ,WAAY,QACZuJ,QAAS,MACTE,UAAW,kCACXH,OAAQ,IACR7L,MAAO,QACP8S,UAAW,WA4FL3T,IAAAC,cAAA,OACEsB,UAAU,gBACVL,MAAO,CAAEC,SAAU,OAAQkM,OAAQ,SAEnCrN,IAAAC,cAAA,KAAGiB,MAAO,CAAEC,SAAU,OAAQ2L,aAAc,QACzCkG,EAAgBxe,MAEnBwL,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,SACrBvM,IAAAC,cAAA,OACE4P,IAAKmD,EAAgB7M,MACrB2J,IAAKkD,EAAgBxe,KACrB0M,MAAO,CACLJ,MAAO,QACPwL,OAAQ,QACRmH,UAAW,QACXzD,YAAa,MACbD,aAAc,SAEf,IACH/P,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTyF,cAAe,SACfjF,YAAa,SAGf/M,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTC,eAAgB,kBAGlBxM,IAAAC,cAAA,YAAM,UACND,IAAAC,cAAA,YAAO+S,EAAgBpf,QAEzBoM,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTyF,cAAe,SACfvF,WAAY,WAGdzM,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTE,WAAY,SACZK,aAAc,SAGlB9M,IAAAC,cAAA,OACEiB,MAAO,CACLJ,MAAO,QACPwL,OAAQ,OACR1L,gBAAiB,YACjByS,aAAc,MACdjG,OAAQ,yBAGVpN,IAAAC,cAAA,OACEiB,MAAO,CACLJ,MAAK,GAAA1M,OACF4e,EAAgB1N,MAAMC,GACrByN,EAAgB1N,MAAME,OACxB,IAAG,KAEL8G,OAAQ,OACR1L,gBAAiB,YACjByS,aAAc,UAIpBrT,IAAAC,cAAA,OAAKiB,MAAO,CAAE0S,UAAW,MAAOzS,SAAU,SACvC6R,EAAgB1N,MAAMC,GAAG,KAAG,IAC5ByN,EAAgB1N,MAAME,OACnBwN,EAAgB1N,MAAME,OACtB,eAIVxF,IAAAC,cAAA,OACEiB,MAAO,CAAEqL,QAAS,OAAQC,eAAgB,kBAE1CxM,IAAAC,cAAA,YAAM,QACND,IAAAC,cAAA,YAAO+S,EAAgB1N,MAAMG,OAAOjR,OAEtCwL,IAAAC,cAAA,OACEiB,MAAO,CAAEqL,QAAS,OAAQC,eAAgB,kBAE1CxM,IAAAC,cAAA,YAAM,QACND,IAAAC,cAAA,YAAO+S,EAAgB1N,MAAMI,UAE/B1F,IAAAC,cAAA,OACEiB,MAAO,CAAEqL,QAAS,OAAQC,eAAgB,kBAE1CxM,IAAAC,cAAA,YAAM,UACND,IAAAC,cAAA,YAAO+S,EAAgB1N,MAAMxF,SAGhCkT,EAAgBhO,eAChB,IACAgO,EAAgB/N,cAAc,KAC9B+N,EAAgB9N,gBAAgB,KAC5B,KAETlF,IAAAC,cAAA,WACED,IAAAC,cAAA,QAAMiB,MAAO,CAAE6L,YAAa,SAAU,QAC9BiG,EAAgBpf,OAExBoM,IAAAC,cAAA,QAAMiB,MAAO,CAAE6L,YAAa,SAAU,QAC9BiG,EAAgBjN,YAExB/F,IAAAC,cAAA,YAAM,wBACND,IAAAC,cAAA,OACEiB,MAAO,CACLJ,MAAO,OACPF,gBAAiB,OACjB0L,OAAQ,OACR+G,aAAc,MACdjG,OAAQ,yBAGVpN,IAAAC,cAAA,OACEiB,MAAO,CACLJ,MAAK,GAAA1M,OAAK,GAAE,KACZwM,gBAAiB,YACjB0L,OAAQ,OACR+G,aAAc,WAMtBrT,IAAAC,cAAA,WACED,IAAAC,cAAA,KAAGiB,MAAO,CAAEyL,QAAS,SACnB3M,IAAAC,cAAA,YAAO+S,EAAgB5M,eAG3BpG,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTyF,cAAe,SACf2B,UAAW,OACXE,IAAK,QAGP7T,IAAAC,cAAA,WAAK,WACLD,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTC,eAAgB,aAChBqG,SAAU,OACVgB,IAAG,QAGJb,EAAgBhN,MAAM5F,IAAI,SAAC0C,EAAMxC,GAAK,OACrCN,IAAAC,cAAA,OAAKiB,MAAO,CAAEyL,QAAS,QACrB3M,IAAAC,cAAA,QACEQ,IAAKH,EACLY,MAAO,CACLN,gBAAiB,aACjByS,aAAc,MACd1G,QAAS,MACT9L,MAAO,cAGRiC,EAAKtO,UAKdwL,IAAAC,cAAA,WACED,IAAAC,cAAA,WAAK,mBACLD,IAAAC,cAAA,YACED,IAAAC,cAAA,OACEiB,MAAO,CAAEL,MAAO,YAAagT,IAAK,MAAOtH,QAAS,SAEjDyG,EAAgB/M,eAAe7F,IAAI,SAAC0C,EAAMxC,GAAK,OAC9CN,IAAAC,cAAA,OACEQ,IAAKH,EACLY,MAAO,CACLqL,QAAS,OACTE,WAAY,SAEZ7L,gBAAiB,QACjByS,aAAc,KACd1G,QAAS,QAGX3M,IAAAC,cAAA,OACEiB,MAAO,CACLN,gBAAiB,OACjByS,aAAc,MACdvS,MAAO,MACPwL,OAAQ,MACRS,YAAa,SAIjB/M,IAAAC,cAAA,YAAO6C,SAMjB9C,IAAAC,cAAA,YACED,IAAAC,cAAA,WAAK,YACLD,IAAAC,cAAA,QACEiB,MAAO,CACLN,gBAAiB,aACjByS,aAAc,MACd1G,QAAS,MACT9L,MAAO,UAGRmS,EAAgB9M,mBAIvBlG,IAAAC,cAAA,OAAKiB,MAAO,CAAEyL,QAAS,QACrB3M,IAAAC,cAAA,UAAQqB,QAAS,kBAvSX2K,EAAgBrC,KAAKxJ,IAAI,GAEtB,SAAC4S,GACpBjf,QAAQC,IAAG,yBAAAI,OACgB4e,EAAgBxe,MACzCwe,GAGFG,GAAe,GAEf,IAAMW,ECjEuB,SAACP,EAASxR,EAAWgS,GAEpD,GAAKA,EAmBE,CAEL,GAAwB,OAApBhS,EAAUgS,GAIZ,OAFAhS,EAAUgS,GAAQR,EAEXxR,EAKPhO,QAAQ0O,MAAK,QAAArO,OAAS2f,EAAI,8BA9BnB,CACT,QAAAC,EAAA,EAAAC,EAAwCve,OAAOC,QAAQoM,GAAUiS,EAAAC,EAAAhe,OAAA+d,IAAE,KAAA5d,EAAA6d,EAAAD,GAAA3d,EAAAC,YAAAF,EAAA,GAAvD8d,EAAS7d,EAAA,GACnB,GAAqB,OADYA,EAAA,GAO/B,OAJA0L,EAAUmS,GAAaX,EACvBxf,QAAQC,IAAG,SAAAI,OAAUmf,EAAQ/e,KAAI,mBAAAJ,OAAkB8f,EAAS,MAGrDnS,EASXhO,QAAQ0O,MAAM,kCD8CgB0R,CAC5BnB,EACA/G,EAAgBlK,WAUZ2L,EAAiBpa,EAJAO,EAJHH,YAAA,GACfuY,EAAe,CAClBlK,UAAW+R,IAEsC,CACjDhL,OAAQxW,EAAOI,IACfqW,QAAS,OAEwC,GAS7CqL,EAAQ1gB,YAAA,GAAQga,GACtB3Z,QAAQC,IAAG,gBAAkBogB,GAG7BlI,EAAmB,CACjBlX,KAAMuI,GAAQ6N,eACdnM,QAASmV,MAkQmCpB,KAAkB,UAGtDhT,IAAAC,cAAA,UAAQqB,QA1UC,WACnB6R,GAAe,KAyU0B,gBE3S9BkB,GAjDA,WACb,OACErU,IAAAC,cAAA,WAAK,eAEHD,IAAAC,cAAC8S,GAAkB,QCRZuB,UAA8B,SAACC,EAAUzd,EAAMc,GAGxD,OAF8BtC,EAAQif,EAAUzd,GACE2b,MAAM,EAAG7a,KC2EhD4c,OAxEf,SAAmBpe,GAAWA,EAARmc,SAAsB,IAAZ5G,EAAQvV,EAARuV,SAWxB8I,EAAgBH,GACpBtD,GACAha,KAAKqI,SACL,GAGF,OADAtL,QAAQC,IAAI,gBAAiBygB,GAE3BzU,IAAAC,cAAA,OAAKsB,UAAU,yBACbvB,IAAAC,cAAA,MAAIsB,UAAU,qBAAoB,mDAGlCvB,IAAAC,cAAA,OAAKsB,UAAU,oBACZkT,EAAcrU,IAAI,SAACsU,GAAY,IACtBnK,EAAuCmK,EAAvCnK,MAAO0G,EAAgCyD,EAAhCzD,KAAMC,EAA0BwD,EAA1BxD,WAAYrc,EAAc6f,EAAd7f,IAAKqK,EAASwV,EAATxV,KACtC,OACEc,IAAAC,cAACM,SAAO0M,OAAM,CACZ1L,UAAU,iBACVb,QAAS,CAAEgP,QAAS,IACpB/O,QAAS,CAAE+O,QAAS,GACpB3O,WAAY,CAAEE,MAAO,GAAKD,SAAU,GACpC6Q,WAAY,CACVC,MAAO,KAEP/Q,WAAY,CACV4T,KAAMC,MAGVC,SAAU,CACR/C,MAAO,IAGTxQ,QAAS,kBAzCiBwT,EAyCkB5V,EAxCtDnL,QAAQC,IAAG,mBAAqB8gB,GAChCnJ,EAAS5M,EAAc+V,SACvBnJ,EAASlM,KAH0B,IAACqV,IA2C1B9U,IAAAC,cAAA,OAAKsB,UAAU,qBACbvB,IAAAC,cAAA,OAAKsB,UAAU,cACbvB,IAAAC,cAAA,cAASsK,IAEXvK,IAAAC,cAAA,OAAK4P,IAAKhb,EAAKib,IAAG,GAAA1b,OAAKmW,EAAK,SAAShJ,UAAU,gBAEjDvB,IAAAC,cAAA,OAAKsB,UAAU,oBAAoB0P,GACnCjR,IAAAC,cAAA,OAAKsB,UAAU,qBAAoB,cACrBrC,EAAKjJ,OAAO,UAAQ,KAElC+J,IAAAC,cAAA,MAAIsB,UAAU,kBACXrC,EAAKkB,IAAI,SAACuS,GACT,OAAO3S,IAAAC,cAAA,UAAK0S,EAAKne,SAIrBwL,IAAAC,cAAA,OAAKsB,UAAU,sBAAsB2P,OAK7ClR,IAAAC,cAAA,UAAQsB,UAAU,oBAAoBD,QA3DpB,WACpBvN,QAAQC,IAAG,iBACX2X,EAASlM,OAyDuD,2BCRvDsV,UAAY,CACvB,CACEC,MAAO,OACP3U,KAAM,4BACN4U,IAAK,OACLC,QAAS,CACP,CACE7U,KAAM,0BACNqG,OAAQ,SACRyO,eAtEoB,CAC1B,CAAEH,MAAO,OAAQ3U,KAAM,4BAA6B4U,IAAK,QACzD,CACED,MAAO,OACP3U,KAAM,wDACN4U,IAAK,QACLC,QAAS,CACP,CACE7U,KAAM,iBACNqG,OAAQ,SAERyO,eCdiB,CACrB,CAAEH,MAAO,OAAQ3U,KAAM,gCAAiC4U,IAAK,QAC7D,CAAED,MAAO,OAAQ3U,KAAM,mDAAoD4U,IAAK,SAChF,CAAED,MAAO,OAAQ3U,KAAM,2CAA4C4U,IAAK,QACxE,CAAED,MAAO,OAAQ3U,KAAM,kBAAmB4U,IAAK,YDY7C,CACE5U,KAAM,mBAIZ,CAAE2U,MAAO,OAAQ3U,KAAM,2BAA4B4U,IAAK,QACxD,CACED,MAAO,OACP3U,KAAM,0DACN4U,IAAK,SAEP,CACED,MAAO,OACP3U,KAAM,sEACN4U,IAAK,QAEP,CACED,MAAO,OACP3U,KAAM,+FACN4U,IAAK,SAEP,CACED,MAAO,OACP3U,KAAM,kFACN4U,IAAK,QAEP,CACED,MAAO,OACP3U,KAAM,iFACN4U,IAAK,SAEP,CACED,MAAO,OACP3U,KAAM,6EACN4U,IAAK,QAEP,CACED,MAAO,OACP3U,KAAM,uFACN4U,IAAK,SAEP,CACED,MAAO,OACP3U,KAAM,qEACN4U,IAAK,UAgBH,CACE5U,KAAM,mBAIZ,CAAE2U,MAAO,OAAQ3U,KAAM,4BAA6B4U,IAAK,QACzD,CAAED,MAAO,OAAQ3U,KAAM,sBAAuB4U,IAAK,SACnD,CAAED,MAAO,OAAQ3U,KAAM,4BAA6B4U,IAAK,QACzD,CAAED,MAAO,OAAQ3U,KAAM,kBAAmB4U,IAAK,UAC/C,CACED,MAAO,OACP3U,KAAM,2DACN4U,IAAK,UE8BMG,GA9GD,SAAHhf,GAAcA,EAARmc,SAAuC,IAA7B5G,EAAQvV,EAARuV,SAKxBgC,GAL8CvX,EAAZif,aAOXzH,mBAAS,IAAEC,EAAAvX,YAAAqX,EAAA,GAA5B2H,EAAIzH,EAAA,GAAE0H,EAAO1H,EAAA,GAEpBG,EAE0BJ,mBAASmH,IAAU9G,EAAA3X,YAAA0X,EAAA,GAAtCwH,EAAKvH,EAAA,GAAEwH,EAAQxH,EAAA,GAUtBla,QAAQC,IAAI,cAAe+gB,GAAWO,EAAMP,GAAU,GAAGG,QAAQ,IAoBjE,OACElV,IAAAC,cAAA,OAAKsB,UAAU,eACbvB,IAAAC,cAAA,OAAKsB,UAAU,mBACbvB,IAAAC,cAAA,OACEsB,UAAS,2CAAAnN,OAA6CohB,EAAMF,GAAML,MAElEjV,IAAAC,cAAA,OACEsB,UAAU,YACVsO,IAAG,WAAAzb,OAAaohB,EAAMF,GAAMN,MAAK,QACjClF,IAAG,GAAA1b,OAAKohB,EAAMF,GAAMN,MAAK,cAG7BhV,IAAAC,cAAA,OACEsB,UAAS,iDAAAnN,OAAmDohB,EAAMF,GAAML,MAExEjV,IAAAC,cAAA,OAAKsB,UAAU,gBACbvB,IAAAC,cAAA,UAAKuV,EAAMF,GAAMN,OACjBhV,IAAAC,cAAA,OAAKsB,UAAU,eACbvB,IAAAC,cAACP,EAAM,CACLE,KAAK,KACLD,OAAQ6V,EAAMF,GAAMjV,KACpBI,IAAK+U,EAAMF,GAAMjV,QAGrBL,IAAAC,cAAA,OAAKsB,UAAU,iBACbvB,IAAAC,cAAA,OAAKsB,UAAU,kBACZiU,EAAMF,GAAMJ,QACTM,EAAMF,GAAMJ,QAAQ9U,IAAI,SAAC+J,GACvB,OACEnK,IAAAC,cAACoB,EAAY,CACXhB,KAAM8J,EAAO9J,KACbiB,QAAS,kBAjDX,SAAC6I,GACrB,OAAQA,EAAOzD,QACb,IAAK,SAEH,MACF,IAAK,SAEH3S,QAAQC,IAAI,kBAAmBmW,GAC/BsL,EAAStL,EAAOgL,gBAChB,MACF,IAAK,SAEH,MACF,QACEphB,QAAQC,IAAG,kDAmCsByc,CAActG,QAInC,MAENnK,IAAAC,cAACoB,EAAY,CACXE,UAAU,iBACVlB,KAAI,KACJiB,QApEO,WACfgU,EAAOE,EAAMvf,OAAS,EACxBsf,EAAQD,EAAO,IAEfC,EAAQ,GAbV5J,EAASlM,eCVPiW,GAAuB,CAC3BtI,OAAQ,oBACRb,QAAS,OACTyF,cAAe,SACfvF,WAAY,UACZE,QAAS,OACTU,OAAQ,QACRzM,gBAAiB,QAGb+U,GAAkB,CACtBpJ,QAAS,OACTC,eAAgB,gBAChBM,aAAc,OAWV8I,GAAmB,CACvB5I,WAAY,QAGR6I,GAAwB,CAC5BtJ,QAAS,OACTyF,cAAe,SACfvF,WAAY,aACZqJ,WAAY,QAoCCC,OAjCf,SAAgB3f,GAAsB,IAAnB5B,EAAI4B,EAAJ5B,KAAMwhB,EAAS5f,EAAT4f,UACjBC,EACJjW,IAAAC,cAAA,OACEiB,MAAO,CACLN,gBAAiB,QACjBE,MAAO,OACPwL,OAAQ,OACRS,YAAa,UAMnB,OAAI7I,MAAMgS,QAAQF,GAEdhW,IAAAC,cAAA,OAAKiB,MAAKxN,YAAA,GAAOgiB,GAAoB,CAAE9U,gBAAiB,aACtDZ,IAAAC,cAAA,OAAKiB,MAAOyU,IACTM,EACDjW,IAAAC,cAAA,OAAKiB,MAAO0U,IAAmBphB,IAEjCwL,IAAAC,cAAA,OAAKiB,MAAO2U,IACTG,EAAU5V,IAAI,SAAC+V,EAAS7V,GAAK,OAC5BN,IAAAC,cAAA,OAAKQ,IAAKH,GAAQ6V,QAM1BpiB,QAAQ0O,MAAK,8BAAArO,OAA+BI,EAAI,KAAKwhB,GAC9C,OCvBEI,GAAa,CACxBC,IAAK,MACLC,iBAAkB,aAClBC,eAAgB,SAChBC,eAAgB,QAChBC,aAAc,SACdC,IAAK,OAwBMC,GAAc,SAAdA,EACX7T,EACAmJ,EACAC,EACA0K,EACAlN,GAMA,IAAMmN,EAAgB5K,EAAgB3C,SAASvB,SAAS,GAAGtS,IAmB3D,OAAQiU,GACN,KAAK0M,GAAWC,IACdtiB,QAAQC,IAAG,qBAAuB,OAIlC,IAAM8iB,EAAe7K,EAAgBrC,KAAKC,OAAO7N,OAK3C+a,EAAWjU,EAAKpL,KAAKsE,OAG3B,GAFAjI,QAAQC,IAAG,WAAAI,OAAY2iB,EAAQ,wBAAA3iB,OAAuB0iB,IAElDA,EAAeC,EAAU,CAC3BhjB,QAAQC,IAAG,GAAAI,OACN0iB,EAAY,KAAA1iB,OAAI2iB,EAAQ,kDAG7B,IAAMC,EAAWtjB,YAAA,GACZuY,EAAe,CAClBnP,OAAMpJ,YAAA,GACDuY,EAAgBnP,OAAM,CACzBuN,QAAQ,EACR/G,QAAO,sBAAAlP,OAAwBwiB,EAAKpiB,KAAI,wBACxCkU,QAAS,CACP,CACE4B,MAAO,UACPhJ,QAAS,WACP,IAhFsB2V,EAgFhBC,GAhFgBD,EAiFIhL,EAhF1CvY,YAAA,GACKujB,EAAS,CACZna,OAAMpJ,YAAA,GACDujB,EAAUna,OAAM,CACnBuN,QAAQ,OA8EI,OADAtW,QAAQC,IAAIkjB,GACLhL,EAAmB,CACxBjN,QAASiY,EACTliB,KAAMuI,GAAQ6N,kBAGlBxK,gBAAiB,UACjBC,MAAO,SAGX0J,MAAO,YACPC,OAAQ,4CAIZ,OAAO0B,EAAmB,CACxBjN,QAAS+X,EACThiB,KAAMuI,GAAQ6N,iBAGhB,IAAM+L,EAA2BL,EAAeC,EAChDhjB,QAAQC,IAAG,qBAAAI,OACY0iB,EAAY,KAAA1iB,OAAI2iB,EAAQ,OAAA3iB,OAAM+iB,IAErD,IAAMC,EAAe1jB,YAAA,GAChBuY,EAAe,CAClBrC,KAAIlW,YAAA,GACCuY,EAAgBrC,KAAI,CACvBC,OAAMnW,YAAA,GACDuY,EAAgBrC,KAAKC,OAAM,CAC9B7N,OAAQmb,QAIdpjB,QAAQC,IAAI,yCAA0CojB,GAEtD,IAAMC,EAAmB3jB,YAAA,GACpB0jB,EAAe,CAClBta,OAAMpJ,YAAA,GACD0jB,EAAgBta,OAAM,CACzBuN,QAAQ,EACR/G,QAAO,GAAAlP,OAAK2iB,EAAQ,+BAAA3iB,OAClBwiB,EAAKpiB,KAAI,UAAAJ,OAAS0O,EAAKtO,MACzBkU,QAAS,CACP,CACE4B,MAAO,OACPhJ,QAAS,WAIP,IAAM4V,EAAgBxjB,YAAA,GACjB0jB,EAAe,CAClBta,OAAMpJ,YAAA,GACD0jB,EAAgBta,OAAM,CACzBuN,QAAQ,MAGZsM,EACE7T,EACAoU,EACAhL,EACA0K,EACAR,GAAWE,mBAGf1V,gBAAiB,UACjBC,MAAO,QAET,CACEyJ,MAAO,UACPhJ,QAAS,WAIP,IAAM4V,EAAgBxjB,YAAA,GACjB0jB,EAAe,CAClBta,OAAMpJ,YAAA,GACD0jB,EAAgBta,OAAM,CACzBuN,QAAQ,MAKZsM,EACE7T,EACAoU,EACAhL,EACA0K,EACAR,GAAWE,mBAGf1V,gBAAiB,UACjBC,MAAO,QAET,CACEyJ,MAAO,UACPhJ,QAAS,WAIP,IAAM4V,EAAgBxjB,YAAA,GACjB0jB,EAAe,CAClBta,OAAMpJ,YAAA,GACD0jB,EAAgBta,OAAM,CACzBuN,QAAQ,MAKZsM,EACE7T,EAEAoU,EACAhL,EACA0K,EACAR,GAAWE,mBAGf1V,gBAAiB,UACjBC,MAAO,SAGX0J,MAAO,YACPC,OAAQ,mBAKZ,OADAzW,QAAQC,IAAI,8BAA+BqjB,GACpCnL,EAAmB,CACxBjN,QAASoY,EACTriB,KAAMuI,GAAQ6N,iBASpB,KAAKgL,GAAWE,iBACdviB,QAAQC,IAAG,8BAAgCiY,GAG3C,IAAMqL,EAASxU,EAAK7N,OACpBlB,QAAQC,IACN,OAAM,6BAAAI,OACuBkjB,EAAM,WAAAljB,OACjCwiB,EAAKtR,MAAMG,OAAM,OAAArR,OACbkjB,EAAM,+DAAAljB,OACgCyiB,EAAcvR,MAAMC,GAAE,kBAAAnR,OAC7DyiB,EAAcvR,MAAMC,GAAK+R,IAmBhC,MACF,KAAKlB,GAAWK,aAEd,IAAMxhB,EAAS6N,EAAK7N,OAKpB4hB,EAAcvR,MAAMC,IAAMtQ,EAC1B,MAEF,KAAKmhB,GAAWI,eACdziB,QAAQC,IAAG,kBAAAI,OAAmB0O,EAAKnL,OAAO+O,QAAM,OAAY5D,GAE5D/O,QAAQC,IAAG,qCAEX,IAAMujB,EAAavgB,KAAKqI,UAAYmY,WAAW1U,EAAKnL,OAAO8O,QAAU,IACrE1S,QAAQC,IAAG,iBAAAI,OAAkBmjB,IAG7B,MACF,KAAKnB,GAAWqB,gBAGd,GAAI3U,EAAKnL,QAAU4f,EAMjB,OALezU,EAAKnL,OAAO+O,QAMzB,IAAK,QAGH3S,QAAQC,IAAG,qBAAAI,OAAsByiB,EAAcriB,OAK/CqiB,EAAc/hB,OAAO4iB,OAAQ,EAC7B,MACF,IAAK,OAGHb,EAAcvR,MAAMG,QAAU,EAChC,QACE1R,QAAQC,IAAG,uCAOjB,MACF,KAAKoiB,GAAWM,IACd3iB,QAAQC,IAAG,kBACX,MAEF,QAEE,OADAD,QAAQC,IAAG,wCACJiY,EAeX,OATI4K,EAAcvR,MAAMC,GASxB7R,YAAA,GACKuY,EAAe,CAClB3C,SAAQ5V,YAAA,GACHuY,EAAgB3C,SAAQ,CAC3BvB,SAAQ,CAAG8O,GAAaziB,OAAAsC,YAAKuV,EAAgB3C,SAASvB,SAAS0K,MAAM,UC/K5DkF,OArMf,SAAwBvhB,GAA+D,IAA5DqP,EAAMrP,EAANqP,OAAQwG,EAAe7V,EAAf6V,gBAAiBC,EAAkB9V,EAAlB8V,mBAAoB0L,EAAWxhB,EAAXwhB,YACtEjK,EACoCC,mBAAS,SAAQC,EAAAvX,YAAAqX,EAAA,GAA9CkK,EAAUhK,EAAA,GAAEiK,EAAajK,EAAA,GAEhC9Z,QAAQC,IAAI,UAAWyR,GACvB1R,QAAQC,IAAI,mBAAoBiY,GAa5BxG,EAVFjR,KAH+C,IAI/CQ,EASEyQ,EATFzQ,KACAC,EAQEwQ,EARFxQ,OACA6K,EAOE2F,EAPF3F,MACAiY,EAMEtS,EANFsS,KACApgB,EAKE8N,EALF9N,OACAgP,EAIElB,EAJFkB,SACAC,EAGEnB,EAHFmB,QACAC,EAEEpB,EAFFoB,UACAE,EACEtB,EADFsB,SAwCIiR,EAAc,SAAClV,GACnB,OACE9C,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,OAAQyF,cAAe,WAC5ChS,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,SACrBvM,IAAAC,cAAA,WACG8X,EACAza,GAEH0C,IAAAC,cAAA,WAAK,KAAGH,GACRE,IAAAC,cAAA,WAAMhL,GACN+K,IAAAC,cAAA,WAAMjL,IAERgL,IAAAC,cAAA,WAAK,WAAStI,EAAOyO,aACrBpG,IAAAC,cAAA,WAAK,aAAW0G,GAChB3G,IAAAC,cAAA,WAAK,YAAU2G,EAAQqR,KAAK,OAC5BjY,IAAAC,cAAA,UACEiB,MAAO,CACLN,gBAAiB,UACjBC,MAAO,OACPyM,OAAQ,UACRX,QAAS,UACTxL,SAAU,OACV6L,WAAY,OACZqG,aAAc,MACdxG,UAAW,+BAEbvL,QAAS,kBA/DD,SAACwB,EAAM8T,GAErBgB,IAGA7jB,QAAQC,IAAG,kGAGT8O,EACAmJ,EACAC,EACA0K,EACAR,GAAWC,KAGb,IAAM6B,EAAcvB,GAClB7T,EACAmJ,EACAC,EACA0K,EACAR,GAAWC,KAEbtiB,QAAQC,IAAI,sBAAuBkkB,GACnChM,EAAmB,CAAEjN,QAASiZ,EAAaljB,KAAMuI,GAAQ6N,iBAyCjD+M,CAAQ1S,EAAQwG,EAAgBlK,UAAUP,GAAMC,WAEnD,SAsDP,OACEzB,IAAAC,cAAA,OAAKiB,MAAKxN,YAAA,GAAOgiB,GAAoB,CAAE9U,gBAAiB,aACtDZ,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,SACrBvM,IAAAC,cAAA,OACEiB,MAAO,CACLN,gBAAgC,UAAfiX,EAAyB,UAAY,UACtDhX,MAAsB,UAAfgX,EAAyB,OAAS,OACzCvK,OAAQ,UACRX,QAAS,UACTxL,SAAU,OACV6L,WAAY,OACZqG,aAAc,MACdxG,UAAW,8BACXQ,OAAQ,WAEV/L,QAAS,kBAAMwW,EAAc,WAE5BrS,EAAOjR,MAEVwL,IAAAC,cAAA,OACEiB,MAAO,CACLN,gBAAgC,aAAfiX,EAA4B,UAAY,UACzDhX,MAAsB,aAAfgX,EAA4B,OAAS,OAC5CvK,OAAQ,UACRX,QAAS,UACTxL,SAAU,OACV6L,WAAY,OACZqG,aAAc,MACdxG,UAAW,8BACXQ,OAAQ,WAEV/L,QAAS,kBAAMwW,EAAc,cAE5B/Q,EAASvS,MAEZwL,IAAAC,cAAA,OACEiB,MAAO,CACLN,gBAAgC,cAAfiX,EAA6B,UAAY,UAC1DhX,MAAsB,cAAfgX,EAA6B,OAAS,OAC7CvK,OAAQ,UACRX,QAAS,UACTxL,SAAU,OACV6L,WAAY,OACZqG,aAAc,MACdxG,UAAW,8BACXQ,OAAQ,WAEV/L,QAAS,kBAAMwW,EAAc,eAE5BjR,EAAUrS,OAzDE,UAAfqjB,EACKG,IACiB,aAAfH,EAvCT7X,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,OAAQyF,cAAe,WAC5ChS,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,SACrBvM,IAAAC,cAAA,WACG8G,EAASgR,KACTza,GAEH0C,IAAAC,cAAA,WAAK,UAAQ8G,EAASjH,OACtBE,IAAAC,cAAA,WAAM8G,EAAS9R,OAAO,OACtB+K,IAAAC,cAAA,WAAM8G,EAAS/R,OAEjBgL,IAAAC,cAAA,WAAK,WAAS8G,EAASpP,OAAOyO,aAC9BpG,IAAAC,cAAA,WAAK,WAAS8G,EAASpP,OAAO8O,QAC9BzG,IAAAC,cAAA,WAAK,WAAS8G,EAASpP,OAAO+O,QAC9B1G,IAAAC,cAAA,WAAK,YAAU8G,EAASH,QAAQqR,KAAK,OACrCjY,IAAAC,cAAA,UACEiB,MAAO,CACLN,gBAAiB,UACjBC,MAAO,OACPyM,OAAQ,UACRX,QAAS,UACTxL,SAAU,OACV6L,WAAY,OACZqG,aAAc,MACdxG,UAAW,gCAEd,QAgBqB,cAAfgL,EARJ7X,IAAAC,cAAA,WAAK,sBAQL,IA+DLyV,GAAuB,CAC3BtI,OAAQ,oBACRb,QAAS,OACTyF,cAAe,SACfvF,WAAY,UACZE,QAAS,OACTU,OAAQ,QACRzM,gBAAiB,QC9MbwX,IAFqD5W,GAAnDC,OAAmDD,GAA3CE,OAA2CF,GAAnCG,OAAmCH,GAA3BI,OAA2BJ,GAAnBK,OAAmBL,GAAXM,OAE5B,CAClBuW,QAAS,UACTC,cAAe,eACfC,aAAc,gBAgIhB,IAAMC,GAAoB,CACxBjM,QAAS,OACTE,WAAY,SACZK,aAAc,QAGV2L,GAAqB,CACzB3X,MAAO,OACPwL,OAAQ,OACR1L,gBAAiB,QACjBmM,YAAa,QAGT2L,GAAmB,CACvBvX,SAAU,OACV6L,WAAY,QAGC2L,GA/If,SAAmB5M,GAAO,IAAA6M,EAAAjL,EACcC,mBAASwK,GAAYC,SAAQxK,EAAAvX,YAAAqX,EAAA,GAA5DkL,EAAWhL,EAAA,GAAEiL,EAAcjL,EAAA,GAK5BkL,EAAY,SAACC,GAAU,OAC3BhZ,IAAAC,cAAA,OACEQ,IAAKuY,EACL1X,QAAS,WANXwX,EAM4BE,IAC1B9X,MAAO,CACLoM,OAAQ,UACRX,QAAS,OACT/L,gBAAiBiY,IAAgBG,EAAa,UAAY,UAC1DnY,MAAOgY,IAAgBG,EAAa,OAAS,OAC7CjM,YAAa,SAGdkM,EAAYD,GAAY1O,QAGvB2B,EAAkBrB,KAClBsB,EAAqBpB,KAErBmO,GAAWL,EAAA,GAAA3W,aAAA2W,EACdR,GAAYC,QAAU,CACrB/N,MAAO,UACP4O,QACElZ,IAAAC,cAAAD,IAAAE,SAAA,KACG6L,EAAMoN,YAAYnT,MAAM5F,IAAI,SAAC0C,GAAI,OAChC9C,IAAAC,cAAC0X,GAAe,CACdlS,OAAQ3C,EACRmJ,gBAAiBA,EACjBC,mBAAoBA,EACpB0L,YAAa7L,EAAM6L,mBAK5B3V,aAAA2W,EACAR,GAAYE,cAAgB,CAC3BhO,MAAO,gBACP4O,QACElZ,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAC8V,GAAO,CAACvhB,KAAM,YAAawhB,UAAW,CAAC,SAAU,WAClDhW,IAAAC,cAAC8V,GAAO,CAACvhB,KAAM,YAAawhB,UAAW,CAAC,aACxChW,IAAAC,cAAC8V,GAAO,CAACvhB,KAAM,YAAawhB,UAAW,CAAC,YAAa,WACrDhW,IAAAC,cAAC8V,GAAO,CAACvhB,KAAM,YAAawhB,UAAW,CAAC,eACxChW,IAAAC,cAAC8V,GAAO,CAACvhB,KAAM,YAAawhB,UAAW,CAAC,kBAG7C/T,aAAA2W,EACAR,GAAYG,aAAe,CAC1BjO,MAAO,eACP4O,QACElZ,IAAAC,cAAA,WAAK,6DAER2Y,GAGH,OAAO7M,EAAMqN,QACXpZ,IAAAC,cAAA,OACEiB,MAAO,CACLiL,SAAU,QACVC,IAAK,EACLC,KAAM,EACNvL,MAAO,OACPwL,OAAQ,QACR1L,gBAAiB,qBACjB2L,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,MAGV1M,IAAAC,cAAA,OACEiB,MAAO,CACLiL,SAAU,WACVQ,QAAS,OACT/L,gBAAiB,UACjBE,MAAO,MACP8L,SAAU,QACVC,UAAW,gCAGb7M,IAAAC,cAAA,OAAKiB,MAAOsX,IACVxY,IAAAC,cAAA,OAAKiB,MAAOuX,IAAqB,KACjCzY,IAAAC,cAAA,OAAKiB,MAAOwX,IAAmBO,EAAYJ,GAAavO,QAE1DtK,IAAAC,cAAA,OACEiB,MAAO,CACLmY,UAAW,QACXC,UAAW,SAGZL,EAAYJ,GAAaK,SAE5BlZ,IAAAC,cAAA,OAAKiB,MAAO,CAAE0S,UAAW,SACtBle,OAAO6jB,OAAOnB,IAAahY,IAAI,SAAC4Y,GAAU,OACzCD,EAAUC,MAGdhZ,IAAAC,cAAA,OAAKiB,MAAO,CAAE0S,UAAW,UAGzB5T,IAAAC,cAAA,UACEiB,MAAO,CACLN,gBAAiB,UACjBwM,OAAQ,OACRvM,MAAO,OACP8L,QAAS,YACTW,OAAQ,UACRsG,UAAW,QAEbtS,QAAS,kBAAMyK,EAAM6L,gBACtB,WAML,ICvIE4B,UAAS,CACbC,gBAAiB,CACfrM,OAAQ,oBACRb,QAAS,OACTyF,cAAe,SACfvF,WAAY,UACZE,QAAS,OACTU,OAAQ,QACRzM,gBAAiB,OACjBiM,UAAW,+BACX9L,WAAY,kBAEd2Y,qBAAsB,CACpBhG,UAAW,oBAEbiG,WAAY,CACVpN,QAAS,OACTC,eAAgB,gBAChBM,aAAc,OAEhB8M,WAAY,CACV5M,WAAY,QAEd6M,aAAc,CACZzH,KAAM,EACNuB,UAAW,SAEbmG,kBAAmB,CACjB1H,KAAM,EACNuB,UAAW,OACX9S,MAAO,SAETkZ,iBAAkB,CAChBC,UAAW,WACXrG,UAAW,SAEb1G,OAAQ,CACNrM,gBAAiB,UACjBwM,OAAQ,OACRvM,MAAO,OACP8L,QAAS,YACTW,OAAQ,UACRsG,UAAW,UA4GAqG,GAxGK,SAAH7jB,GASX,IAJJ8jB,EAAa9jB,EAAb8jB,cACAC,EAAgB/jB,EAAhB+jB,iBACAC,EAAkBhkB,EAAlBgkB,mBACA3U,EAAMrP,EAANqP,OAEA1R,QAAQC,IAAI,iBAAkByR,GAsC9B,IAEEjR,EAWEiR,EAXFjR,KACAS,EAUEwQ,EAVFxQ,OACA0C,EASE8N,EATF9N,OACA6O,EAQEf,EARFe,WACAI,EAOEnB,EAPFmB,QACAD,EAMElB,EANFkB,SACA7G,EAKE2F,EALF3F,MACA9K,EAIEyQ,EAJFzQ,KACA+iB,EAGEtS,EAHFsS,KACAlR,EAEEpB,EAFFoB,UACAE,EACEtB,EADFsB,SAEMX,EAAgBzO,EAAhByO,YAIR,OACEpG,IAAAC,cAAA,OACEiB,MAAKxN,YAAA,GACA8lB,GAAOC,iBAEZnY,QAAS4Y,GAETla,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOG,YACjB3Z,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOI,YAAaplB,GAChCwL,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOK,cAAe5kB,GAClC+K,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOO,kBAAkB,SAAOvT,GAC5CxG,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOM,mBAAoB1T,GACvCpG,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOa,eAAe,YAAUzT,EAAQqR,KAAK,OACzDjY,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOc,gBAAgB,aAAW3T,GAC9C3G,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOe,aAAa,UAAQza,GACxCE,IAAAC,cAAA,OAAKiB,MAAOsY,GAAO3B,YAAY,SAAO7iB,GACrC+iB,GAAQ/X,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOgB,YAAY,SAAOzC,GAC9ClR,GACC7G,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOiB,iBAAiB,gBACpB5T,EAAUrS,MAG3BuS,GACC/G,IAAAC,cAAA,OAAKiB,MAAOsY,GAAOkB,gBAAgB,aAAW3T,EAASvS,QAGzD4lB,GACApa,IAAAC,cAAA,UAAQiB,MAAOsY,GAAOvM,OAAQ3L,QAAS4Y,GAAe,UAIxDla,IAAAC,cAAA,UAAQiB,MAAOsY,GAAOvM,OAAQ3L,QAAS6Y,GAAkB,WCrIhD,SAASQ,KACtB,IAAMC,EAAoB,CACxBC,QAAS,CACP1O,SAAU,QACVC,IAAK,EACLC,KAAM,EACNvL,MAAO,OACPwL,OAAQ,OACRlJ,WAAY,qBAGZmJ,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,KAEVoO,UAAW,CAET1X,WAAY,aAEZyJ,UAAW,kCACXF,QAAS,OACT0G,aAAc,QAMZpH,EAAkBrB,KASvB+C,GAR0B7C,KAU2B8C,oBAAS,IAAMC,EAAAvX,YAAAqX,EAAA,GAA9DoN,EAAoBlN,EAAA,GAAEmN,EAAqBnN,EAAA,GAM5CsM,EAAmB,WACvBa,GAAsB,IAoBlBC,EAAe,CACnBC,QAAS,CACPC,EAAG,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAC5BvJ,EAAG,CAAC,EAAG,GAAI,GACX7Q,WAAY,CAEVC,SAAU,GACV2T,KAAMC,OAMNwG,EAAoBnP,EAAgB3C,SAASvB,SAAS,GAEtDsT,EACJpP,EAAgBtY,QAAQM,MAAM8U,QAAQP,QAAQT,SAAS,GAAGtS,IAC5D1B,QAAQC,IAAG,cAAgBqnB,GAC3B,IAEE7mB,EAkBE6mB,EAlBF7mB,KAEA2R,GAgBEkV,EAjBF/U,KAiBE+U,EAhBFlV,OAMAb,GAUE+V,EAfFrW,eAeEqW,EAdFpW,cAcEoW,EAbFnW,gBAaEmW,EAZFlW,OAYEkW,EAXFjW,OAWEiW,EAVF/V,OAKAU,GAKEqV,EATF9U,aASE8U,EARFxV,UAQEwV,EAPFvV,WAOEuV,EANF3jB,KAME2jB,EALFrV,OAIAhJ,GACEqe,EAJFpV,eAIEoV,EAHFnV,gBAGEmV,EAFFtV,WAEEsV,EADFre,KAIF,OAFAjJ,QAAQC,IAAG,qBAAuBonB,EAAmBC,EAAY/V,GAG/DtF,IAAAC,cAAA,OAAKsB,UAAU,aACbvB,IAAAC,cAAA,OAAKsB,UAAU,iBACbvB,IAAAC,cAAA,OAAKsB,UAAU,eAAeL,MAAO,CAAEC,SAAU,SAC9C3M,EACDwL,IAAAC,cAAA,QAAMiB,MAAO,CAAEL,MAAO,OAAQM,SAAU,SAAU,MAAInE,IAExDgD,IAAAC,cAAA,OAAKsB,UAAU,kBACZ+D,EAAMC,GAAG,KACVvF,IAAAC,cAAA,YACEjK,GAAG,SACH6V,MAAOvG,EAAMC,GACb+V,IAAKhW,EAAMC,GACXrE,MAAO,CACLN,gBAAiB,UACjBC,MAAO,cAIbb,IAAAC,cAAA,OAAKsB,UAAU,gBAEbvB,IAAAC,cAAA,QAAMiB,MAAO,CAAEL,MAAO,OAAQM,SAAU,SAAU,QAC1C,IACNnB,IAAAC,cAAA,OACE4P,IAAG,sBACH3O,MAAO,CAAEJ,MAAO,GAAIwL,OAAQ,IAC5BwD,IAAI,iBACH,KAEa,IAClB9P,IAAAC,cAAA,UACEqB,QAjGc,WACtB0Z,GAAsB,IAiGd9Z,MAAO,CACLN,gBAAiB,QACjB+L,QAAS,MACT0G,aAAc,MACdxS,MAAO,UAGRmF,EAAM,GAAGxR,OAQbumB,GACC/a,IAAAC,cAAA,OAAKiB,MAAO0Z,EAAkBC,QAASvZ,QAAS6Y,GAC9Cna,IAAAC,cAAA,OAAKiB,MAAO0Z,EAAkBE,WAC5B9a,IAAAC,cAACga,GAAW,CACVzlB,KAAMwR,EAAM,GAAGxR,KACfS,OAAO,KACPmR,YAAY,iCACZI,WAAW,KACX0T,cAAeC,EACfA,iBAAkBA,EAClBC,oBAAoB,EACpB3U,OAAQO,EAAM,QAKjB,IACPhG,IAAAC,cAAA,OAAKsB,UAAU,kBACbvB,IAAAC,cAACM,SAAO1L,IAAG,CACTqM,MAAO,CAAEJ,MAAO,IAAKwL,OAAQ,KAC7B3L,QAAQ,UACRkR,WAAW,QACX0J,SAAUN,EAEVpL,IAAK1J,EACL2J,IAAI,sBCCC0L,OAlLf,SAAyBplB,GAAoB,IAAjBqlB,EAAarlB,EAAbqlB,cAC1B1nB,QAAQC,IAAG,uBAAyBynB,GACpC,IAAMR,EAAe,CACnBC,QAAS,CACPC,EAAG,CAAC,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAC5BvJ,EAAG,CAAC,EAAG,GAAI,GACX7Q,WAAY,CAEVC,SAAU,GACV2T,KAAMC,OAMN8G,EADkB9Q,KACS7I,UAC3B4Z,EAAUD,EAASla,GAAMC,QAK/B,OAHA1N,QAAQC,IAAG,cAAgB0nB,EAAQ,UAAaC,GAI9C3b,IAAAC,cAAA,OAAKsB,UAAU,aAEbvB,IAAAC,cAAA,OAAKsB,UAAU,kBACbvB,IAAAC,cAACM,SAAO1L,IAAG,CACTqM,MAAO,CAAEJ,MAAO,IAAKwL,OAAQ,KAC7B3L,QAAQ,UACRkR,WAAW,QACX0J,SAAUN,EACVpL,IAAK4L,EAActV,MACnB2J,IAAI,mBAGR9P,IAAAC,cAAA,OAAKsB,UAAU,iBACbvB,IAAAC,cAAA,OAAKsB,UAAU,sBACbvB,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKsB,UAAU,eAAeL,MAAO,CAAEC,SAAU,SAC9Csa,EAAcjnB,KACfwL,IAAAC,cAAA,QAAMiB,MAAO,CAAEC,SAAU,SACvBnB,IAAAC,cAAA,QAAMiB,MAAO,CAAEL,MAAO,SAAU,MAAI4a,EAAcze,OAItDgD,IAAAC,cAAA,OAAKsB,UAAU,kBACZka,EAAcnW,MAAMC,GAAG,KAMxBvF,IAAAC,cAAA,YACEjK,GAAG,SACH6V,MAAO4P,EAAcnW,MAAMC,GAC3B+V,IAAKG,EAAc/mB,MACnBwM,MAAO,CACLN,gBAAiB,eAOzBZ,IAAAC,cAAA,WACED,IAAAC,cAAA,MACEiB,MAAO,CACLC,SAAU,OACVoL,QAAS,OACTyF,cAAe,WAoBjBhS,IAAAC,cAAA,UAEED,IAAAC,cAAA,UACEiB,MAAO,CACLN,gBAAiB,QACjB+L,QAAS,MACT0G,aAAc,MACdxS,MAAO,UAGR4a,EAAcvV,kBAgBnBlG,IAAAC,cAAA,UAAI,UAAQwb,EAAcvW,iBAW1BlF,IAAAC,cAAA,UAAI,IACA,IACDwb,EAAc5V,UAAUzF,IAAI,SAACwb,EAAUtb,GAAK,OAC3CN,IAAAC,cAAA,QAAMQ,IAAKH,GAAQsb,EAAS,SAGhC5b,IAAAC,cAAA,UAAI,IACA,IACDwb,EAAc3V,WAAW1F,IAAI,SAACyb,EAAUvb,GAAK,OAC5CN,IAAAC,cAAA,QAAMQ,IAAKH,GAAQub,EAAS,eClE/BC,GAhFU,WAmCvB,OACE9b,IAAAC,cAAA,OAAKiB,MAAO,CAAEyS,UAAW,SAAUvS,WAAY,eAC7CpB,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTC,eAAgB,SAChBqG,SAAU,OACVhS,MAAO,UAxCM,CACnB,CACErM,KAAM,aACNC,OAAQ,GACR0R,MAAO,6BAET,CACE3R,KAAM,aACNC,OAAQ,GACR0R,MAAO,6BAET,CACE3R,KAAM,YACNC,OAAQ,GACR0R,MAAO,6BAET,CACE3R,KAAM,cACNC,OAAQ,GACR0R,MAAO,6BAET,CACE3R,KAAM,YACNC,OAAQ,GACR0R,MAAO,6BAET,CACE3R,KAAM,YACNC,OAAQ,GACR0R,MAAO,8BAcS/F,IAAI,SAAC2b,EAAQzb,GAAK,OAC9BN,IAAAC,cAAA,OACEQ,IAAKH,EACLY,MAAO,CACLmM,OAAQ,MACRD,OAAQ,kBACRiG,aAAc,OAGhBrT,IAAAC,cAAA,WAAM8b,EAAOvnB,MACbwL,IAAAC,cAAA,OACE4P,IAAKkM,EAAO5V,MACZ2J,IAAG,gBAAA1b,OAAkBkM,EAAQ,GAC7BY,MAAO,CACLJ,MAAO,OACPwL,OAAQ,UAGZtM,IAAAC,cAAA,WAAK,WACM8b,EAAOtnB,OAChBuL,IAAAC,cAAA,OACEiB,MAAO,CACLN,gBAAiB,QACjBE,MAAK,GAAA1M,OAAM2nB,EAAOtnB,OAAS,IAAO,GAAE,MACpC6X,OAAQ,gBCVX0P,OAzDf,SAAwB5lB,GAAmB,IAAfwhB,EAAWxhB,EAAXwhB,YAC1B,OACE5X,IAAAC,cAAA,OACEiB,MAAO,CACLE,WAAY,aACZmL,QAAS,OACT1L,MAAO,QACPD,gBAAiB,YAGnBZ,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTpL,SAAU,OACV8a,aAAc,SACdpJ,SAAU,OACVrG,eAAgB,SAChBG,QAAS,QAEZ,KACIrP,GAEL0C,IAAAC,cAAA,OACEiB,MAAO,CACLE,WAAY,aACZmL,QAAS,OACTC,eAAgB,eAChB4F,KAAM,EACNxR,gBAAiB,UACjBC,MAAO,QACPwM,OAAQ,QAGVrN,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEiB,MAAO,CAAEyL,QAAS,OAClBrL,QAASsW,EACTrW,UAAU,kBACX,UAGDvB,IAAAC,cAAA,OAAKiB,MAAO,CAAEyL,QAAS,OAASpL,UAAU,iBAAgB,UAI5DvB,IAAAC,cAAA,WACED,IAAAC,cAAA,OAAKiB,MAAO,CAAEyL,QAAS,QAAS,QAChC3M,IAAAC,cAAA,OAAKiB,MAAO,CAAEyL,QAAS,QAAS,eClC3BuP,OAff,SAAkB9lB,GAChB,OAD4BA,EAARmc,SAElBvS,IAAAC,cAAA,KACEiB,MAAO,CACLmM,OAAQ,MACRzM,gBAAiB,UACjBC,MAAO,QACPuR,KAAM,MAET,gCC2LU+J,GAjLA,WACb,IAAM5J,EAAW3W,GAEjB+R,EACkCC,oBAAS,GAAMC,EAAAvX,YAAAqX,EAAA,GAA1CyO,EAASvO,EAAA,GAAEwO,EAAYxO,EAAA,GACxB+J,EAAc,WAAH,OAASyE,GAAcD,IAExCE,EACkC/J,EAASxW,KAarCkQ,GAbQqQ,EAAN7nB,OAAc6nB,EAANtgB,OAAasgB,EAAL5nB,MAaAkW,MAGlB8Q,GAFqB5Q,KAEVmB,EAAgBlK,WACjChO,QAAQC,IAAG,wBAA0B0nB,GAErC,IAAMD,EAAgBC,EAASla,GAAMC,QACrC1N,QAAQC,IAAG,gBAAkBynB,EAAa,SAAYC,GAAS,IAAA1N,EAE7BJ,oBAAS,GAAKK,EAAA3X,YAAA0X,EAAA,GAAzCuO,EAAStO,EAAA,GAAEuO,EAAYvO,EAAA,GAExBwO,EAAoB,WACxBD,GAAa,IAaf,OACExc,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTyF,cAAe,WAGjBhS,IAAAC,cAAA,WACED,IAAAC,cAAA,OACEiB,MAAO,CACLE,WAAY,aACZmL,QAAS,OACTsG,SAAU,OACVpG,WAAY,WAGdzM,IAAAC,cAACic,GAAS,MACVlc,IAAAC,cAAC6b,GAAgB,MACjB9b,IAAAC,cAAC0a,GAAgB,CAACpI,SAAUA,IAC5BvS,IAAAC,cAACub,GAAgB,CAACC,cAAeA,KAElClJ,EAASpV,MACR6C,IAAAC,cAAA,OACEiB,MAAO,CACLL,MAAO,MACP8L,QAAS,WACTU,OAAQ,WACRzM,gBAAiB,UAGlB2R,EAASpV,OAGZ6C,IAAAC,cAAAD,IAAAE,SAAA,MAGFF,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,SAErBvM,IAAAC,cAAC+b,GAAe,CAACpE,YAAaA,KAEhC5X,IAAAC,cAAC6b,GAAgB,MACjB9b,IAAAC,cAAA,OACEiB,MAAO,CACLE,WAAY,aACZR,gBAAiB,UACjBC,MAAO,UAGTb,IAAAC,cAAC0Y,GAAS,CACRQ,YAAasC,EACbrC,QAASgD,EACTxE,YAAaA,EACblL,OAAQ,IAEV1M,IAAAC,cAAC6L,GAAa,CACZsN,QAASmD,EACThS,MAAM,eACNjH,QAAQ,yDACRoZ,cAAeD,EACf/T,QAAS,CACP,CACE4B,MAAO,KACPhJ,QAASmb,EACT7b,gBAAiB,UACjBC,MAAO,QAET,CACEyJ,MAAO,UACPqS,YAAa,UACbrb,QAASmb,EACT7b,gBAAiB,UACjBC,MAAO,QAET,CACEyJ,MAAO,UACPqS,YAAa,UAEbrb,QAASmb,EACT7b,gBAAiB,UACjBC,MAAO,wBCoFR+b,OA/Nf,WACE,IAaMC,EAAe,CAEnBjc,gBAAiB,QACjByS,aAAc,MACd1G,QAAS,OACTG,aAAc,QAGVgQ,EAAe,CACnB3b,SAAU,OACVkM,OAAQ,KAGJ0P,EAAc,CAElBnc,gBAAiB,YACjBC,MAAO,QACPuM,OAAQ,OACRiG,aAAc,MACd1G,QAAS,YACTW,OAAQ,UACRD,OAAQ,QAIJ2P,EAAgBC,eAGhBC,EAAiB,CACrBtL,EAAG,CAAC,GAAI,EAAG,EAAG,EAAG,GACjB7Q,WAAY,CACVC,SAAU,EACVqR,OAAQuC,IACRuI,KAAM,WAKVH,EAAcI,MAAMF,GAEpB,IAAMjR,EAAkBrB,KAClBsB,EAAqBpB,KAErBuS,EAAoB,SAAClpB,EAAOF,GAChC,IAAMqpB,EAAwBppB,EAAYC,EAAOF,GACjDiY,EAAmB,CACjBlX,KAAMuI,GAAQ6N,eACdnM,QAASqe,IAEXvpB,QAAQC,IAAG,8BAAgCspB,IAKvC5B,EAAWzP,EAAgBlK,UAmDjC,OACE/B,IAAAC,cAAA,OAAKiB,MAvHgB,CAErBL,MAAO,QACP8L,QAAS,OACTvL,WAAY,oBACZuS,UAAW,WAmHT3T,IAAAC,cAAA,MAAIiB,MAhHW,CACjBC,SAAU,OACV2L,aAAc,SA8GW,qBACvB9M,IAAAC,cAAA,OAAKiB,MAAO2b,GACV7c,IAAAC,cAAA,OAAKiB,MAAO2b,GACV7c,IAAAC,cAAA,MAAIiB,MAAO4b,GAAc,aACzB9c,IAAAC,cAAA,SAAG,qBACHD,IAAAC,cAAA,WACG,IAGAgM,EAAgBrC,KAAKxJ,IAAI6L,EAAgBtY,QAAQC,OAAOwM,IACvD,SAACmd,EAAQjd,GAaP,OACEN,IAAAC,cAAA,UACEQ,IAAKH,EACLgB,QAAS,kBAAM+b,EAAkBpR,EAAiBsR,IAClDrc,MAAO6b,GAENQ,EAAOzU,UAKhB9I,IAAAC,cAAA,UACEqB,QAAS,kBACP+b,EAAkBpR,EAAiB,CACjCnD,OAAQxW,EAAOU,OACf+V,QAAS,CACP/T,KAAM,UACNwT,QAASd,GACTsB,KAAM,kBACNC,WAAY,YAInB,wBAYLjJ,IAAAC,cAAA,MAAIiB,MAAO4b,GAAc,sBACzB9c,IAAAC,cAAA,OACEiB,MAAO,CACLqL,QAAS,OACTsG,SAAU,OACVb,cAAe,SACfxF,eAAgB,kBAGjB9W,OAAO6jB,OAAOmC,GAAUtb,IAAI,SAACmT,GAAO,OArHhB,SAACA,GAC5B,OACEvT,IAAAC,cAAA,OACEQ,IAAK8S,EAAUA,EAAQvd,GAAK,aAC5BkL,MAAO,CACL4L,aAAc,MACdM,OAAQ,uBACRT,QAAS,QAGV4G,EACCvT,IAAAC,cAAA,OAAKiB,MAAO,CAAEqL,QAAS,OAAQE,WAAY,WACzCzM,IAAAC,cAACM,IAAO1L,IAAG,CACTgb,IAAK0D,EAAQpN,MACb2J,IAAKyD,EAAQ/e,KACb0M,MAAO,CAAE0L,SAAU,OAAQyM,UAAW,QACtC1Y,QAASqc,IAEXhd,IAAAC,cAAA,OAAKiB,MAAO,CAAE6L,YAAa,QAAUwG,EAAQ/e,MAC7CwL,IAAAC,cAAA,WAAK,OACEsT,EAAQjO,MAAMC,GAAG,IAAEgO,EAAQjO,MAAME,QACjC,IACPxF,IAAAC,cAAA,OACEiB,MAAO,CACLJ,MAAO,QACPwL,OAAQ,OACR1L,gBAAiB,YACjByS,aAAc,MACdO,UAAW,QAGb5T,IAAAC,cAAA,OACEiB,MAAO,CACLJ,MAAK,GAAA1M,OAAMmf,EAAQjO,MAAMC,GAAKgO,EAAQjO,MAAME,OAAU,IAAG,KACzD8G,OAAQ,OACR+G,aAAc,MACdzS,gBAAiB,iBAMzBZ,IAAAC,cAAA,SAAG,eA4EDud,CAAqBjK,OAI3BvT,IAAAC,cAAA,OAAKiB,MAAO2b,GACV7c,IAAAC,cAAA,MAAIiB,MAAO4b,GAAc,gBC1IlBW,GAzDD,SAAHrnB,GAAgD,IAA1Cmc,EAAQnc,EAARmc,SAAU5G,EAAQvV,EAARuV,SAAkBjD,GAAFtS,EAAN0G,OAAe1G,EAAPsS,SAW3C,OACE1I,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,OAAKiB,MAAO,CAAEE,WAAY,eACxBpB,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAI,YACJD,IAAAC,cAACM,SAAOkP,IAAG,CACXvO,MAAO,CAAEyL,QAAS,OAAQxL,SAAU,QAClCR,QAAS,CACP+c,OAAQ,IACRrK,aAAc,CAAC,UAAW,UAC1B8H,EAAG,IAELza,QAAS,CACPya,GAAI,IAENpa,WAAY,CACV4c,KAAM/I,IACN5T,SAAU,EACVmc,KAAM,cAET,cAGDnd,IAAAC,cAAA,MAAIiB,MAAO,CAAEyL,QAAS,SACnB4F,EAAStV,SAASsT,kBACfgC,EAAStV,SAASsT,kBAClB,yBAENvQ,IAAAC,cAAA,WACED,IAAAC,cAAA,WACGsS,EAAStV,SAASqT,aACfiC,EAAStV,SAASqT,aAClB,oBAGP5H,GAIC1I,IAAAC,cAAA,UAAQqB,QAAS,WAhDvBqK,EAASlM,OAgDqC,iBCbnCme,UAtCC,SAAHxnB,GAAcA,EAARmc,SAAkBnc,EAARuV,SAC3B,OACE3L,IAAAC,cAAA,OAAKsB,UAAU,kBAEbvB,IAAAC,cAAA,UAAI,oDACJD,IAAAC,cAAA,SAAG,gEACHD,IAAAC,cAAA,WAAK,WACLD,IAAAC,cAAA,WAAK,0BACLD,IAAAC,cAAA,WAAK,oDACLD,IAAAC,cAAA,WAAK,0FAILD,IAAAC,cAAA,WAAK,kBACLD,IAAAC,cAAA,cAAQ,eACRD,IAAAC,cAAA,WAAK,kBACLD,IAAAC,cAAA,cAAQ,eACRD,IAAAC,cAAA,WAAK,kBACLD,IAAAC,cAAA,cAAQ,kBCZC4d,OARf,WACE,OACE7d,IAAAC,cAAA,WACED,IAAAC,cAAC8S,GAAkB,QCgIV+K,GA9GA,SAAH1nB,GAAoC,IAA9Bmc,EAAQnc,EAARmc,SAAU5G,EAAQvV,EAARuV,SAExBpZ,GAFqC6D,EAAHgK,IAiBhC9N,EAfFC,YACAC,EAcEF,EAdFE,MACAa,EAaEf,EAbFe,gBACAL,EAYEV,EAZFU,OACAP,EAWEH,EAXFG,KACAC,EAUEJ,EAVFI,IACAC,EASEL,EATFK,MACAC,EAQEN,EARFM,KACAC,EAOEP,EAPFO,OACAC,EAMER,EANFQ,WACAC,EAKET,EALFS,MACAE,EAIEX,EAJFW,SACAC,EAGEZ,EAHFY,KACAC,EAEEb,EAFFa,SACAC,EACEd,EADFc,QAGI6Y,EAAkBrB,KAQlBmT,GAPqBjT,KAORmB,EAAgBtY,QAAQM,MAAM6U,QAKjD,OAFAzF,GAAM,kBAAAjP,OAAmB2pB,GAAc,aAAS3U,EAAW2U,GAEnDA,GACN,KAAKxrB,EAEH,OADAwB,QAAQC,IAAI,yBACLgM,IAAAC,cAACwd,GAAK,CAAClL,SAAUA,EAAU5G,SAAUA,IAC9C,KAAKnZ,EAGH,OAFAuB,QAAQC,IAAI,mBAELgM,IAAAC,cAACuN,GAAK,CAAC7B,SAAUA,IAC1B,KAAKtY,EAGH,OAFAU,QAAQC,IAAI,8BAELgM,IAAAC,cAAC4d,GAAe,MACzB,KAAKprB,EAEH,OADAsB,QAAQC,IAAI,mBACLgM,IAAAC,cAACqS,GAAI,CAACC,SAAUA,EAAU5G,SAAUA,IAC7C,KAAKjZ,EAGH,OAFAqB,QAAQC,IAAI,kBAELgM,IAAAC,cAAC2c,GAAG,MAEb,KAAKjqB,EAEH,OADAoB,QAAQC,IAAI,oBACLgM,IAAAC,cAACuQ,GAAK,CAAC+B,SAAUA,EAAU5G,SAAUA,IAC9C,KAAK/Y,EAEH,OADAmB,QAAQC,IAAI,kBACLgM,IAAAC,cAAC6S,GAAI,CAACP,SAAUA,EAAU5G,SAAUA,IAC7C,KAAK9Y,EAEH,OADAkB,QAAQC,IAAI,oBAEVgM,IAAAC,cAACoU,GAAM,CACL9B,SAAUA,EACV5G,SAAUA,EACVqS,cAAehnB,KAAKqI,WAG1B,KAAKvM,EAEH,OADAiB,QAAQC,IAAI,wBACLgM,IAAAC,cAACuU,GAAU,CAACjC,SAAUA,EAAU5G,SAAUA,IACnD,KAAK5Y,EAEH,OADAgB,QAAQC,IAAI,mBACLgM,IAAAC,cAACmV,GAAK,CAAC7C,SAAUA,EAAU5G,SAAUA,IAC9C,KAAK3Y,EAEH,OADAe,QAAQC,IAAI,oBACLgM,IAAAC,cAACkc,GAAM,CAAC5J,SAAUA,EAAU5G,SAAUA,IAC/C,KAAK1Y,EAEH,OADAc,QAAQC,IAAI,sBACLgM,IAAAC,cAACkc,GAAM,CAAC5J,SAAUA,EAAU5G,SAAUA,IAC/C,KAAKzY,EAEH,OADAa,QAAQC,IAAI,gBACLgM,IAAAC,cAACkc,GAAM,CAAC5J,SAAUA,EAAU5G,SAAUA,IAC/C,KAAKxY,EAGH,OAFAY,QAAQC,IAAI,qBAELgM,IAAAC,cAAA,WAAK,eACd,KAAK7M,EAEH,OADAW,QAAQC,IAAI,mBACLgM,IAAAC,cAAC2d,GAAO,CAACrL,SAAUA,EAAU5G,SAAUA,IAChD,QAKE,OAJA5X,QAAQC,IACN,iEACA+pB,GAGA/d,IAAAC,cAAA,UAAI,6IAGI8d,KCrHdvrB,GAaEF,GAbFE,MACAQ,GAYEV,GAZFU,OACAN,GAWEJ,GAXFI,IACAD,GAUEH,GAVFG,KACAI,GASEP,GATFO,OACAC,GAQER,GARFQ,WAEAH,GAMEL,GANFK,MACAC,GAKEN,GALFM,KACAK,GAIEX,GAJFW,SACAC,GAGEZ,GAHFY,KACAC,GAEEb,GAFFa,SACAC,GACEd,GADFc,QAmGWgN,GAjFJ,CACLjN,GACAX,GACAK,GAEAH,GACAM,GACAF,GACAD,GACAF,GACAD,GACAD,GACAO,GACAF,GACAD,GACAH,GACAC,GACAK,GACAF,GACAD,GACAH,GACAE,GACAK,GACAH,GACAD,GACAH,GACAM,GACAF,GACAD,GACAH,GACAM,GACAF,GACAD,GACAD,GACAM,GACAE,IClES6qB,GAAmB,SAAC9pB,GAC/B,OAAOA,GAGI+pB,GAAc,SAAC/pB,EAAO8K,GACjC,IAAIkf,EAASzqB,YAAA,GAAQS,GACfiqB,EAAYD,EAAUpiB,KAAKtH,OAASwK,EAI1C,OAHAlL,QAAQC,IAAG,iBAAAI,OAAkBgqB,IAC7BD,EAASzqB,YAAA,GAAQyqB,EAAS,CAAEpiB,KAAIrI,YAAA,GAAOyqB,EAAUpiB,KAAI,CAAEtH,OAAQ2pB,MAC/DrqB,QAAQC,IAAG,YAAcmqB,GAClBA,GAGIE,GAAsB,SAAClqB,EAAO8K,GACzC,IAAMqf,EAAanqB,EAAM2H,KAAOmD,EAGhC,OAFAlL,QAAQC,IAAG,kBAAAI,OAAmBkqB,IACf5qB,YAAA,GAAQS,EAAK,CAAE2H,KAAMwiB,KAIzBC,GAAiB,SAACpqB,EAAO8K,GACpC,InDmC4B0T,EmDnCtB6L,EAAUrqB,EAAM0H,KAChB4iB,GnDkCsB9L,EmDlCU1T,EAAQ0T,KnDoC9Cjf,YAAA,GAAWif,EAAI,CAAE3c,GAAIqB,OmDnCrBtD,QAAQ2qB,MAAM,iCAAiCF,EAASC,GACxDD,EAAQtoB,KAAKuoB,GACb1qB,QAAQ2qB,MAAM,gCAAgCF,EAASC,GAIvD,IAAME,EAAcH,EACpB,OAAA9qB,YAAA,GAAYS,EAAK,CAAE0H,KAAM8iB,KAQdC,GAAiB,SAACzqB,EAAO8K,GASpC,IATgD,IACzCC,EAAQD,EAARC,KACHkV,EAAQ1gB,YAAA,GAAQS,GAOZwU,EAAI,EAAGA,EAAIzJ,EAAKjJ,OAAQ0S,IAC9ByL,EAAWmK,GAAenK,EAAU,CAACzB,KAAMzT,EAAKyJ,KAMlD,OAAAjV,YAAA,GAAY0gB,IAIDyK,GAAkB,SAAC1qB,EAAO8K,GACrC,OAAAvL,YAAA,GACKS,EAAK,CACRgJ,MAAO8B,KC9DE6f,GAAsB/N,GCUtBgO,GAAkB,SAAC5qB,EAAO8K,GAAY,IACzCG,EAA2DH,EAA3DG,UAAWE,EAAgDL,EAAhDK,QAASC,EAAuCN,EAAvCM,gBAAiBC,EAAsBP,EAAtBO,kBACvCwf,EAAY,CAChB/qB,MAAOmM,GAAIjM,EAAM4I,SAASC,IAAM,GAChCA,IAAK7I,EAAM4I,SAASC,IAAM,EAC1BpG,IAAKzC,EAAM4I,SAASnG,KAElBunB,EAAYhqB,EACZ8qB,EAAW,GAEf,OAAQD,EAAU/qB,OAChB,KAAK3B,GAAOU,OACVisB,EAAWtoB,EAAexC,EAAM4I,SAASnG,IAAKkI,GAG9Cqf,EAAYe,GAAgBf,EAAW,CACrCrnB,KAAMsI,EACN6f,SAAUA,IAEZd,EAAYgB,GAAchB,EAAW,CAAErnB,KAAMwI,IAC7C6e,EAAYiB,GAAmBjB,EAAW,CACxCrnB,KAAMyI,EACNC,sBAEF,MACF,KAAKlN,GAAOW,SACVgsB,EAAWtoB,EAAexC,EAAM4I,SAASnG,IAAG,QAE5CunB,EAAYe,GAAgBf,EAAW,CACrCrnB,KAAMsI,EACN6f,SAAUA,IAEZd,EAAYgB,GAAchB,EAAW,CAAErnB,KAAMwI,IAC7C6e,EAAYiB,GAAmBjB,EAAW,CACxCrnB,KAAMyI,EACNC,sBAEF,MACF,KAAKlN,GAAOY,KACV+rB,EAAWtoB,EAAexC,EAAM4I,SAASnG,IAAG,QAE5CunB,EAAYe,GAAgBf,EAAW,CACrCrnB,KAAMsI,EACN6f,SAAUA,IAEZd,EAAYgB,GAAchB,EAAW,CAAErnB,KAAMwI,IAC7C6e,EAAYiB,GAAmBjB,EAAW,CACxCrnB,KAAMyI,EACNC,sBAUN,OAAA9L,YAAA,GACKyqB,EAAS,CACZphB,SAAUiiB,KAKDK,GAAuB,SAAClrB,EAAO8K,GAM1C,IAAIkf,EAASzqB,YAAA,GAAQS,GAEf6qB,EAAY,CAChB/qB,MAAO3B,GAAOC,WACdyK,IAAKmhB,EAAUphB,SAASC,IACxBpG,IAAKunB,EAAUphB,SAASnG,KAS1B,OANAunB,EAASzqB,YAAA,GACJyqB,EAAS,CACZphB,SAAUiiB,EACV/hB,SAAUgC,EAAQkR,UAMTmP,GAAmB,SAACnrB,EAAKiC,GAAwB,IAApB+I,EAAa/I,EAAb+I,cAIpCgf,EAASzqB,YAAA,GAAQS,GACrBJ,QAAQC,IAAG,2BAEX,IAAIurB,EAAW,GACfA,EAASrpB,KAAI+M,MAAbsc,EAAQ7oB,YAASynB,EAAUtiB,OAC3B0jB,EAASrpB,KAAI+M,MAAbsc,EAAQ7oB,YAASynB,EAAU5hB,OAAOI,OAClC5I,QAAQC,IAAG,WAAaurB,GAGxBpB,EAAYqB,GAAuBrB,EAAWhf,GAE9Cgf,EAAYF,GAAgBvqB,YAAA,GACvByqB,EAAS,CACZriB,KAAMqiB,EAAUriB,KAAO,GACvBD,KAAM0jB,EACNxjB,KAAIrI,YAAA,GACCyqB,EAAUpiB,KAAI,CACjBE,QAAOvI,YAAA,GAAOyqB,EAAUpiB,KAAKE,QAAO,CAAEC,KAAM,SAE9CK,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBC,MAAK9I,YAAA,GACAyqB,EAAU5hB,OAAOC,MAAK,CACzB1H,OAAQ,cAIdf,QAAQC,IAAG,YAAcmqB,GAEzB,IAAMlf,EAAUE,EAQhB,OAPApL,QAAQC,IAAG,UAAYmL,GAMvBgf,EAAYY,GAAgBZ,EAAWlf,IAI5BwgB,GAAkB,SAACtrB,GAC9B,OAAAT,YAAA,GACKkI,EAAY,CACfmB,SAAU,CACR9I,MAAO3B,GAAOa,SACd6J,IAAK,EACLpG,IAAK,MCvBE8oB,GAAkB,SAACvrB,EAAKiC,GAA8B,IAA1Buc,EAAIvc,EAAJuc,KAAMxT,EAAa/I,EAAb+I,cAC7CpL,QAAQC,IAAG,gCAAkC2e,EAAMxT,GACnD,IAAIgf,EAASzqB,YAAA,GAAQS,GACfwrB,EAAWxB,EAAUpiB,KAAKC,OAC1B4jB,EAAczB,EAAU5hB,OAAOC,MAAM/H,OACvCQ,EAAS0d,EAAKlb,IACd+O,EAAamM,EAAKjb,KAClBmoB,EAAWlN,EAAKne,KAGpB,GAAImrB,EAAWnZ,EACb,OAAOqY,GACLV,EAAS,yEAMb,OAAQA,EAAUpiB,KAAKE,QAAQC,MAC7B,KAAK5E,EACHrC,GAAkB,EAClB,MACF,KAAK,KACHlB,QAAQC,IAAG,iDACX,MACF,QACED,QAAQC,IAAG,uCAIX4rB,EAAc3qB,GAAU,IAC1BkpB,EAAYmB,GAAiBnB,EAAW,CAAEhf,cAAeA,KAS3D,IAAM2gB,GAHN3B,EHhG8B,SAAChqB,EAAO8K,GAAY,IAC1CnC,EAAWmC,EAAXnC,OACR,OAAApJ,YAAA,GAAYS,EAAK,CAAEoI,OAAM7I,YAAA,GAAOS,EAAMoI,OAAM,CAAEO,OAAQA,MG8F1CijB,CAAiB5B,EAAW,CAAErhB,OAF9B,GAAA1I,OAAMoS,GAAUpS,OAAGkJ,EAAW,UAAAlJ,OAASyrB,EAAQ,YAAAzrB,OAAWa,GAAMb,OnDqLtD,emDrLiE,QAKzDmI,OAAOI,KAAKqjB,QAAQrN,GAC9ChW,EAAIjG,YAAOynB,EAAU5hB,OAAOI,OAChCA,EAAKsjB,OAAOH,EAAa,GAGzB3B,EAASzqB,YAAA,GACJyqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBI,KAAMA,MAIS,MAAfgW,EAAKhb,UAEPwmB,EAAY+B,GAAmB/B,EADT,CAAExL,OAAMxT,mBAIhC,IAAMghB,EAAaR,EAAWnZ,EACxB4Z,EAAkBjC,EAAU5hB,OAAOC,MAAM/H,OAASQ,EACxDkpB,EAASzqB,YAAA,GACJyqB,EAAS,CACZpiB,KAAIrI,YAAA,GAAOyqB,EAAUpiB,KAAI,CAAEC,OAAQmkB,IACnC5jB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBC,MAAK9I,YAAA,GACAyqB,EAAU5hB,OAAOC,MAAK,CACzB/H,OAAQ2rB,QAQd,IAAK,IAAIzX,EAAI,EAAGA,EAAIwV,EAAU5hB,OAAOI,KAAK1G,OAAQ0S,IAChD,OAAQwV,EAAU5hB,OAAOI,KAAKgM,GAAGhR,QAC/B,KAAKL,EACH6mB,EAAU5hB,OAAOI,KAAKgM,GAAGlR,KAAO,EAChC0mB,EAAU5hB,OAAOI,KAAKgM,GAAG/Q,KAAO,EAEhC,MACF,QACE7D,QAAQC,IAAG,4DAIjB,OAAOqsB,GAAmBlC,EAAW,CAAEmC,qBAAsB3N,KAElD0N,GAAqB,SAAClsB,EAAO8K,GAGxC,OAAAvL,YAAA,GACKS,EAAK,CACRoI,OAAM7I,YAAA,GACDS,EAAMoI,OAAM,CACfK,UAAS,GAAAxI,OAAAsC,YAAMvC,EAAMoI,OAAOK,WAAS,CAAEqC,EAAQqhB,4BAIxCJ,GAAqB,SAAC/rB,EAAKkC,GAA8B,IAA1Bsc,EAAItc,EAAJsc,KAAMxT,EAAa9I,EAAb8I,cAC5Cgf,EAASzqB,YAAA,GAAQS,GACfosB,EAAe5N,EAAKhb,OAU1B,GATA5D,QAAQC,IAAG,mBAAAI,OAAoBmsB,GAAgB5N,EAAMxT,GAErDpL,QAAQC,IAAG,sBAAAI,OACaue,EAAKpa,aAAY,aAAAnE,OACrC+K,EAAcG,QAAO,MAAAlL,OAClBue,EAAKpa,aAAe4G,EAAcG,UAIpCqT,EAAKpa,gBAAgBoa,EAAKpa,aAAe4G,EAAcG,SA+F1D,OATAvL,QAAQC,IAAG,+EASJmqB,EA7FP,OAAQoC,GACN,KAAKjpB,EAEH,OADAvD,QAAQC,IAAG,gCACXN,YAAA,GACKyqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBC,MAAK9I,YAAA,GAAOyqB,EAAU5hB,OAAOC,MAAK,CAAE1H,OAAQwC,QAGlD,KAAKA,EAGH,OAAK6mB,EAAU5hB,OAAOC,MAAMgkB,OAU1B9sB,YAAA,GACKyqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CAEnBC,MAAK9I,YAAA,GACAyqB,EAAU5hB,OAAOC,MAAK,CACzBgkB,OAAQrC,EAAU5hB,OAAOC,MAAMgkB,OAAS7N,EAAK/a,UAhBnDlE,YAAA,GACKyqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CAEnBC,MAAK9I,YAAA,GAAOyqB,EAAU5hB,OAAOC,MAAK,CAAEgkB,OAAQ7N,EAAK/a,UAgBzD,KAAKN,EAEH,OAAA5D,YAAA,GACKyqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBC,MAAK9I,YAAA,GAAOyqB,EAAU5hB,OAAOC,MAAK,CAAE1H,OAAQwC,QAGlD,IAAK,SAKL,IAAK,QACH,OAAA5D,YAAA,GACKyqB,GAEP,KAAK7mB,EAGH,OAAA5D,YAAA,GACKyqB,EAAS,CACZpiB,KAAIrI,YAAA,GACCyqB,EAAUpiB,KAAI,CACjBE,QAAOvI,YAAA,GAAOyqB,EAAUpiB,KAAKE,QAAO,CAAEC,KAAM5E,QAGlD,KAAKA,EACHvD,QAAQC,IAAG,WAAAI,OACEue,EAAK/a,IAAG,yBAAAxD,OAAwB+pB,EAAU5hB,OAAOI,KAAK1G,SAEnE,IAAK,IAAI0S,EAAI,EAAGA,EAAIgK,EAAK/a,IAAK+Q,IAC5BwV,EAAYsC,GAAgBtC,GAM9B,OAJApqB,QAAQC,IAAG,QAAAI,OACDue,EAAK/a,IAAG,wBAAAxD,OAAuB+pB,EAAU5hB,OAAOI,KAAK1G,OAAM,UACnEkoB,GAEKA,EACT,KAAK7mB,EACH,IAAMopB,EAAa/N,EAAKlb,IAExB,OADA0mB,EAAUpiB,KAAKtH,OAAS0pB,EAAUpiB,KAAKtH,OAASisB,EAChDhtB,YAAA,GAAYyqB,GACd,QAEE,OADApqB,QAAQC,IAAG,4CACJmqB,IAeFsC,GAAkB,SAACtsB,GAC9B,OAAIA,EAAM0H,KAAK5F,OAAS,GACtBlC,QAAQC,IAAG,kBAAAI,OAAmBD,EAAM0H,KAAK5F,OAAM,WAC/CvC,YAAA,GACKS,EAAK,CACRoI,OAAM7I,YAAA,GACDS,EAAMoI,OAAM,CACfI,KAAI,GAAAvI,OAAAsC,YAAMvC,EAAMoI,OAAOI,MAAI,CAAExI,EAAM0H,KAAK,OAE1CA,KAAM1H,EAAM0H,KAAK4W,MAAM,MAGzB/e,YAAA,GACKS,EAAK,CACRgJ,MAAO,+BCnVAwjB,GAAiB,SAACxsB,EAAO8K,GAAY,IACxCG,EAA2DH,EAA3DG,UAAWE,EAAgDL,EAAhDK,QAASC,EAAuCN,EAAvCM,gBAAiBC,EAAsBP,EAAtBO,kBACzC2e,EAASzqB,YAAA,GAAQS,GACrBysB,EACyBzC,EAAjBpiB,EAAI6kB,EAAJ7kB,KAAMQ,EAAMqkB,EAANrkB,OACRskB,EAAc1C,EAAU5hB,OAAOC,MAAM1H,OACrCgsB,EAAW3C,EAAUpiB,KAAKE,QAAQC,KAGpC6kB,EAAchlB,EAAKtH,OAqCvB,OA9BI0pB,EAAU5hB,OAAOC,MAAMgkB,SACzBzsB,QAAQC,IAAG,8DAGTmqB,EAFEA,EAAU5hB,OAAOC,MAAM/H,OAAS0pB,EAAU5hB,OAAOC,MAAMgkB,QAAU,EAEvDlB,GAAiBnB,EAAW,CACtChf,cAAe,CACbC,YACAE,UACAC,kBACAC,uBAKK9L,YAAA,GACJyqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBC,MAAK9I,YAAA,GACAyqB,EAAU5hB,OAAOC,MAAK,CAEzB/H,OACE0pB,EAAU5hB,OAAOC,MAAM/H,OAAS0pB,EAAU5hB,OAAOC,MAAMgkB,cAQ3DK,GACN,KAAKvpB,EACHvD,QAAQC,IAAG,kDAQXmqB,EAP6BzqB,YAAA,GACxByqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBC,MAAK9I,YAAA,GAAOyqB,EAAU5hB,OAAOC,MAAK,CAAE1H,OAAQ,WAIhD,MACF,KAAKwC,EAMH,GALAvD,QAAQC,IAAG,kFAKM,IADAgD,KAAKC,MAAsB,EAAhBD,KAAKqI,UAS/B8e,EAP4BzqB,YAAA,GACvByqB,EAAS,CACZ5hB,OAAM7I,YAAA,GACDyqB,EAAU5hB,OAAM,CACnBC,MAAK9I,YAAA,GAAOyqB,EAAU5hB,OAAOC,MAAK,CAAE1H,OAAQ,WAKlD,MACF,KAAK,KACHf,QAAQC,IAAG,gEAGX+sB,GAA4BxkB,EAAOC,MAAMC,WAAWxH,OACpD,MACF,QACElB,QAAQC,IAAG,2CAIf,OAAQ8sB,GACN,KAAKxpB,EAYH6mB,EAV8BzqB,YAAA,GACzByqB,EAAS,CACZpiB,KAAIrI,YAAA,GACCyqB,EAAUpiB,KAAI,CACjBE,QAAOvI,YAAA,GACFyqB,EAAUpiB,KAAKE,QAAO,CACzBC,KAAM,WAKZ,MAEF,QACEnI,QAAQC,IAAG,oEAAAI,OAC2D0sB,IAI1E,GAAIC,EAAc,EAAG,CAEnB,IAAMC,EAAYttB,YAAA,GACbyqB,EAAS,CACZpiB,KAAIrI,YAAA,GACCyqB,EAAUpiB,KAAI,CACjBtH,OAAQssB,EACR/kB,OpDkNwB,MoD9MtBilB,EAAgBR,GAAgBO,GAChCE,EAAsBT,GAAgBQ,GAK5C,OAJA9C,EAAYgB,GAAc+B,EAAqBjiB,GAE/Ckf,EAAYU,GAAgBV,EAAS,IAIrC,OAAOsB,GAAgBtrB,IAId+qB,GAAkB,SAAC/qB,EAAO8K,GAAY,IACzCnI,EAAmBmI,EAAnBnI,KAAMmoB,EAAahgB,EAAbggB,SAEd,OAAAvrB,YAAA,GACKS,EAAK,CACRoI,OAAM7I,YAAA,GAAOS,EAAMoI,OAAM,CAAEC,MAAO3F,EAAYC,EAAMmoB,QAI3CE,GAAgB,SAAChrB,EAAO8K,GAAY,IACvCnI,EAASmI,EAATnI,KAER,OAAApD,YAAA,GACKS,EAAK,CACRoI,OAAM7I,YAAA,GACDS,EAAMoI,OAAM,CACfC,MAAK9I,YAAA,GACAS,EAAMoI,OAAOC,MAAK,CACrBC,WAAYvF,EAAeJ,EAAM3C,EAAMoI,OAAOC,MAAMzH,gBAM/CqqB,GAAqB,SAACjrB,EAAO8K,GAAY,IAC5CO,EAA4BP,EAA5BO,kBAAmB1I,EAASmI,EAATnI,KACvBqqB,EAAe,GACfhtB,EAAM0H,KAAK5F,QAAU,GAEvBlC,QAAQC,IAAG,uBACXmtB,EAAe7rB,EAAQqG,EAAc7E,KAErC/C,QAAQC,IAAG,qBAAuBG,EAAM0H,MACxCslB,EAAe7rB,EAAQnB,EAAM0H,KAAM/E,IASrC,IAPA,IAAIqnB,EAASzqB,YAAA,GACRS,EAAK,CACRoI,OAAM7I,YAAA,GAAOS,EAAMoI,OAAM,CAAEM,WAAW,EAAMF,KAAM,KAClDd,KAAInF,YAAMyqB,GACVplB,KAAIrI,YAAA,GAAOS,EAAM4H,KAAI,CAAEC,OpD2JK,MoDxJrB2M,EAAI,EAAGA,EAAInJ,EAAmBmJ,IACrCwV,EAAYsC,GAAgBtC,GAG9B,OAAOA,GAGIqB,GAAyB,SAACrrB,EAAO8K,GAC5ClL,QAAQC,IAAG,kCAETG,EAAK,2BAEL8K,GAIF,IAAImiB,EAAkB9rB,EAAQwpB,GAAqB9nB,KAAKqI,UAExDtL,QAAQC,IAAG,kBAAoBotB,GAE/B,IAAMC,EAAgBD,EAAgB3O,MAAM,EAAG,GAI/C,OAHA1e,QAAQC,IAAG,oCAAsCotB,GAElC1tB,YAAA,GAAQS,EAAK,CAAE+I,iBAAkBmkB,KAIrCC,GAAmB,SAACntB,EAAO8K,GAItC,IAAMmV,EAAWmK,GAAepqB,EAAO8K,GAEjCsiB,EAA2B/B,GAC/BpL,GAOF,OAJuB2K,GACrBwC,EACAtiB,EAAQE,gBCzNCqiB,GAAc,SAACrtB,GAK1B,OAJgBT,YAAA,GACXS,EAAK,CACR4H,KAAIrI,YAAA,GAAOS,EAAM4H,KAAI,CAAEtH,OAAQN,EAAM4H,KAAKrH,WAMjC+sB,GAAqB,SAACttB,EAAKiC,GAAgC,IAA5B+Z,EAAM/Z,EAAN+Z,OAAQhR,EAAa/I,EAAb+I,cAC9CiV,EAAQ1gB,YAAA,GAAQS,GAEpB,OAAQgc,EAAOC,YACb,IAAK,SACHrc,QAAQC,IAAG,iBACXogB,EAAW8J,GAAY9J,EAAUjE,EAAOE,WAExC,MACF,IAAK,QACHtc,QAAQC,IAAG,gBACc,IAArBmc,EAAOE,YACT+D,EAAWiK,GAAoBjK,EAAUjE,EAAOE,YAGlD,MACF,IAAK,QACHtc,QAAQC,IAAG,gBACX,MACF,IAAK,QACHD,QAAQC,IAAG,gBACX,MACF,IAAK,QACHD,QAAQC,IAAG,gBACX,MACF,IAAK,OACHD,QAAQC,IAAG,eACX,MACF,QACED,QAAQC,IAAG,kCAIfD,QAAQC,IAAG,yBAGX,IAAM0tB,EAAkBrC,GAAqBjL,EAAU,CACrDjE,SACAhR,kBAIF,OAFApL,QAAQC,IAAG,2BAA6BogB,GAEjCsN,GAMIC,GAAkB,SAACxtB,EAAO8K,GACrC,IACQ0T,EAAwB1T,EAAxB0T,KAAMxT,EAAkBF,EAAlBE,cACRgf,EAASzqB,YAAA,GAAQS,GASvB,GANKwe,EAAK9a,OACR9D,QAAQyO,KAAI,gDAAApO,OACsCue,EAAK9a,MAAK,eAC1D8a,GAGAwL,EAAUriB,MAAQ6W,EAAK9a,MAAO,CAChC,IAAM+pB,EAAiBrD,GAAeJ,EAAW,CAAExL,SAC7CkP,EAAiBD,EAAe9lB,KAAO6W,EAAK9a,MAE5CiqB,EAAmBpuB,YAAA,GAAQkuB,EAAc,CAAE9lB,KAAM+lB,IAEvD,OADwB9C,GAAgB+C,EAAqB3iB,GAK7D,OADApL,QAAQC,IAAG,2BAAAI,OAA4Bue,EAAKne,OACrC2pB,GCtDI,SAAS4D,GAAQ5tB,EAAOgW,GAErC,IACQlL,EAAYkL,EAAZlL,QACR,OAAQkL,EAAOnV,MACb,KAAKuI,EAAQC,UACX,OAAO6hB,GAAqBlrB,EAAO8K,GACrC,KAAK1B,EAAQE,UACX,OAAOshB,GAAgB5qB,EAAO8K,GAChC,KAAK1B,EAAQG,WACX,OAAOugB,GAAiB9pB,GAC1B,KAAKoJ,EAAQI,WACX,OAAOugB,GAAY/pB,EAAO8K,GAC5B,KAAK1B,EAAQK,cACX,OAAOygB,GAAoBlqB,EAAO8K,GACpC,KAAK1B,EAAQS,UACX,OAAO6gB,GAAgB1qB,EAAO8K,GAChC,KAAK1B,EAAQQ,SACX,OAAArK,YAAA,GAAYS,EAAK,CAAE0H,KAAMoD,IAC3B,KAAK1B,EAAQU,UACX,OAAOwiB,GAAgBtsB,EAAO8K,GAChC,KAAK1B,EAAQW,UACX,OAAOwhB,GAAgBvrB,EAAO8K,GAChC,KAAK1B,EAAQiB,aACX,OAAO6hB,GAAmBlsB,EAAO8K,GACnC,KAAK1B,EAAQM,UACX,OAAOqhB,GAAgB/qB,EAAO8K,GAChC,KAAK1B,EAAQO,QACX,OAAOqhB,GAAchrB,EAAO8K,GAE9B,KAAK1B,EAAQmT,aACX,OAAO+Q,GAAmBttB,EAAO8K,GACnC,KAAK1B,EAAQa,iBACX,OAAOohB,GAAuBrrB,EAAO8K,GACvC,KAAK1B,EAAQc,cACX,OAAOijB,GAAiBntB,EAAO8K,GACjC,KAAK1B,EAAQgB,cACX,OAAOojB,GAAgBxtB,EAAO8K,GAChC,KAAK1B,EAAQY,YACX,OAAOqjB,GAAYrtB,GACrB,KAAKoJ,EAAQkB,aACX,OAAO2gB,GAAmBjrB,EAAO8K,GACnC,KAAK1B,EAAQoB,SACX,OAAOgiB,GAAexsB,EAAO8K,GAC/B,KAAK1B,EAAQqB,SACX,OAAO2f,GAAepqB,EAAO8K,GAC/B,KAAK1B,EAAQe,YACX,OAAOsgB,GAAezqB,EAAO8K,GAC/B,KAAK1B,EAAQsB,UACX,OAAO4gB,GAAgBtrB,GACzB,QAEE,OADAJ,QAAQC,IAAG,2CACJG,qBClFb,IACM6tB,GAAc,CAAC,UAAW,UAAW,UAAW,UAAW,WAGZA,GAAY,GA6BlDC,IChBT3e,GAAU,gBAED,SAAS4e,KAAM,IAAAC,EACC3W,qBAAWuW,GAASnmB,GAAawmB,EAAA9rB,YAAA6rB,EAAA,GAAvD5P,EAAQ6P,EAAA,GAAEzW,EAAQyW,EAAA,GAEDxX,KACGE,KAE3B,OACE9K,IAAAC,cAAA,OAAKiB,MAAO,CAAEN,gBAAiB,UAE7BZ,IAAAC,cAAA,OACEsB,UAAU,gBACVL,MAAO,CACL+Q,gBAAiB,kCACjBC,iBAAkB,SAClBC,eAAgB,cAChBrR,MAAO,QACPwL,OAAQ,QACRM,SAAU,QACVyM,UAAW,SAEXhM,OAAQ,OACRgV,OAAQ,SAYVriB,IAAAC,cAAC6L,GAAa,CAACxI,QAASA,KAGxBtD,IAAAC,cAAC6d,GAAM,CAACvL,SAAUA,EAAU5G,SAAUA,EAAUvL,IAAKA,OClD7D,IAAMkiB,GAAcC,SAASC,eAAe,QAC/BC,qBAAWH,IAEnBI,OACH1iB,IAAAC,cAACoL,GAAY,KACXrL,IAAAC,cAACiiB,GAAG","file":"static/js/main.974bb326.chunk.js","sourcesContent":["// This is the part of startingData that this applies to:\n// export const newStartingData = {\n//     current: {\n//       level: null,\n//       act: null,\n//       scene: null,\n//       curEvent: null,\n//     },\n//   };\n\nexport const SCENES = {\n  TRANSITION: 'transition',\n  INTRO: 'intro',\n  SHOP: 'shop',\n  MAP: 'map',\n  EVENT: 'event',\n  REST: 'rest',\n  REWARD: 'reward',\n  PACKREWARD: 'pack-reward',\n  CONVO: 'convo',\n  BATTLE: 'battle',\n  MINIBOSS: 'miniboss',\n  BOSS: 'boss',\n  GAMEOVER: 'game-over',\n  VICTORY: 'victory',\n  CHOOSECHARACTER: 'choose-character',\n}\n\n/**\n * Update the current level.\n *\n * @param {object} newData - The current data object to update.\n * @param {number} newLevel - The new level value.\n * @returns {object} - A copy of the updated data object with the level updated.\n */\nexport function updateLevel(newData, newLevel) {\n  const updatedData = { ...newData }\n  updatedData.current.level += newLevel\n  return updatedData\n}\n\n/**\n * Update the current act.\n *\n * @param {object} newData - The current data object to update.\n * @param {number} newAct - The new act value.\n * @returns {object} - A copy of the updated data object with the act updated.\n */\nexport function updateAct(newData, newAct) {\n  const updatedData = { ...newData }\n  updatedData.current.act = newAct\n  return updatedData\n}\n\n/**\n * Update the current scene.\n *\n * @param {object} newData - The current data object to update.\n * @param {number} newScene - The new scene value.\n * @returns {object} - A copy of the updated data object with the scene updated.\n */\nexport function updateScene(newData, newScene) {\n  console.log(\n    `[updateScene] newData, newScene`,\n    newData,\n    newScene,\n    `newData.current.scene`,\n    // newData?.current?.scene\n  )\n  const updatedData = { ...newData }\n  updatedData.current.scene = newScene\n  return updatedData\n}\n\nexport const changeLevel = (state, scene) => {\n  console.log(`state before changing level:`, state, `also scene:`, scene)\n\n  let changesToBeMade = {}\n\n  // now make any changes on the scene details before you return the new scene\n  // ex: Which trainer is battling, which area, etc.\n  // ex: Which event is happening\n  switch (scene) {\n    case SCENES.TRANSITION:\n      console.log(`[changeLevel] Transistion case. Scene: ${scene}`, state)\n      // everything that happens when you have a transition\n      break\n    case SCENES.INTRO:\n      console.log(`[changeLevel] Intro case. Scene: ${scene}`, state)\n      // everything that happens when you have an intro\n      break\n    case SCENES.MAP:\n      console.log(`[changeLevel] Map case. Scene: ${scene}`, state)\n      // when you're going to the map, any changes that nee\n      break\n    case SCENES.REWARD:\n      console.log(`[changeLevel] Reward case. Scene: ${scene}`, state)\n      // when you're going to the reward, any changes that need to be made\n      break\n    case SCENES.CONVO:\n      console.log(`[changeLevel] Convo case. Scene: ${scene}`, state)\n      // when you're going to the convo, any changes that need to be ma\n      break\n    //Battle Cases:\n    case SCENES.BATTLE:\n      console.log(`[changeLevel] Battle case. Scene: ${scene}`, state)\n      // when you're going to the battle, any changes that need to be ma\n      break\n    case SCENES.MINIBOSS:\n      console.log(`[changeLevel] Miniboss case. Scene: ${scene}`, state)\n      // when you're going to the miniboss, any changes that need to be ma\n      break\n    case SCENES.BOSS:\n      console.log(`[changeLevel] Boss case. Scene: ${scene}`, state)\n      // when you're going to the boss, any changes that need to be ma\n      break\n    case SCENES.GAMEOVER:\n      console.log(`[changeLevel] Game over case. Scene: ${scene}`, state)\n      // when you're going to the game over, any changes that need to be ma\n      break\n    case SCENES.VICTORY:\n      console.log(`[changeLevel] Victory case. Scene: ${scene}`, state)\n      // when you're going to the victory, any changes that need to be ma\n      break\n    case SCENES.CHOOSECHARACTER:\n      console.log(`[changeLevel] Choose character case. Scene: ${scene}`, state)\n      // when you're going to the choose character, any changes that need to be ma\n      break\n    case SCENES.SHOP:\n      console.log(`[changeLevel] Shop case. Scene: ${scene}`, state)\n      // when you're going to the shop, any changes that need to be made\n      break\n    case SCENES.EVENT:\n      console.log(`[changeLevel] Event case. Scene: ${scene}`, state)\n      // when you're going to the event, any changes that need to be ma\n      break\n    case SCENES.REST:\n      console.log(`[changeLevel] Rest case. Scene: ${scene}`, state)\n      // when you're going to the rest, any changes that need to be made\n      break\n    default:\n      console.log(`[changeLevel] default case reached of ${scene}`, state)\n      break // default to level 1 for now. Eventually, this will be a function that returns the level based on the scene.\n  }\n  // send to next level\n  const nextSceneState = updateScene(state, scene)\n  const nextLevelState = updateLevel(nextSceneState, 1)\n}\n\n/**\n * Update the current event.\n *\n * @param {object} newData - The current data object to update.\n * @param {number} newEvent - The new event value.\n * @returns {object} - A copy of the updated data object with the event updated.\n */\nexport function updateCurEvent(newData, newEvent) {\n  const updatedData = { ...newData }\n  updatedData.current.curEvent = newEvent\n  return updatedData\n}\n","export const allEnemies = {\n  1: {\n    regular: [\n      {\n        name: \"Chipwing\",\n        health: 10,\n        maxHP: 10,\n        passive: \"none\",\n        bio: \"A furry eye in the sky\",\n        img: \"/creatures/Chipwing2.png\",\n        status: null,\n        attacks: [\n          {\n            name: \"flails tail at you\",\n            type: \"hit\",\n            damage: 20,\n            status: \"dizzy\",\n          },\n          { name: \"flails tail HARDER\", type: \"hit\", damage: 40, status: null },\n        ],\n      },\n      {\n        name: \"Zappydillo\",\n        health: 32,\n        maxHP: 32,\n        passive: \"none\",\n        bio: \"An Armadillo with an electric attitude\",\n        img: \"/creatures/Zappydillo.png\",\n        status: null,\n        attacks: [\n          {\n            name: \"Spike Shock\",\n            type: \"hit\",\n            damage: 12,\n            status: \"dizzy\",\n          },\n          { name: \"Ground Tremble\", type: \"hit\", damage: 3, status: null },\n        ],\n      },\n      // {\n      //   name: \"EvilMan\",\n      //   health: 10,\n      //   passive: \"none\",\n      //   bio: \"A bad dude\",\n      //   img: null,\n      //   status: null,\n      //   attacks: [\n      //     {\n      //       name: \"flails fist at you\",\n      //       type: \"hit\",\n      //       damage: 20,\n      //       status: \"dizzy\",\n      //     },\n      //     { name: \"flails fist HARDER\", type: \"hit\", damage: 40, status: null },\n      //   ],\n      // },\n      {\n        name: \"Bunster\",\n        health: 17,\n        maxHP: 17,\n        passive: \"none\",\n        bio: \"'The experiment went wrong, and then it started to hop' -Professor Blue\",\n        status: null,\n        img: \"/creatures/Bunster.png\",\n        attacks: [\n          { name: \"Hop hop crush\", type: \"hit\", damage: 9, status: \"dizzy\" },\n          { name: \"Roll Over\", type: \"hit\", damage: 4, status: null },\n        ],\n      },\n      {\n        name: \"Squidull\",\n        health: 26,\n        maxHP: 26,\n        passive: \"none\",\n        bio: \"Not the sharpest squid in the squad\",\n        status: null,\n        img: \"/creatures/Squidull.png\",\n        attacks: [\n          { name: \"Squirt\", type: \"hit\", damage: 10, status: \"dizzy\" },\n          { name: \"Jet Stream\", type: \"hit\", damage: 15, status: null },\n        ],\n      },\n      // {\n      //   name: \"Goobie\",\n      //   health: 15,\n      //   passive: \"none\",\n      //   bio: \"Slick, slimy, and oozing too much for my taste\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     { name: \"Sliiiime Slap\", type: \"hit\", damage: 6, status: \"dizzy\" },\n      //     { name: \"Goo Throw\", type: \"hit\", damage: 4, status: null },\n      //   ],\n      // },\n      // {\n      //   name: \"PigFi\",\n      //   health: 30,\n      //   passive: \"none\",\n      //   bio: \"A blazing pig. This breed is much more happy when not on fire\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     { name: \"Pig Roll\", type: \"hit\", damage: 8, status: \"dizzy\" },\n      //     { name: \"Blazing Oink\", type: \"hit\", damage: 12, status: null },\n      //   ],\n      // },\n      // {\n      //   name: \"Karprocket\",\n      //   health: 20,\n      //   passive: \"none\",\n      //   bio: \"A Karp breed that has 6 rocket launchers attached to it\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     { name: \"Rocket Barrage\", type: \"hit\", damage: 14, status: \"dizzy\" },\n      //     { name: \"Intense Splash\", type: \"hit\", damage: 5, status: null },\n      //   ],\n      // },\n      // {\n      //   name: \"Shroomdizz\",\n      //   health: 18,\n      //   passive: \"none\",\n      //   bio: \"A mushroom that has spores that make anything dizzy. Even itself.\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     { name: \"Rocket Barrage\", type: \"hit\", damage: 14, status: \"dizzy\" },\n      //     { name: \"Intense Splash\", type: \"hit\", damage: 5, status: null },\n      //   ],\n      // },\n      // {\n      //   name: \"Lackey\",\n      //   health: 30,\n      //   passive: \"heal\",\n      //   bio: \"A bad dude's smaller dude\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     {\n      //       name: \"flails fist weakly\",\n      //       type: \"hit\",\n      //       damage: 11,\n      //       status: \"dizzy\",\n      //     },\n      //     { name: \"teeny punch\", type: \"hit\", damage: 5, status: null },\n      //   ],\n      // },\n      // {\n      //   name: \"Grunt\",\n      //   health: 20,\n      //   passive: \"boost\",\n      //   bio: \"A crazy guy, don't make him angry\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     { name: \"Big ol' slash\", type: \"hit\", damage: 20, status: \"weak\" },\n      //     { name: \"comically bad swipe\", type: \"hit\", damage: 3, status: null },\n      //   ],\n      // },\n      // {\n      //   name: \"Grunt\",\n      //   health: 20,\n      //   passive: \"boost\",\n      //   bio: \"A crazy guy, don't make him angry\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     { name: \"Big ol' slash\", type: \"hit\", damage: 20, status: \"weak\" },\n      //     { name: \"comically bad swipe\", type: \"hit\", damage: 3, status: null },\n      //   ],\n      // },\n    ],\n    mini: [\n      {\n        name: \"FrostFang (MiniBoss)\",\n        health: 70,\n        maxHP: 70,\n        passive: null,\n        bio: \"A dragon made of ice that can freeze its enemies with a single touch. It's piercing blue eyes and shimmering crystalline scales are near hypnotic\",\n        img: \"/creatures/bosses/Frostfang.png\",\n        status: null,\n        attacks: [\n          {\n            name: \"Frostbite\",\n            type: \"hit\",\n            damage: 20,\n            status: \"stun\",\n          },\n          {\n            name: \"Ice Storm\",\n            type: \"hit\",\n            damage: 40,\n            status: null,\n          },\n          {\n            name: \"Frost Wing\",\n            type: \"hit\",\n            damage: 25,\n            status: null,\n          },\n          {\n            name: \"Distracted Movement\",\n            type: \"hit\",\n            damage: 0,\n            status: null,\n          },\n          {\n            name: \"Too Tired\",\n            type: \"hit\",\n            damage: 0,\n            status: null,\n          },\n          {\n            name: \"Absolute Zero\",\n            type: \"hit\",\n            damage: 45,\n            status: null,\n          },\n          /*Frostbite - a biting attack that infuses the enemy's bloodstream with ice, causing severe frostbite and slowing their movement. Damage: 20-30. Status effect: Slow (reduces speed and agility).\n          Glacial Spike - the dragon summons a shard of ice and impales the enemy with it, causing massive damage. Damage: 50-70. Status effect: None.\n          Ice Storm - the dragon creates a storm of ice and snow that rains down on the battlefield, freezing enemies and reducing their visibility. Damage: 10-20 per turn for 3 turns. Status effect: Freeze (prevents movement and action).\n          Frost Nova - the dragon releases a burst of icy energy that explodes outwards, freezing all enemies in a radius around it. Damage: 30-50. Status effect: Freeze (prevents movement and action).\n          Absolute Zero - the dragon focuses its power and lowers the temperature around it to absolute zero, causing the enemy's fluids to freeze and shatter their body. Damage: 90-100. Status effect: None. */\n        ],\n      },\n      {\n        name: \"Moltenscale (MiniBoss)\",\n        health: 72,\n        maxHP: 72,\n        passive: null,\n        bio: \"A fiery dragon dragon with bright red scales, a smoldering gaze, volcanic breath, and an ash-covered body.\",\n        img: \"/creatures/bosses/Moltenscale.png\",\n        status: null,\n        attacks: [\n          {\n            name: \"Flame Breath\",\n            type: \"hit\",\n            damage: 15,\n            status: \"stun\",\n          },\n          {\n            name: \"Inferno Tail\",\n            type: \"hit\",\n            damage: 20,\n            status: null,\n          },\n          {\n            name: \"Lava Blast\",\n            type: \"hit\",\n            damage: 25,\n            status: null,\n          },\n          {\n            name: \"Emberstrom\",\n            type: \"hit\",\n            damage: 18,\n            status: null,\n          },\n          {\n            name: \"Incinerate\",\n            type: \"hit\",\n            damage: 40,\n            status: null,\n          },\n          {\n            name: \"Distracted Movement\",\n            type: \"hit\",\n            damage: 0,\n            status: null,\n          },\n          {\n            name: \"Too Tired\",\n            type: \"hit\",\n            damage: 0,\n            status: null,\n          },\n          /*Flame Breath - a stream of flames that engulfs the enemies and causes severe burns. Damage: 30-50. Status effect: Burn (causes ongoing damage each turn).\n          Inferno Wings - the dragon beats its wings, creating a whirlwind of flames that engulfs the battlefield. Damage: 45-65. Status effect: Burn (causes ongoing damage each turn).\n          Lava Blast - the dragon summons a ball of molten lava and hurls it at the enemies, causing massive damage. Damage: 70-90. Status effect: Burn (causes ongoing damage each turn).\n          Emberstorm - the dragon generates a storm of embers and ashes that rains down on the enemies, obscuring their vision and causing ongoing burn damage. Damage: 20-40 per turn for 3 turns. Status effect: Burn (causes ongoing damage each turn).\n          Incinerate - the dragon focuses its flame control and incinerates a single enemy, leaving them nothing but ashes. Damage: 90-100. Status effect: None. */\n        ],\n      },\n      // {\n      //   name: \"EvilMINIBOSSMan\",\n      //   health: 60,\n      //   passive: null,\n      //   bio: \"A bad dude\",\n      //   status: null,\n      //   img: null,\n      //   attacks: [\n      //     {\n      //       name: \"flails fist at you\",\n      //       type: \"hit\",\n      //       damage: 20,\n      //       status: \"stun\",\n      //     },\n      //     {\n      //       name: \"flails fist HARDER\",\n      //       type: \"hit\",\n      //       damage: 40,\n      //       status: null,\n      //     },\n      //     {\n      //       name: \"too tired to attack\",\n      //       type: \"hit\",\n      //       damage: 0,\n      //       status: null,\n      //     },\n      //     {\n      //       name: \"distracted movement\",\n      //       type: \"hit\",\n      //       damage: 0,\n      //       status: null,\n      //     },\n      //   ],\n      // },\n    ],\n    boss: [\n      {\n        name: \"Collos\",\n        health: 120,\n        maxHP: 120,\n        passive: null,\n        bio: \"The Gelatinous Behemoth is a fearsome predator that roams the swamps and marshes, devouring anything in its path. Its massive size and powerful, slimy tentacles make it almost unstoppable.\",\n        img: \"/creatures/bosses/BossColoss.png\",\n        status: null,\n        attacks: [\n          {\n            name: \"Slime Volley\",\n            type: \"hit\",\n            damage: 20,\n            status: \"stun\",\n          },\n          {\n            name: \"Goop Geyser\",\n            type: \"hit\",\n            damage: 12,\n            status: null,\n          },\n          {\n            name: \"Corrosive Ooze\",\n            type: \"hit\",\n            damage: 40,\n            status: null,\n          },\n          {\n            name: \"Distracted Movement\",\n            type: \"hit\",\n            damage: 0,\n            status: null,\n          },\n          {\n            name: \"Too Tired\",\n            type: \"hit\",\n            damage: 0,\n            status: null,\n          },\n        ],\n      },\n    ],\n  },\n  2: { regular: [], mini: [], boss: [] },\n  3: { regular: [], mini: [], boss: [] },\n}\n\n// import data from './enemies.json';\n// let enemySet = JSON.parse(data)\n// console.log(\"enemySet\",enemySet)\n// ---\n// let data = {}\n\n// fetch(\"./enemies.json\")\n//   .then((response) => response.json())\n//   .then((json) => {\n//     data = json\n//     // json is now a JavaScript\n//     console.log(\"our json data\", data)\n//   })\n\n// export const allEnemies = data\n","// import { enemies } from \"../consts/consts\";\nimport { allEnemies } from \"../consts/enemies\"\n// const { enemies } = enemyTypes;\n// actOne: [],\n// actOneMini: [],\n// actOneBoss: [],\n// actTwo: [],\n\n// (make the codegolf clearer below:) export const shuffle = (array, seed) => {\nexport const shuffle = (a, s) => {\n  const obj = Object.entries(\n    a.reduce((o, n) => {\n      const hash = (n.id * (1 + s)) % a.length\n      if (!o[hash]) {\n        o[hash] = []\n      }\n      o[hash].push(n)\n      return o\n    }, {})\n  )\n  obj.sort(([ahash], [bhash]) => ahash - bhash)\n  return obj.reduce((f, [, v]) => [...f, ...v], [])\n}\n// a = [1,2,3,4,5], s = .5\n// o = { 1.5: [1], 2.5: [2], 3.5: [3], 4.5: [4], .5: [5] }\n// obj = [[.5, [5]], [1.5, [1]], [2.5, [2]], ...]\n// [5, 1, 2, 3, 4]\n\nexport const decideEnemyArr = (act, type) => {\n  // acts would be Act1, Act2, Act3\n  // types woul be regular, miniboss, boss\n  console.log(\"our data for act and type\", act, type)\n  return allEnemies[act][type]\n}\n\n// seed, and lvl/miniboss/boss/etc. What type\nexport const decideEnemy = (seed, enemiesArr) => {\n  //@todo: check for which level enemies they should be\n  //return those level enemies like\n  const rndm = Math.floor(seed * enemiesArr.length)\n  const ourEnemy = enemiesArr[rndm]\n  return ourEnemy\n}\n\nexport const decideEnemyATK = (seed, enemyAttacks) => {\n  // console.log(`setAtkHandler: missing attacks`, state.battle.enemy);\n  console.log(`ennmyATK enemyAttacks`, enemyAttacks, `seed`, seed)\n  const randomizeATK = Math.floor(seed * enemyAttacks.length)\n  const nextATK = enemyAttacks[randomizeATK]\n  console.log(`decideEnemyATK: next attack`, nextATK)\n\n  return nextATK\n}\n\nlet id = 20\n// export const uniqueId = (prefix = '') => prefix + id++;\nexport const uniqueId = () => id++\n// if I need packId to be unique and generated, I can uncomment below\n// let packId = 20\n// export const uniquePackId = () => packId++\nexport const applyUniqueId = (card) => {\n  // return {...card, Id: uniqueId()}\n  return {...card, id: uniqueId()}\n\n}\n","export const EFFECTS = {\n  DOUBLEDAMAGE: \"doubledamage\",\n  STUN: \"stun\",\n  DRAW: \"draw\",\n  SLEEP: \"sleep\",\n  POISON: \"poison\",\n  // Applies damage every turn, stacks with additional poison attacks\n  HEALING: \"healing\",\n  // Heal a player for amt\n  SHEILD: \"sheild\",\n  // Apply temporary effect that takes away some damage player will recieve\n  BUILDUP: \"buildup\",\n  // For each card used this turn, add more damage this card will apply\n  LIFESTEAL: \"lifesteal\",\n  // A vampiric effect that heals player for the amt of dmg the attack does\n  ARMOR: \"armor\",\n  // Apply Battle-long effect that takes away some damage player will recieve\n  EVADE: \"evade\",\n  // Apply percentage chance that player does not receive damage\n  WEAKENED: \"weakened\",\n  // Apply a amt of damage that is weakens the enemy\n  // STACKING: \"stacking\",\n  ENERGIZE: \"energize\",\n  // Gain more energy\n  AURA: \"aura\"\n  // If this card is in hand, apply effect on it to other cards in hand\n}\n","// import { uniqueId } from \"../utils/reducer-utils\"\nimport { EFFECTS } from \"../effects\"\nconst { POISON, STUN, SLEEP, DOUBLEDAMAGE, DRAW, BUILDUP, LIFESTEAL } = EFFECTS\n\nexport const poisonCards = {\n  ToxicGas: {\n    type: \"Poison\",\n    name: \"Toxic Gas\",\n    num: 0,\n    cost: 2,\n    // id: uniqueId(),\n    effect: POISON,\n    qty: 3,\n    price: 37,\n  },\n  AcidSpray: {\n    type: \"Poison\",\n    name: \"Acid Spray\",\n    num: 0,\n    cost: 2,\n    // id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n    price: 34,\n  },\n  ToxicSpores: {\n    type: \"Poison\",\n    name: \"Toxic Spores\",\n    num: 0,\n    cost: 2,\n    // id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  PoisonousTouch: {\n    type: \"Poison\",\n    name: \"Poisonous Touch\",\n    num: 0,\n    cost: 1,\n    // id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  ToxicOoze: {\n    type: \"Poison\",\n    name: \"Toxic Ooze\",\n    num: 0,\n    cost: 2,\n    // id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  PoisonCloud: {\n    type: \"Poison\",\n    name: \"Poison Cloud\",\n    num: 0,\n    cost: 2,\n    // id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n}\nexport const stunCards = {\n  throwFist: {\n    type: \"Electric\",\n    name: \"Throw Fist\",\n    num: 3,\n    cost: 2,\n    //   id: uniqueId(),\n    effect: STUN,\n  },\n\n  throwFistPlus: {\n    type: \"Electric\",\n    name: \"Throw Fist+\",\n    num: 5,\n    cost: 2,\n    //   id: uniqueId(),\n    effect: STUN,\n  },\n  chaoticBolt: {\n    type: \"Electric\",\n    name: \"Chaotic Bolt\",\n    num: 3,\n    cost: 2,\n    //   id: uniqueId(),\n    effectChance: 0.5,\n    effect: STUN,\n  },\n}\nexport const ddamageCards = {\n  focus: {\n    type: \"Physical\",\n    name: \"Focus\",\n    num: 0,\n    cost: 1,\n    //   id: uniqueId(),\n    effect: DOUBLEDAMAGE,\n  },\n  focusPunch: {\n    type: \"Physical\",\n    name: \"Focus Punch\",\n    num: 2,\n    cost: 1,\n    //   id: uniqueId(),\n    effect: DOUBLEDAMAGE,\n  },\n}\nexport const sleepCards = {\n  hypnosis: {\n    type: \"Psychic\",\n    name: \"Hypnosis\",\n    num: 0,\n    cost: 2,\n    //   id: uniqueId(),\n    effect: SLEEP,\n  },\n  hypnosisPlus: {\n    type: \"Psychic\",\n    name: \"Hypnosis+\",\n    num: 0,\n    cost: 1,\n    //   id: uniqueId(),\n    effect: SLEEP,\n  },\n}\nexport const buildupCards = {\n  channel: {\n    type: \"Psychic\",\n    name: \"Channel\",\n    cost: 1,\n    num: 1,\n    qty: 0,\n    effect: BUILDUP,\n    // id: uniqueId(),\n  },\n  channelPlus: {\n    type: \"Psychic\",\n    name: \"Channel Plus\",\n    cost: 1,\n    num: 5,\n    qty: 0,\n    effect: BUILDUP,\n    // id: uniqueId(),\n  },\n}\nexport const lifestealCards = {\n  bloodsuck: {\n    type: \"Unholy\",\n    name: \"Bloodsuck\",\n    cost: 1,\n    num: 4,\n    qty: 0,\n    effect: LIFESTEAL,\n    // id: uniqueId(),\n  },\n  drainingKiss: {\n    type: \"Unholy\",\n    name: \"Draining Kiss\",\n    cost: 1,\n    num: 6,\n    qty: 0,\n    effect: LIFESTEAL,\n    // id: uniqueId(),\n  },\n}\nexport const rewardCards = {\n  flameToss: {\n    type: \"fire\",\n    name: \"Flame Toss\",\n    num: 9,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  fireBreath: {\n    type: \"fire\",\n    name: \"Fire Breath\",\n    num: 11,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  broil: {\n    type: \"fire\",\n    name: \"Broil\",\n    num: 18,\n    cost: 2,\n    // id: uniqueId(),\n    effect: null,\n  },\n  waterMissile: {\n    type: \"water\",\n    name: \"Water Missile\",\n    num: 9,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  aquaBlast: {\n    type: \"water\",\n    name: \"Aqua Blast\",\n    num: 17,\n    cost: 2,\n    // id: uniqueId(),\n    effect: null,\n  },\n  drippingWet: {\n    type: \"water\",\n    name: \"Dripping Wet\",\n    num: 5,\n    cost: 0,\n    // id: uniqueId(),\n    effect: null,\n  },\n  grassBlade: {\n    type: \"grass\",\n    name: \"Grass Blade\",\n    num: 14,\n    cost: 2,\n    // id: uniqueId(),\n    effect: null,\n  },\n  pelletGun: {\n    type: \"grass\",\n    name: \"Pellet Gun\",\n    num: 10,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  swarm: {\n    type: \"grass\",\n    name: \"Swarm\",\n    num: 19,\n    cost: 2,\n    // id: uniqueId(),\n    effect: null,\n  },\n  shadowDrop: {\n    type: \"poison\",\n    name: \"Shadow Drop\",\n    num: 6,\n    cost: 0,\n    // id: uniqueId(),\n    effect: null,\n    //K0 chance\n  },\n  electricSymphony: {\n    type: \"electric\",\n    name: \"Electric Symphony\",\n    num: 13,\n    cost: 2,\n    // id: uniqueId(),\n    effect: null,\n  },\n  backstab: {\n    type: \"normal\",\n    name: \"backstab\",\n    num: 4,\n    cost: 0,\n    // id: uniqueId(),\n    effect: null,\n  },\n  frostBlast: {\n    type: \"Ice\",\n    name: \"Frost Blast\",\n    num: 9,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  hypnoticDistress: {\n    type: \"mind\",\n    name: \"Hypnotic Distress\",\n    num: 8,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  blackOoze: {\n    type: \"pioson\",\n    name: \"Black Ooze\",\n    num: 9,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  overload: {\n    type: \"electric\",\n    name: \"overload\",\n    num: 11,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  stunningDelivery: {\n    type: \"electric\",\n    name: \"Stunning Delivery\",\n    num: 7,\n    cost: 1,\n    // id: uniqueId(),\n    effect: STUN,\n  },\n}\nexport const shopCards = {\n  ToxicFog: {\n    type: \"Poison\",\n    name: \"Toxic Fog\",\n    num: 0,\n    cost: 3,\n    effect: POISON,\n    qty: 8,\n    price: 39,\n  },\n  AcidRain: {\n    type: \"Poison\",\n    name: \"Acid Rain\",\n    num: 0,\n    cost: 3,\n    effect: POISON,\n    qty: 9,\n    price: 37,\n  },\n  PoisonousMist: {\n    type: \"Poison\",\n    name: \"Poisonous Mist\",\n    num: 0,\n    cost: 2,\n    effect: POISON,\n    qty: 7,\n    price: 36,\n  },\n  NoxiousBite: {\n    type: \"Poison\",\n    name: \"Noxious Bite\",\n    num: 0,\n    cost: 2,\n    effect: POISON,\n    qty: 6,\n    price: 35,\n  },\n  VenomousFang: {\n    type: \"Poison\",\n    name: \"Venomous Fang\",\n    num: 0,\n    cost: 0,\n    effect: POISON,\n    qty: 4,\n    price: 38,\n  },\n  PoisonousClaw: {\n    type: \"Poison\",\n    name: \"Poisonous Claw\",\n    num: 0,\n    cost: 2,\n    effect: POISON,\n    qty: 6,\n    price: 36,\n  },\n  ElectroPunch: {\n    type: \"Electric\",\n    name: \"Electro Punch\",\n    num: 11,\n    cost: 2,\n    effect: STUN,\n    price: 37,\n  },\n  Shockwave: {\n    type: \"Electric\",\n    name: \"Shockwave\",\n    num: 8,\n    cost: 2,\n    effect: STUN,\n    price: 35,\n  },\n  ThunderFist: {\n    type: \"Electric\",\n    name: \"Thunder Fist\",\n    num: 10,\n    cost: 2,\n    effect: STUN,\n    price: 38,\n  },\n  PowerSurge: {\n    type: \"Electric\",\n    name: \"Power Surge\",\n    num: 7,\n    cost: 2,\n    effect: STUN,\n    price: 36,\n  },\n  ElectricBolt: {\n    type: \"Electric\",\n    name: \"Electric Bolt\",\n    num: 14,\n    cost: 3,\n    effect: STUN,\n    price: 37,\n  },\n  StrongHit: {\n    type: \"Physical\",\n    name: \"Strong Hit\",\n    num: 5,\n    cost: 2,\n    effect: DOUBLEDAMAGE,\n    price: 36,\n  },\n  PowerPunch: {\n    type: \"Physical\",\n    name: \"Power Punch\",\n    num: 6,\n    cost: 2,\n    effect: DOUBLEDAMAGE,\n    price: 38,\n  },\n  ForcefulBlow: {\n    type: \"Physical\",\n    name: \"Forceful Blow\",\n    num: 5,\n    cost: 2,\n    effect: DOUBLEDAMAGE,\n    price: 37,\n  },\n  DreamCatcher: {\n    type: \"Psychic\",\n    name: \"Dream Catcher\",\n    num: 4,\n    cost: 1,\n    effect: SLEEP,\n    price: 25,\n  },\n  HypnoWave: {\n    type: \"Psychic\",\n    name: \"Hypno Wave\",\n    num: 3,\n    cost: 1,\n    effect: SLEEP,\n    price: 22,\n  },\n  // Telekinesis: {\n  //   type: \"Psychic\",\n  //   name: \"Telekinesis\",\n  //   num: 2,\n  //   cost: 2,\n  //   effect: LIFTING,\n  //   price: 32,\n  // },\n  PsychicBlast: {\n    type: \"Psychic\",\n    name: \"Psychic Blast\",\n    num: 1,\n    cost: 2,\n    effect: null,\n    price: 29,\n  },\n}\nexport const basicCards = {\n  flame: {\n    type: \"Fire\",\n    name: \"Flame\",\n    num: 4,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  flamethrower: {\n    type: \"Fire\",\n    name: \"Flamethrower\",\n    num: 8,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  gush: {\n    type: \"Water\",\n    name: \"Gush\",\n    num: 2,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  gushPlus: {\n    type: \"Water\",\n    name: \"Gush+\",\n    num: 6,\n    cost: 1,\n    // id: uniqueId(),\n    effect: null,\n  },\n  think: {\n    type: \"Psychic\",\n    name: \"Think\",\n    num: 0,\n    cost: 0,\n    // id: uniqueId(),\n    effect: DRAW,\n    qty: 1,\n  },\n  thinkPlus: {\n    type: \"Psychic\",\n    name: \"Think+\",\n    num: 0,\n    cost: 0,\n    // id: uniqueId(),\n    effect: DRAW,\n    qty: 2,\n  },\n  recollectMind: {\n    type: \"Psychic\",\n    name: \"Recollect Mind\",\n    num: 0,\n    cost: 1,\n    // id: uniqueId(),\n    effect: DRAW,\n    qty: 2,\n  },\n  recollectMindPlus: {\n    type: \"Psychic\",\n    name: \"Recollect Mind+\",\n    num: 0,\n    cost: 1,\n    // id: uniqueId(),\n    effect: DRAW,\n    qty: 3,\n  },\n}\n","import { uniqueId } from \"../utils/reducer-utils\"\nimport { EFFECTS } from \"../effects\"\nimport { basicCards, stunCards } from \"./allCards\"\nconst { DRAW, STUN, DOUBLEDAMAGE, SLEEP, POISON } = EFFECTS\n\nexport const startingDeck = [\n  { ...basicCards.flame, id: 1 },\n  { ...basicCards.flame, id: 2 },\n  { ...basicCards.flame, id: 3 },\n  { ...basicCards.flame, id: 4 },\n  { ...basicCards.flame, id: 5 },\n  { ...basicCards.flame, id: 6 },\n  { ...basicCards.flame, id: 7 },\n  { ...basicCards.flame, id: 8 },\n  { ...basicCards.flamethrower, id: 9 },\n  { ...basicCards.flamethrower, id: 10 },\n  { ...basicCards.flamethrower, id: 11 },\n  // { ...stunCards.chaoticBolt, id: 12},\n  // { ...stunCards.chaoticBolt, id: 13},\n  { ...stunCards.chaoticBolt, id: 14},\n  { ...stunCards.chaoticBolt, id: 15},\n  { ...stunCards.throwFist, id: 12 },\n  { ...stunCards.throwFistPlus, id: 13 },\n  // { ...buildupCards.channel, id: 14 },\n  // { ...buildupCards.channel, id: 15 },\n  // {...ddamageCards.focus, id: 18},\n  // {...ddamageCards.focusPunch, id: 19},\n]\n\n//Needs to be functions anyways so the deck format below won't work\nexport const startingTestDeck = [\n  {\n    type: \"Psychic\",\n    name: \"Hypnosis\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: SLEEP,\n  },\n  {\n    type: \"Psychic\",\n    name: \"Hypnosis\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: SLEEP,\n  },\n  {\n    type: \"Psychic\",\n    name: \"Hypnosis+\",\n    num: 0,\n    cost: 1,\n    id: uniqueId(),\n    effect: SLEEP,\n  },\n  {\n    type: \"Grass\",\n    name: \"Leaf Storm\",\n    num: 2,\n    cost: 1,\n    id: uniqueId(),\n    effect: DOUBLEDAMAGE,\n  },\n  // {\n  //   type: \"Grass\",\n  //   name: \"Leaf Storm\",\n  //   num: 2,\n  //   cost: 1,\n  //   id: uniqueId(),\n  //   effect: DOUBLEDAMAGE,\n  // },\n  {\n    type: \"Fire\",\n    name: \"Flamethrower\",\n    num: 4,\n    cost: 1,\n    id: uniqueId(),\n    effect: null,\n  },\n  {\n    type: \"Fire\",\n    name: \"Flamethrower\",\n    num: 4,\n    cost: 1,\n    id: uniqueId(),\n    effect: null,\n  },\n  {\n    type: \"Fire\",\n    name: \"Flamethrower+\",\n    num: 8,\n    cost: 1,\n    id: uniqueId(),\n    effect: null,\n  },\n  {\n    type: \"Water\",\n    name: \"Gush\",\n    num: 2,\n    cost: 1,\n    id: uniqueId(),\n    effect: null,\n  },\n  {\n    type: \"Water\",\n    name: \"Gush+\",\n    num: 6,\n    cost: 1,\n    id: uniqueId(),\n    effect: null,\n  },\n  {\n    type: \"Poison\",\n    name: \"Sting\",\n    num: 2,\n    cost: 1,\n    id: uniqueId(),\n    effect: POISON,\n  },\n  {\n    type: \"Poison\",\n    name: \"Sting+\",\n    num: 5,\n    cost: 1,\n    id: uniqueId(),\n    effect: null,\n  },\n  {\n    type: \"Physical\",\n    name: \"Throw Fist\",\n    num: 3,\n    cost: 2,\n    id: uniqueId(),\n    effect: STUN,\n  },\n  {\n    type: \"Physical\",\n    name: \"Throw Fist+\",\n    num: 5,\n    cost: 2,\n    id: uniqueId(),\n    effect: STUN,\n  },\n  {\n    type: \"Psychic\",\n    name: \"Think\",\n    num: 0,\n    cost: 0,\n    id: uniqueId(),\n    effect: DRAW,\n    qty: 1,\n  },\n  {\n    type: \"Psychic\",\n    name: \"Think+\",\n    num: 0,\n    cost: 0,\n    id: uniqueId(),\n    effect: DRAW,\n    qty: 2,\n  },\n  {\n    type: \"Psychic\",\n    name: \"Recollect Mind\",\n    num: 0,\n    cost: 1,\n    id: uniqueId(),\n    effect: DRAW,\n    qty: 2,\n  },\n  {\n    type: \"Psychic\",\n    name: \"Recollect Mind+\",\n    num: 0,\n    cost: 1,\n    id: uniqueId(),\n    effect: DRAW,\n    qty: 3,\n  },\n  //\n  {\n    type: \"Poison\",\n    name: \"Toxic Gas\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 3,\n  },\n  {\n    type: \"Poison\",\n    name: \"Venomous Bite\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  {\n    type: \"Poison\",\n    name: \"Poison Needle\",\n    num: 0,\n    cost: 1,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  {\n    type: \"Poison\",\n    name: \"Acid Spray\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  {\n    type: \"Poison\",\n    name: \"Toxic Spores\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  {\n    type: \"Poison\",\n    name: \"Poisonous Touch\",\n    num: 0,\n    cost: 1,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  {\n    type: \"Poison\",\n    name: \"Toxic Ooze\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n  {\n    type: \"Poison\",\n    name: \"Poisonous Cloud\",\n    num: 0,\n    cost: 2,\n    id: uniqueId(),\n    effect: POISON,\n    qty: 6,\n  },\n]\n\nexport const startingData = {\n  deck: startingDeck,\n  gold: 50,\n  hero: {\n    health: 100,\n    energy: 5,\n    status: \"Feeling Fine\",\n    effects: {\n      buff: null,\n      buildup: 1,\n    },\n    maxHP: 100,\n    maxEnergy: 5,\n    armor: 0,\n    power: 0,\n  },\n  battle: {\n    enemy: {\n      name: \"sample guy\",\n      bio: \"just a standaard enemy\",\n      health: \"30\",\n      maxHP: \"30\",\n      energy: 6,\n      status: \"none\",\n      nextAttack: \"none\",\n      attacks: [\n        {\n          name: \"sample atk hitting you\",\n          type: \"hit\",\n          damage: 20,\n          status: STUN,\n        },\n        {\n          name: \"sample atk hitting again\",\n          type: \"hit\",\n          damage: 40,\n          status: null,\n        },\n      ],\n    },\n    runes: [],\n    hand: [],\n    discarded: [],\n    beginning: false,\n    dialog: null,\n  },\n  curScene: { scene: \"intro\", lvl: 1, act: 1 },\n  curEvent: null,\n  availableRewards: [],\n  alert: \"\",\n\n  // alert: \"--- Cards PERMANENTLY go away. They can only be used once ---\",\n  eventResultObj: null,\n  devMode: false,\n}\n\nexport const sampleItems = [\n  {\n    name: \"Wand of Gameleon\",\n    desc: \"+50 to total health\",\n    boost: { health: 50 },\n    flavortext: `\"The Wand of Gameleon's power is has been spoken of \n          in historical texts to give life\n          to the one who holds it\" -Korvo, the missing link`,\n    price: 50,\n  },\n  {\n    name: \"Kamuk's Brute Sword\",\n    desc: \"-4 to total health, +3 to base damage\",\n    boost: { health: -50, baseDMG: 3 },\n    flavortext: `Kamuk's prey never stood a chance.\n     His rage radiated from him, \n     imbuing everything around with power,\n      the grass, his clothes, and his blade.`,\n    price: 25,\n  },\n  {\n    name: \"Isiaac's Lucky tooth\",\n    desc: \"Every 3 turns, you get an extra energy\",\n    boost: { rune: \"RUNE.LUCKYTOOTH (@TODO: add this)\" },\n    flavortext: `Isiaac only knew pain, so he didn't realized this was missing`,\n    price: 40,\n  },\n]\nexport const fullEnergyAmount = 5\nexport const startHandCount = 8\nexport const poisonDamage = 5\n\nexport const energyEmoji = \"🧪\"\nexport const goldEmoji = \"💰\"\nexport const dmgEmoji = \"👊\"\nexport const clockEmoji = \"⏰\"\n\n","import { uniqueId } from \"./utils/reducer-utils\"\nimport { startHandCount } from \"./consts/consts\"\n\nexport const ACTIONS = {\n  SET_TRANS: \"set-trans\",\n  SET_SCENE: \"set_scene\",\n  SET_MYDATA: \"set-mydata\",\n  APPLY_HEAL: \"apply-heal\",\n  SET_MYBALANCE: \"set-mybalance\",\n  SET_ENEMY: \"set-enemy\",\n  SET_ATK: \"set-atk\",\n  SET_DECK: \"set-deck\",\n  SET_ALERT: \"set_alert\",\n  DRAW_CARD: \"draw-card\",\n  PLAY_CARD: \"play-card\",\n  SELECT_REST: \"select-rest\",\n  GENERATE_REWARDS: \"generate-rewards\",\n  SELECT_REWARD: \"select-reward\",\n  SELECT_PACK: \"select-pack\",\n  PURCHASE_ITEM: \"purchase-item\",\n  DISCARD_CARD: \"discard-card\",\n  BEGIN_BATTLE: \"begin-battle\",\n  TAKE_DAMAGE: \"take-damage\",\n  END_TURN: \"end-turn\",\n  ADD_CARD: \"add-card\",\n  GAME_OVER: \"game-over\",\n}\n\nexport const ENEMY_TYPES = {\n  REG: \"regular\",\n  MINI: \"miniboss\",\n  BOSS: \"boss\",\n}\n\nexport const addCardAction = (card) => {\n  const cardWithFreshID = { ...card, id: uniqueId() }\n  return {\n    type: ACTIONS.SELECT_REWARD,\n    payload: {\n      card: cardWithFreshID,\n      battlePayload: {\n        enemySeed: Math.random(),\n        atkSeed: Math.random(),\n        beginBattleSeed: Math.random(),\n        startingHandCount: startHandCount,\n      },\n    },\n  }\n}\n\nexport const addPackAction = (ourPack) => {\n  return {\n    type: ACTIONS.SELECT_PACK,\n    payload: {\n      pack: ourPack,\n      battlePayload: {\n        enemySeed: Math.random(),\n        atkSeed: Math.random(),\n        beginBattleSeed: Math.random(),\n        startingHandCount: startHandCount,\n      },\n    },\n  }\n}\n\nexport const playCardAction = (card) => {\n  return {\n    type: ACTIONS.PLAY_CARD,\n    payload: {\n      card,\n      battlePayload: {\n        enemySeed: Math.random(),\n        atkSeed: Math.random(),\n        beginBattleSeed: Math.random(),\n        startingHandCount: startHandCount,\n      },\n    },\n  }\n}\n\nexport const endTurnAction = () => {\n  console.log(`End Turn`)\n  return {\n    type: ACTIONS.END_TURN,\n    payload: {\n      seed: Math.random(),\n      enemySeed: Math.random(),\n      atkSeed: Math.random(),\n      beginBattleSeed: Math.random(),\n      startingHandCount: startHandCount,\n    },\n  }\n}\n\n// @TODO finish or remove this Transition functionality\nexport const transitionSceneAction = () => {\n  return {\n    type: ACTIONS.SET_TRANS,\n    payload: {\n      enemySeed: Math.random(),\n      atkSeed: Math.random(),\n      beginBattleSeed: Math.random(),\n      startingHandCount: startHandCount,\n    },\n  }\n}\n\nexport const setSceneAction = () => {\n  return {\n    type: ACTIONS.SET_SCENE,\n    payload: {\n      enemySeed: Math.random(),\n      atkSeed: Math.random(),\n      beginBattleSeed: Math.random(),\n      startingHandCount: startHandCount,\n    },\n  }\n}\n\nexport const buyCardAction = (card) => {\n  console.log(`adding this card:`, card)\n  return {\n    type: ACTIONS.PURCHASE_ITEM,\n    payload: {\n      card,\n      battlePayload: {\n        enemySeed: Math.random(),\n        atkSeed: Math.random(),\n        beginBattleSeed: Math.random(),\n        startingHandCount: startHandCount,\n      },\n    },\n  }\n}\n\nexport const eventChoiceAction = (choice) => {\n  return {\n    type: ACTIONS.EVENT_CHOICE,\n    payload: {\n      choice,\n      battlePayload: {\n        enemySeed: Math.random(),\n        atkSeed: Math.random(),\n        beginBattleSeed: Math.random(),\n        startingHandCount: startHandCount,\n      },\n    },\n  }\n}\n","import React from 'react'\nimport { motion } from 'framer-motion'\n\nexport const Dialog = ({ myText, size, speed = 0.05 }) => {\n  // const initialText = \"Dialogue.js sample text. It is long so that it is noticable\"\n  //if newText, wait .5 seconds, and then run the text\n\n  const usedText = myText ? myText : 'default'\n  return (\n    <>\n      {usedText.split('').map((text, index) => {\n        return (\n          <motion.span\n            key={index}\n            initial=\"hidden\"\n            animate={{\n              backgroundColor: ['#00000000', '#000', '#00000000'],\n              //For Black\n              // color: [\"#00000000\", \"#00000000\", \"#000\"],\n              //For White\n              color: ['#ffffff00', '#ffffff00', '#ffffff'],\n              width: ['5px', '5px', '0px'],\n            }}\n            transition={{\n              duration: 0.05,\n              //speed\n              delay: index * speed,\n            }}\n            style={{ fontSize: `${size}px`, fontFamily: 'Silkscreen' }}\n            // animate={replay ? \"visible\" : \"hidden\"}\n          >\n            {text}\n          </motion.span>\n        )\n      })}\n    </>\n  )\n}\n\nexport default Dialog\n","import React from \"react\";\nimport \"./ThemedButton.css\";\n\nconst ThemedButton = ({ text, onClick }) => (\n//   <button className=\"stylish-button\">{text}</button>\n  <button className=\"stylish-button\" onClick={() => onClick()}>{text ? text : \"no text provided\"}</button>\n);\n\nexport default ThemedButton;","/**\n * Enum representing named slots in a party.\n * @readonly\n * @enum {string}\n */\nexport const Party = {\n  SLOT_1: 'Slot 1',\n  SLOT_2: 'Slot 2',\n  SLOT_3: 'Slot 3',\n  SLOT_4: 'Slot 4',\n  SLOT_5: 'Slot 5',\n  SLOT_6: 'Slot 6',\n}\n\n/**\n * Represents the user's party with named slots.\n * @type {Object.<string, (null|any)>}\n */\nexport const userParty = {\n  [Party.SLOT_1]: null, // Initially empty slot\n  [Party.SLOT_2]: null,\n  [Party.SLOT_3]: null,\n  [Party.SLOT_4]: null,\n  [Party.SLOT_5]: null,\n  [Party.SLOT_6]: null,\n}\n\n/**\n * Represents the opponent's party with named slots.\n * @type {Object.<string, (null|any)>}\n */\nexport const opponent = {\n  [Party.SLOT_1]: null, // Initially empty slot\n  [Party.SLOT_2]: null,\n  [Party.SLOT_3]: null,\n  [Party.SLOT_4]: null,\n  [Party.SLOT_5]: null,\n  [Party.SLOT_6]: null,\n}\n\n/**\n * Adds a party member to a specified slot.\n * @param {Object.<string, (null|any)>} party - The party object.\n * @param {string} slotName - The name of the slot to add the member to.\n * @param {any} member - The party member to add to the slot.\n */\nexport const addPartyMemberToSlot = (party, slotName, member) => {\n  if (party.hasOwnProperty(slotName)) {\n    party[slotName] = member\n  }\n}\n\n//   const userPartyMember = {\n//     name: \"Player1Monster\",\n//     level: 10,\n// Other properties of the party member...\n//   };\n// Example usage:\n//   addPartyMemberToSlot(userParty, Party.SLOT_1, userPartyMember); // Add a member to Slot 1\n","export const SCENES = {\n  TRANSITION: \"transition\",\n  INTRO: \"intro\",\n  SHOP: \"shop\",\n  MAP: \"map\",\n  EVENT: \"event\",\n  REST: \"rest\",\n  REWARD: \"reward\",\n  PACKREWARD: \"pack-reward\",\n  CONVO: \"convo\",\n  BATTLE: \"battle\",\n  MINIBOSS: \"miniboss\",\n  BOSS: \"boss\",\n  GAMEOVER: \"game-over\",\n  VICTORY: \"victory\",\n}\n","const emojis = {\n  primary: '🌟',\n  secondary: '🌙',\n  debug: '🐛',\n  info: '📢',\n  warn: '⚠️',\n  error: '❌',\n  success: '✅',\n  link: '🔗',\n  change: '🔄',\n  creature: '🐉', // Emoji for creature data\n  move: '💨', // Emoji for move data\n  pay: '💰', // New emoji for pay cost phase\n  calcDamage: '💥', // New emoji for calculate damage phase\n  effect: '✨', // New emoji for resolve effect phase\n  apply: '🎯', // New emoji for apply statuses phase\n  damage: '💔', // New emoji for apply damage phase\n  end: '🏁', // New emoji for end phase\n  level: '📈', // New emoji for level-related logs\n}\n\nconst logTypes = {\n  primary: { color: 'white', background: 'blue', style: 'bold' },\n  secondary: { color: 'black', background: 'gray', style: 'normal' },\n  error: { color: 'white', background: 'red', style: 'bold' },\n  info: { color: 'black', background: 'cyan', style: 'italic' },\n  creature: { color: 'white', background: 'green', style: 'bold' }, // LogType for creature data\n  move: { color: 'white', background: 'purple', style: 'italic' }, // LogType for move data\n  pay: {\n    color: 'black',\n    background: 'yellow',\n    style: 'bold; font-family:cursive;',\n  }, // New logType for pay cost phase with cursive font\n  calcDamage: {\n    color: 'white',\n    background: 'orange',\n    style: 'italic; font-family:fantasy;',\n  }, // New logType for calculate damage phase with fantasy font\n  effect: {\n    color: 'black',\n    background: 'pink',\n    style: 'bold; font-family:sans-serif;',\n  }, // New logType for resolve effect phase with sans-serif font\n  apply: {\n    color: 'white',\n    background: 'brown',\n    style: 'italic; font-family:courier;',\n  }, // New logType for apply statuses phase with courier font\n  damage: {\n    color: 'black',\n    background: 'red',\n    style: 'bold; font-family:\"Times New Roman\";',\n  }, // New logType for apply damage phase with Times New Roman font\n  end: {\n    color: 'white',\n    background: 'black',\n    style: 'italic; font-family:\"Comic Sans MS\";',\n  }, // New logType for end phase with Comic Sans MS font,\n  level: {\n    // New logType for level-related logs\n    color: 'black',\n    background: 'yellow',\n    style: 'bold; font-family:cursive;',\n  },\n}\n\nfunction format(message, type) {\n  // check if the type is valid\n  if (logTypes[type]) {\n    // get the color, background and style of the type\n    let { color, background, style } = logTypes[type]\n    // return a formatted string that uses the CSS properties\n    return `%c${message}` // use %c to indicate CSS styling\n  } else {\n    // return the message as it is if the type is invalid\n    return message\n  }\n}\n\nexport function cusLog(message, type, group, ...objects) {\n  // Get the stack trace\n  let stack = new Error().stack\n  // Parse the stack trace to get the file name and line number\n  let source = stack.split('\\n')[2].trim()\n\n  // call the format function to get the formatted string\n  let formatted = format(message, type)\n\n  // Add the source information to the formatted message\n  formatted = `${formatted} (${source})`\n\n  // check if the type is valid\n  if (logTypes[type]) {\n    // get the color, background and style of the type\n    let { color, background, style } = logTypes[type]\n    // create a CSS string that uses the color, background and style\n    let css = `color: ${color}; background: ${background}; font-weight: ${style};`\n    // get the emoji of the type\n    let emoji = emojis[type]\n    // prepend the emoji to the formatted string\n    formatted = emoji + ' ' + formatted\n    // check if the group option is valid\n    if (group === 'start') {\n      // start a new group with the formatted string and the CSS string\n      console.group(formatted, css)\n    } else if (group === 'end') {\n      // end the current group with the formatted string and the CSS string\n      console.groupEnd(formatted, css)\n    } else if (group === 'collapsed') {\n      // start a new collapsed group with the formatted string and the CSS string\n      console.groupCollapsed(formatted, css)\n    } else {\n      // log the message normally with the formatted string and the CSS string\n      console.log(formatted, css, ...objects)\n    }\n  } else {\n    // log the message normally with the formatted string only\n    console.log(formatted, ...objects)\n  }\n}\n\n// // EXAMPLES:\n// // Example 1: Logging a simple message\n// // This is useful for logging general information or status updates.\n// cusLog('App started', 'info')\n// // Output: 📢 App started\n// // This will log a cyan colored message saying \"App started\" with an info emoji at the start.\n\n// // Example 2: Logging an error message\n// // This is useful for logging errors or exceptions that occur in your code.\n// cusLog('Failed to load data', 'error')\n// // Output: ❌ Failed to load data\n// // This will log a red colored error message saying \"Failed to load data\" with an error emoji at the start.\n\n// // Example 3: Logging a group of related messages\n// // This is useful for grouping related logs together, making it easier to read and understand the logs.\n// cusLog('Loading data', 'info', 'start')\n// cusLog('Data loaded successfully', 'success')\n// cusLog('Rendering data', 'info')\n// cusLog('Data rendered successfully', 'success')\n// cusLog('End of data loading and rendering', 'info', 'end')\n// // Output:\n// // 📢 Loading data\n// //     ✅ Data loaded successfully\n// //     📢 Rendering data\n// //     ✅ Data rendered successfully\n// // 📢 End of data loading and rendering\n// // This will log a group of messages related to data loading and rendering, each with their own color and emoji.\n\n// // Example 4: Logging an object\n// // This is useful for logging objects or data structures.\n// let data = { name: 'John', age: 30, city: 'New York' }\n// cusLog('User Data:', 'primary', null, data)\n// // Output:\n// // 🌟 User Data:\n// // { name: \"John\", age: 30, city: \"New York\" }\n// // This will log a blue colored message saying \"User Data:\" with a primary emoji at the start, followed by the contents of the `data` object.\n\n// // Example 1: Logging a creature's attack\n// // This is useful for logging when a creature attacks another creature.\n// let attacker = { name: 'Dragon', attack: 50 }\n// let defender = { name: 'Knight', defense: 40 }\n// cusLog(\n//   `${attacker.name} attacks ${defender.name} with ${attacker.attack} power`,\n//   'creature',\n// )\n// // Output: 🐉 Dragon attacks Knight with 50 power\n// // This will log a green colored message saying \"Dragon attacks Knight with 50 power\" with a creature emoji at the start.\n\n// // Example 2: Logging a creature's defense\n// // This is useful for logging when a creature defends against an attack.\n// cusLog(`${defender.name} defends with ${defender.defense} defense`, 'creature')\n// // Output: 🐉 Knight defends with 40 defense\n// // This will log a green colored message saying \"Knight defends with 40 defense\" with a creature emoji at the start.\n\n// // Example 3: Logging a creature's move\n// // This is useful for logging when a creature uses a move.\n// let move = { name: 'Flame Thrower', power: 90 }\n// cusLog(`${attacker.name} uses ${move.name} with ${move.power} power`, 'move')\n// // Output: 💨 Dragon uses Flame Thrower with 90 power\n// // This will log a purple colored message saying \"Dragon uses Flame Thrower with 90 power\" with a move emoji at the start.\n\n// // Example 4: Logging a group of related messages\n// // This is useful for grouping related logs together, making it easier to read and understand the logs.\n// cusLog('Battle Start', 'info', 'start')\n// cusLog(\n//   `${attacker.name} attacks ${defender.name} with ${attacker.attack} power`,\n//   'creature',\n// )\n// cusLog(`${defender.name} defends with ${defender.defense} defense`, 'creature')\n// cusLog(`${attacker.name} uses ${move.name} with ${move.power} power`, 'move')\n// cusLog('Battle End', 'info', 'end')\n// // Output:\n// // 📢 Battle Start\n// //     🐉 Dragon attacks Knight with 50 power\n// //     🐉 Knight defends with 40 defense\n// //     💨 Dragon uses Flame Thrower with 90 power\n// // 📢 Battle End\n// // This will log a group of messages related to a battle, each with their own color and emoji.\n// // Page Start\n// cusLog('Page Start', 'primary')\n\n// // Game Start\n// cusLog('Attack Start', 'primary', 'start')\n\n// // Pay Cost Phase\n// cusLog('Pay Cost Phase Start', 'pay')\n// let cost = { energy: 10 }\n// cusLog('Logging a cost...', 'pay', null, cost)\n// cusLog('Pay Cost Phase End', 'pay')\n\n// // Calculate Damage Phase\n// cusLog('Calculate Damage Phase Start', 'calcDamage')\n// let damage = { total: 50 }\n// cusLog('Logging damage...', 'calcDamage', null, damage)\n// cusLog('Calculate Damage Phase End', 'calcDamage')\n\n// // Resolve Effect Phase\n// cusLog('Resolve Effect Phase Start', 'effect')\n// let effect = { type: 'Burn', duration: 3 }\n// cusLog('Logging an effect...', 'effect', null, effect)\n// cusLog('Resolve Effect Phase End', 'effect')\n\n// // Apply Statuses Phase\n// cusLog('Apply Statuses Phase Start', 'apply')\n// let status = { type: 'Burn', remaining: 3 }\n// cusLog('Logging a status...', 'apply', null, status)\n// cusLog('Apply Statuses Phase End', 'apply')\n\n// // Apply Damage Phase\n// cusLog('Apply Damage Phase Start', 'damage')\n// let health = { current: 50, max: 100 }\n// cusLog('Logging health...', 'damage', null, health)\n// cusLog('Apply Damage Phase End', 'damage')\n\n// // End Phase\n// cusLog('End Phase Start', 'end')\n// let result = { winner: 'Dragon' }\n// cusLog('Logging result...', 'end', null, result)\n// cusLog('End Phase End', 'end')\n\n// // // Game End\n// cusLog('Game End', 'primary', 'end')\n","import PropTypes from 'prop-types'\nimport {\n  ComfortingHug,\n  CuteCharm,\n  EmotionDrain,\n  FeatherGlide,\n  GlowingCharm,\n  LightBeam,\n  LuminousFlight,\n  QuickStrike,\n  SolarSpiritBlast,\n  Teleport,\n  WarmEmbrace,\n  WiseGaze,\n} from '../allMoves'\n\n// Energy/Mana (MP): Resource used for monster abilities.\n// Level: The monster's level.\n// Attack Power: Base damage dealt by the monster's attacks.\n// Defense: Reduces incoming damage for the monster.\n// Speed: Determines turn order for monsters.\n// Affinity/Type: Elemental or creature type.\n// Experience Points (XP): To track monster progression and leveling.\n\nexport const monsterPropTypes = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  elemental_type: PropTypes.string.isRequired,\n  creature_type: PropTypes.string.isRequired,\n  specialty_group: PropTypes.string.isRequired,\n  nature: PropTypes.string.isRequired,\n  quirks: PropTypes.arrayOf(PropTypes.string).isRequired,\n  stats: PropTypes.shape({\n    hp: PropTypes.number.isRequired,\n    max_hp: PropTypes.number.isRequired,\n    attack: PropTypes.number.isRequired,\n    defense: PropTypes.number.isRequired,\n    special_attack: PropTypes.number.isRequired,\n    special_defense: PropTypes.number.isRequired,\n    speed: PropTypes.number.isRequired,\n  }).isRequired,\n  strengths: PropTypes.arrayOf(PropTypes.string).isRequired,\n  weaknesses: PropTypes.arrayOf(PropTypes.string).isRequired,\n  cost: PropTypes.number.isRequired,\n  lvl: PropTypes.number.isRequired,\n  experience: PropTypes.number.isRequired,\n  moves: PropTypes.arrayOf(PropTypes.string).isRequired,\n  possible_moves: PropTypes.arrayOf(PropTypes.string).isRequired,\n  passive_ability: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  size: PropTypes.string.isRequired,\n  weight: PropTypes.string.isRequired,\n  lore: PropTypes.string.isRequired,\n})\nexport const Luminowl = {\n  id: 1,\n  name: 'Luminowl',\n  elemental_type: 'Light',\n  creature_type: 'Owl',\n  specialty_group: 'Mystic',\n  nature: 'Wise',\n  quirks: ['Guiding Light', 'Soothing Feathers'],\n  stats: {\n    hp: 100,\n    max_hp: 190,\n    attack: 80,\n    defense: 60,\n    special_attack: 120,\n    special_defense: 90,\n    speed: 110,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Dark'],\n  weaknesses: ['Fire'],\n  cost: 500,\n  lvl: 50,\n  experience: 5000,\n  status: {},\n  // moves: ['Light Beam', 'Wise Gaze', 'Feather Glide'],\n  moves: [LightBeam, WiseGaze, FeatherGlide],\n  possible_moves: ['Luminous Aura', 'Mystic Sight', 'Soothing Melody'],\n  passive_ability: 'Guiding Wisdom',\n  commander_ability: {\n    name: 'Luminous Nova',\n    description:\n      \"Creates a blinding explosion of light, damaging all enemies and boosting the team's accuracy and evasion.\",\n  },\n  image: 'pals/Luminowl_pxl.png',\n  description:\n    'A wise owl with feathers that emit a soothing light, guiding lost travelers.',\n  size: 'Medium',\n  weight: 'Light',\n  lore: \"Legends speak of Luminowl's ability to bring light and wisdom to those in need.\",\n}\n\nexport const Shadowstalker = {\n  id: 2,\n  name: 'Shadowstalker',\n  elemental_type: 'Dark',\n  creature_type: 'Panther',\n  specialty_group: 'Stealth',\n  nature: 'Stealthy',\n  quirks: ['Ambush Predator', 'Shadow Cloak'],\n  stats: {\n    hp: 100,\n    max_hp: 190,\n    attack: 110,\n    defense: 70,\n    special_attack: 80,\n    special_defense: 60,\n    speed: 120,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Nature'],\n  weaknesses: ['Light'],\n  cost: 500,\n  lvl: 50,\n  experience: 5000,\n  status: {},\n\n  moves: ['Shadow Pounce', 'Stealth Strike', 'Dark Cloak'],\n  possible_moves: ['Shadowmeld', 'Nightmare Slash', 'Ambush'],\n  passive_ability: 'Cloaked in Shadows',\n  commander_ability: {\n    name: 'Shadow Assault',\n    description:\n      \"Launches a surprise attack from the shadows, dealing massive damage and inflicting the 'Shadowed' status on the target, reducing their accuracy and evasion.\",\n  },\n  image: 'creatures/Chibipal.png',\n  description:\n    'A stealthy panther-like creature that lurks in the dark, ambushing foes with precision.',\n  size: 'Medium',\n  weight: 'Light',\n  lore: \"Legends speak of Shadowstalker's ability to strike from the shadows with unmatched precision.\",\n}\n\nexport const Infernodragon = {\n  id: 3,\n  name: 'Infernodragon',\n  elemental_type: 'Fire',\n  creature_type: 'Dragon',\n  specialty_group: 'Mystic',\n  nature: 'Destructive',\n  quirks: ['Flame Breather', 'Inferno Creator'],\n  stats: {\n    hp: 120,\n    max_hp: 190,\n    attack: 140,\n    defense: 90,\n    special_attack: 160,\n    special_defense: 110,\n    speed: 100,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Grass', 'Bug'],\n  weaknesses: ['Water', 'Ice'],\n  cost: 600,\n  lvl: 55,\n  experience: 5500,\n  status: {},\n\n  moves: ['Inferno Roar', 'Dragon Blaze', 'Firestorm'],\n  possible_moves: ['Magma Eruption', 'Dragon Rage', 'Heat Wave'],\n  passive_ability: 'Scorching Scales',\n  commander_ability: {\n    name: 'Inferno Apocalypse',\n    description:\n      \"Unleashes an apocalyptic firestorm, dealing massive area damage over time to all enemies and leaving them with the 'Burned' status effect.\",\n  },\n  image: 'creatures/Chibipal.png',\n  description:\n    'A fearsome dragon that embodies the destructive power of fire, capable of causing infernos.',\n  size: 'Large',\n  weight: 'Heavy',\n  lore: \"Legends speak of Infernodragon's ability to bring devastation with its fiery breath.\",\n}\n\nexport const Aquaphoenix = {\n  id: 4,\n  name: 'Aquaphoenix',\n  elemental_type: 'Water',\n  creature_type: 'Phoenix',\n  specialty_group: 'Mystic',\n  nature: 'Majestic',\n  quirks: ['Water Manipulator', 'Rainmaker'],\n  stats: {\n    hp: 110,\n    max_hp: 190,\n    attack: 80,\n    defense: 70,\n    special_attack: 130,\n    special_defense: 100,\n    speed: 120,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Fire'],\n  weaknesses: ['Electric', 'Ice'],\n  cost: 550,\n  lvl: 52,\n  experience: 5200,\n  status: {},\n\n  moves: ['Aqua Torrent', 'Phoenix Glide', 'Rain Dance'],\n  possible_moves: ['Tidal Wave', 'Hydroburst', 'Aqua Healing'],\n  passive_ability: 'Aqua Resurrection',\n  commander_ability: {\n    name: 'Deluge of Renewal',\n    description:\n      'Summons a massive tidal wave, healing the team to full health and removing all negative status effects while damaging enemies.',\n  },\n  image: 'creatures/Chibipal.png',\n  description:\n    'A majestic bird with the ability to control water, summoning rainstorms and quenching fires.',\n  size: 'Large',\n  weight: 'Light',\n  lore: \"Legends speak of Aquaphoenix's ability to bring life-giving rains to drought-stricken lands.\",\n}\n\nexport const Verdantshifter = {\n  id: 5,\n  name: 'Verdantshifter',\n  elemental_type: 'Nature',\n  creature_type: 'Shapeshifter',\n  specialty_group: 'Mystic',\n  nature: 'Adaptive',\n  quirks: ['Morphing Mastery', 'Environmental Guardian'],\n  stats: {\n    hp: 90,\n    max_hp: 90,\n    attack: 70,\n    defense: 80,\n    special_attack: 100,\n    special_defense: 120,\n    speed: 110,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Water', 'Ground'],\n  weaknesses: ['Fire', 'Ice'],\n  cost: 450,\n  lvl: 48,\n  experience: 4800,\n  status: {},\n\n  moves: [\"Nature's Transformation\", 'Shapeshift', 'Eco Restoration'],\n  possible_moves: ['Plant Manipulation', 'Camouflage', 'Adaptive Form'],\n  passive_ability: \"Nature's Harmony\",\n  commander_ability: {\n    name: \"Nature's Blessing\",\n    description:\n      'Calls upon the spirits of nature to bless the team, increasing their stats and granting temporary immunity to status effects.',\n  },\n  image: 'pals/Luminowl_pxl.png',\n  description:\n    'A creature that can transform into various plant forms, aiding in environmental restoration.',\n  size: 'Medium',\n  weight: 'Medium',\n  lore: \"Legends speak of Verdantshifter's ability to restore balance to nature with its morphing skills.\",\n}\n\nexport const Technotitan = {\n  id: 6,\n  name: 'Technotitan',\n  elemental_type: 'Tech',\n  creature_type: 'Giant',\n  specialty_group: 'Mechanical',\n  nature: 'Protective',\n  quirks: ['Mechanical Guardian', 'Advanced Arsenal'],\n  stats: {\n    hp: 150,\n    max_hp: 190,\n    attack: 130,\n    defense: 140,\n    special_attack: 80,\n    special_defense: 100,\n    speed: 60,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Electric', 'Steel'],\n  weaknesses: ['Water', 'Nature'],\n  cost: 750,\n  lvl: 60,\n  experience: 6000,\n  status: {},\n\n  moves: ['Mechanical Slam', 'Energy Beam', 'Defense Protocol'],\n  possible_moves: ['Rocket Punch', 'Repair Mode', 'Techno Shield'],\n  passive_ability: 'Guardian Armor',\n  commander_ability: {\n    name: 'Techno Overload',\n    description:\n      'Overloads its advanced systems, releasing a powerful shockwave that damages all enemies and paralyzes them.',\n  },\n  image: 'creatures/Chibipal.png',\n  description:\n    'A colossal, mechanical giant armed with advanced weaponry, created to protect civilization.',\n  size: 'Giant',\n  weight: 'Heavy',\n  lore: \"Legends speak of Technotitan's ability to defend cities and civilizations from threats with its advanced technology.\",\n}\n\nexport const Glowbuggle = {\n  id: 7,\n  name: 'Glowbuggle',\n  elemental_type: 'Light',\n  creature_type: 'Firefly',\n  specialty_group: 'Bioluminescent',\n  nature: 'Illuminating',\n  quirks: ['Warm Light Emission', 'Comforting Glow'],\n  stats: {\n    hp: 80,\n    max_hp: 90,\n    attack: 50,\n    defense: 40,\n    special_attack: 100,\n    special_defense: 70,\n    speed: 120,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Dark'],\n  weaknesses: ['Electric', 'Ice'],\n  cost: 400,\n  lvl: 40,\n  experience: 4000,\n  status: {},\n\n  // moves: ['Luminous Flight', 'Glowing Charm', 'Warm Embrace'],\n  moves: [LuminousFlight, GlowingCharm, WarmEmbrace],\n  possible_moves: [\n    'Bioluminescent Burst',\n    'Soothing Radiance',\n    'Glowing Trail',\n  ],\n  passive_ability: 'Radiant Aura',\n  commander_ability: {\n    name: 'Radiant Infusion',\n    description:\n      'Radiates an intense aura of warmth and comfort, healing the team and increasing their resistance to status effects.',\n  },\n  image: 'creatures/Chibipal.png',\n  description:\n    'Small, firefly-like creatures with bioluminescent wings that emit a warm, comforting light.',\n  size: 'Tiny',\n  weight: 'Light',\n  lore: \"Legends speak of Glowbuggle's ability to bring comfort and light to those in the darkest of nights.\",\n}\n\nexport const Umbrabunny = {\n  id: 8,\n  name: 'Umbrabunny',\n  elemental_type: 'Dark',\n  creature_type: 'Bunny',\n  specialty_group: 'Emotion Absorber',\n  nature: 'Adorable',\n  quirks: ['Emotion Sponge', 'Reassuring Presence'],\n  stats: {\n    hp: 90,\n    max_hp: 90,\n    attack: 60,\n    defense: 70,\n    special_attack: 80,\n    special_defense: 110,\n    speed: 120,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Light'],\n  weaknesses: ['Fighting', 'Psychic'],\n  cost: 450,\n  lvl: 48,\n  experience: 4800,\n  status: {},\n\n  // moves: ['Emotion Drain', 'Cute Charm', 'Comforting Hug'],\n  moves: [EmotionDrain, CuteCharm, ComfortingHug],\n  possible_moves: ['Dark Aura', 'Empathy Wave', 'Peaceful Presence'],\n  passive_ability: 'Emotion Balance',\n  commander_ability: {\n    name: 'Harmony Embrace',\n    description:\n      'Radiates an aura of emotional harmony, calming all foes and allies. Reduces the power of enemy attacks and status effects.',\n  },\n  image: 'pals/Umbrabunny_pxl.png',\n  description:\n    'Adorable, bunny-like creatures with the ability to absorb and dispel negative emotions.',\n  size: 'Small',\n  weight: 'Light',\n  lore: \"Legends speak of Umbrabunny's ability to bring comfort and emotional balance to troubled hearts.\",\n}\n\nexport const Recycleroo = {\n  id: 9,\n  name: 'Recycleroo',\n  elemental_type: 'Nature',\n  creature_type: 'Kangaroo',\n  specialty_group: 'Eco-Protector',\n  nature: 'Environmentally Conscious',\n  quirks: ['Recycling Expert', 'Projectile Thrower'],\n  stats: {\n    hp: 110,\n    max_hp: 190,\n    attack: 100,\n    defense: 80,\n    special_attack: 60,\n    special_defense: 80,\n    speed: 90,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Electric', 'Ground'],\n  weaknesses: ['Fire', 'Ice'],\n  cost: 550,\n  lvl: 55,\n  experience: 5500,\n  status: {},\n\n  moves: ['Recycle Rush', 'Projectile Toss', 'Leaf Shield'],\n  possible_moves: ['Trash Bash', \"Nature's Wrath\", 'Sorting Cyclone'],\n  passive_ability: 'Eco-Warrior',\n  commander_ability: {\n    name: 'Eco Barrage',\n    description:\n      'Launches a barrage of eco-friendly projectiles, dealing damage to all enemies and reducing their attack power.',\n  },\n  image: 'recycleroo_image.png',\n  description:\n    'A kangaroo that collects and sorts recyclables but throws them as projectiles.',\n  size: 'Medium',\n  weight: 'Moderate',\n  lore: 'Recycleroo is known for its dedication to environmental protection, using recycled materials to defend nature.',\n}\n\n//this doesn't have and above and for shoe\nexport const Shoe = {\n  name: 'Shoe',\n  lore: \"A lost shoe that somehow became a commander. It doesn't have any special abilities or moves.\",\n  image: '/shoe_image.png',\n  elemental_type: 'None',\n  creature_type: 'Lost Item',\n  specialty_group: 'Ordinary',\n  nature: 'Inanimate',\n  quirks: ['Lost and Found'],\n  status: {},\n\n  stats: {\n    hp: 10,\n    max_hp: 10,\n    attack: 1,\n    defense: 1,\n    special_attack: 1,\n    special_defense: 1,\n    speed: 1,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: [],\n  weaknesses: [],\n  cost: 1,\n  lvl: 1,\n  experience: 0,\n  moves: ['Tread Lightly'],\n  possible_moves: [],\n  passive_ability: 'Forgotten',\n}\n\nexport const Wolfjobb = {\n  name: 'Wolfjobb',\n  lore: \"A wolf with an amazing work ethic. It leads by example but doesn't have any special commander abilities or moves.\",\n  image: '/wolfjobb_image.png',\n  elemental_type: 'Nature',\n  creature_type: 'Wolf',\n  specialty_group: 'Industrious',\n  nature: 'Diligent',\n  quirks: ['Workaholic', 'Pack Leader'],\n  status: {},\n\n  stats: {\n    hp: 80,\n    max_hp: 80,\n    attack: 90,\n    defense: 70,\n    special_attack: 50,\n    special_defense: 60,\n    speed: 100,\n  },\n  enterAbility:\n    'on enter, does something cool. Otherwise no ability and have it stick around',\n  strengths: ['Water', 'Ground'],\n  weaknesses: ['Fire', 'Ice'],\n  cost: 400,\n  lvl: 40,\n  experience: 4000,\n  moves: ['Workaholic Bite', 'Diligent Howl', 'Teamwork'],\n  possible_moves: ['Overtime Strike', 'Efficiency Boost', 'Persistence'],\n  passive_ability: 'Leadership',\n}\n\nexport const Ticklefairy = {\n  name: 'Ticklefairy',\n  lore: 'Ticklefairy is a mischievous fairy that spreads laughter and joy wherever it goes.',\n  image: 'pals/Ticklefairy_pxl.png',\n  elemental_type: 'Light',\n  creature_type: 'Fairy',\n  specialty_group: 'Joybringer',\n  nature: 'Playful',\n  quirks: ['Tickle Magician', 'Laughter Enchanter'],\n  stats: {\n    hp: 80,\n    max_hp: 80,\n    attack: 40,\n    defense: 50,\n    special_attack: 120,\n    special_defense: 100,\n    speed: 150,\n  },\n  enterAbility:\n    'Ticklefairy enters with a burst of laughter, raising the spirits of its allies.',\n  strengths: ['Dark'],\n  weaknesses: ['Electric', 'Poison'],\n  cost: 400,\n  lvl: 40,\n  experience: 4000,\n  status: {},\n  moves: [QuickStrike, SolarSpiritBlast, Teleport],\n  // moves: [\"Tickle Whirlwind\", \"Giggle Spark\", \"Joyful Charm\"],\n  possible_moves: ['Laughter Explosion', 'Tickle Dance', 'Happy Hug'],\n  passive_ability: 'Joyful Aura',\n}\n\n//types: Foodbased, Water, Earth, Fire, Air, \n// Light, Dark, None, Physical, Magical, Nature\n// \n\nexport const testPals = [\n  Luminowl,\n  Glowbuggle,\n  Umbrabunny,\n  Infernodragon,\n  Aquaphoenix,\n  Verdantshifter,\n  Technotitan,\n]\n\n// export const Luminowl = {\n//   id: 1,\n//   name: \"Luminowl\",\n//   elemental_type: \"Light\",\n//   creature_type: \"Owl\",\n//   specialty_group: \"Mystic\",\n//   nature: \"Wise\",\n//   quirks: [\"Guiding Light\", \"Soothing Feathers\"],\n//   stats: {\n//     hp: 100,\n//     max_hp: 190,\n\n//     attack: 80,\n//     defense: 60,\n//     special_attack: 120,\n//     special_defense: 90,\n//     speed: 110,\n//   },\n//   strengths: [\"Dark\"],\n//   weaknesses: [\"Fire\"],\n//   cost: 500,\n//   lvl: 50,\n//   experience: 5000,\n//   moves: [\"Light Beam\", \"Wise Gaze\", \"Feather Glide\"],\n//   possible_moves: [\"Luminous Aura\", \"Mystic Sight\", \"Soothing Melody\"],\n//   passive_ability: \"Guiding Wisdom\",\n//   image: \"/pals/Luminowl_pxl.png\",\n//   description:\n//     \"A wise owl with feathers that emit a soothing light, guiding lost travelers.\",\n//   size: \"Medium\",\n//   weight: \"Light\",\n//   lore: \"Legends speak of Luminowl's ability to bring light and wisdom to those in need.\",\n// };\n\n// export const Shadowstalker = {\n//   id: 2,\n\n//   name: \"Shadowstalker\",\n//   elemental_type: \"Dark\",\n//   creature_type: \"Panther\",\n//   specialty_group: \"Stealth\",\n//   nature: \"Stealthy\",\n//   quirks: [\"Ambush Predator\", \"Shadow Cloak\"],\n//   stats: {\n//     hp: 100,\n//     max_hp: 190,\n\n//     attack: 110,\n//     defense: 70,\n//     special_attack: 80,\n//     special_defense: 60,\n//     speed: 120,\n//   },\n//   strengths: [\"Nature\"],\n//   weaknesses: [\"Light\"],\n//   cost: 500,\n//   lvl: 50,\n//   experience: 5000,\n//   moves: [\"Shadow Pounce\", \"Stealth Strike\", \"Dark Cloak\"],\n//   possible_moves: [\"Shadowmeld\", \"Nightmare Slash\", \"Ambush\"],\n//   passive_ability: \"Cloaked in Shadows\",\n//   image: \"/creatures/Chibipal.png\",\n//   description:\n//     \"A stealthy panther-like creature that lurks in the dark, ambushing foes with precision.\",\n//   size: \"Medium\",\n//   weight: \"Light\",\n//   lore: \"Legends speak of Shadowstalker's ability to strike from the shadows with unmatched precision.\",\n// };\n\n// export const Infernodragon = {\n//   id: 3,\n\n//   name: \"Infernodragon\",\n//   elemental_type: \"Fire\",\n//   creature_type: \"Dragon\",\n//   specialty_group: \"Mystic\",\n//   nature: \"Destructive\",\n//   quirks: [\"Flame Breather\", \"Inferno Creator\"],\n//   stats: {\n//     hp: 120,\n//     max_hp: 190,\n\n//     attack: 140,\n//     defense: 90,\n//     special_attack: 160,\n//     special_defense: 110,\n//     speed: 100,\n//   },\n//   strengths: [\"Grass\", \"Bug\"],\n//   weaknesses: [\"Water\", \"Ice\"],\n//   cost: 600,\n//   lvl: 55,\n//   experience: 5500,\n//   moves: [\"Inferno Roar\", \"Dragon Blaze\", \"Firestorm\"],\n//   possible_moves: [\"Magma Eruption\", \"Dragon Rage\", \"Heat Wave\"],\n//   passive_ability: \"Scorching Scales\",\n//   image: \"/creatures/Chibipal.png\",\n//   description:\n//     \"A fearsome dragon that embodies the destructive power of fire, capable of causing infernos.\",\n//   size: \"Large\",\n//   weight: \"Heavy\",\n//   lore: \"Legends speak of Infernodragon's ability to bring devastation with its fiery breath.\",\n// };\n\n// export const Aquaphoenix = {\n//   id: 4,\n\n//   name: \"Aquaphoenix\",\n//   elemental_type: \"Water\",\n//   creature_type: \"Phoenix\",\n//   specialty_group: \"Mystic\",\n//   nature: \"Majestic\",\n//   quirks: [\"Water Manipulator\", \"Rainmaker\"],\n//   stats: {\n//     hp: 110,\n//     max_hp: 190,\n\n//     attack: 80,\n//     defense: 70,\n//     special_attack: 130,\n//     special_defense: 100,\n//     speed: 120,\n//   },\n//   strengths: [\"Fire\"],\n//   weaknesses: [\"Electric\", \"Ice\"],\n//   cost: 550,\n//   lvl: 52,\n//   experience: 5200,\n//   moves: [\"Aqua Torrent\", \"Phoenix Glide\", \"Rain Dance\"],\n//   possible_moves: [\"Tidal Wave\", \"Hydroburst\", \"Aqua Healing\"],\n//   passive_ability: \"Aqua Resurrection\",\n//   image: \"/creatures/Chibipal.png\",\n//   description:\n//     \"A majestic bird with the ability to control water, summoning rainstorms and quenching fires.\",\n//   size: \"Large\",\n//   weight: \"Light\",\n//   lore: \"Legends speak of Aquaphoenix's ability to bring life-giving rains to drought-stricken lands.\",\n// };\n\n// export const Verdantshifter = {\n//   id: 5,\n\n//   name: \"Verdantshifter\",\n//   elemental_type: \"Nature\",\n//   creature_type: \"Shapeshifter\",\n//   specialty_group: \"Mystic\",\n//   nature: \"Adaptive\",\n//   quirks: [\"Morphing Mastery\", \"Environmental Guardian\"],\n//   stats: {\n//     hp: 90,\n//     max_hp: 90,\n\n//     attack: 70,\n//     defense: 80,\n//     special_attack: 100,\n//     special_defense: 120,\n//     speed: 110,\n//   },\n//   strengths: [\"Water\", \"Ground\"],\n//   weaknesses: [\"Fire\", \"Ice\"],\n//   cost: 450,\n//   lvl: 48,\n//   experience: 4800,\n//   moves: [\"Nature's Transformation\", \"Shapeshift\", \"Eco Restoration\"],\n//   possible_moves: [\"Plant Manipulation\", \"Camouflage\", \"Adaptive Form\"],\n//   passive_ability: \"Nature's Harmony\",\n//   image: \"/pals/Luminowl_pxl.png\",\n//   description:\n//     \"A creature that can transform into various plant forms, aiding in environmental restoration.\",\n//   size: \"Medium\",\n//   weight: \"Medium\",\n//   lore: \"Legends speak of Verdantshifter's ability to restore balance to nature with its morphing skills.\",\n// };\n\n// export const Technotitan = {\n//   id: 6,\n\n//   name: \"Technotitan\",\n//   elemental_type: \"Tech\",\n//   creature_type: \"Giant\",\n//   specialty_group: \"Mechanical\",\n//   nature: \"Protective\",\n//   quirks: [\"Mechanical Guardian\", \"Advanced Arsenal\"],\n//   stats: {\n//     hp: 150,\n//     max_hp: 190,\n\n//     attack: 130,\n//     defense: 140,\n//     special_attack: 80,\n//     special_defense: 100,\n//     speed: 60,\n//   },\n//   strengths: [\"Electric\", \"Steel\"],\n//   weaknesses: [\"Water\", \"Nature\"],\n//   cost: 750,\n//   lvl: 60,\n//   experience: 6000,\n//   moves: [\"Mechanical Slam\", \"Energy Beam\", \"Defense Protocol\"],\n//   possible_moves: [\"Rocket Punch\", \"Repair Mode\", \"Techno Shield\"],\n//   passive_ability: \"Guardian Armor\",\n//   image: \"/creatures/Chibipal.png\",\n//   description:\n//     \"A colossal, mechanical giant armed with advanced weaponry, created to protect civilization.\",\n//   size: \"Giant\",\n//   weight: \"Heavy\",\n//   lore: \"Legends speak of Technotitan's ability to defend cities and civilizations from threats with its advanced technology.\",\n// };\n\n// export const Glowbuggle = {\n//   id: 7,\n//   name: \"Glowbuggle\",\n//   elemental_type: \"Light\",\n//   creature_type: \"Firefly\",\n//   specialty_group: \"Bioluminescent\",\n//   nature: \"Illuminating\",\n//   quirks: [\"Warm Light Emission\", \"Comforting Glow\"],\n//   stats: {\n//     hp: 80,\n//     max_hp: 90,\n//     attack: 50,\n//     defense: 40,\n//     special_attack: 100,\n//     special_defense: 70,\n//     speed: 120,\n//   },\n//   strengths: [\"Dark\"],\n//   weaknesses: [\"Electric\", \"Ice\"],\n//   cost: 400,\n//   lvl: 40,\n//   experience: 4000,\n//   moves: [\"Luminous Flight\", \"Glowing Charm\", \"Warm Embrace\"],\n//   possible_moves: [\n//     \"Bioluminescent Burst\",\n//     \"Soothing Radiance\",\n//     \"Glowing Trail\",\n//   ],\n//   passive_ability: \"Radiant Aura\",\n//   image: \"/creatures/Chibipal.png\",\n//   description:\n//     \"Small, firefly-like creatures with bioluminescent wings that emit a warm, comforting light.\",\n//   size: \"Tiny\",\n//   weight: \"Light\",\n//   lore: \"Legends speak of Glowbuggle's ability to bring comfort and light to those in the darkest of nights.\",\n// };\n\n// export const Umbrabunny = {\n//   id: 8,\n//   name: \"Umbrabunny\",\n//   elemental_type: \"Dark\",\n//   creature_type: \"Bunny\",\n//   specialty_group: \"Emotion Absorber\",\n//   nature: \"Adorable\",\n//   quirks: [\"Emotion Sponge\", \"Reassuring Presence\"],\n//   stats: {\n//     hp: 90,\n//     max_hp: 90,\n//     attack: 60,\n//     defense: 70,\n//     special_attack: 80,\n//     special_defense: 110,\n//     speed: 120,\n//   },\n//   strengths: [\"Light\"],\n//   weaknesses: [\"Fighting\", \"Psychic\"],\n//   cost: 450,\n//   lvl: 48,\n//   experience: 4800,\n//   moves: [\"Emotion Drain\", \"Cute Charm\", \"Comforting Hug\"],\n//   possible_moves: [\"Dark Aura\", \"Empathy Wave\", \"Peaceful Presence\"],\n//   passive_ability: \"Emotion Balance\",\n//   image: \"/pals/Umbrabunny_pxl.png\",\n//   description:\n//     \"Adorable, bunny-like creatures with the ability to absorb and dispel negative emotions.\",\n//   size: \"Small\",\n//   weight: \"Light\",\n//   lore: \"Legends speak of Umbrabunny's ability to bring comfort and emotional balance to troubled hearts.\",\n// };\n\n// export const Recycleroo = {\n//   id: 9,\n//   \"name\": \"Recycleroo\",\n//   \"elemental_type\": \"Nature\",\n//   \"creature_type\": \"Kangaroo\",\n//   \"specialty_group\": \"Eco-Protector\",\n//   \"nature\": \"Environmentally Conscious\",\n//   \"quirks\": [\"Recycling Expert\", \"Projectile Thrower\"],\n//   \"stats\": {\n//     \"hp\": 110,\n//     \"attack\": 100,\n//     \"defense\": 80,\n//     \"special_attack\": 60,\n//     \"special_defense\": 80,\n//     \"speed\": 90\n//   },\n//   \"strengths\": [\"Electric\", \"Ground\"],\n//   \"weaknesses\": [\"Fire\", \"Ice\"],\n//   \"cost\": 550,\n//   \"lvl\": 55,\n//   \"experience\": 5500,\n//   \"moves\": [\"Recycle Rush\", \"Projectile Toss\", \"Leaf Shield\"],\n//   \"possible_moves\": [\"Trash Bash\", \"Nature's Wrath\", \"Sorting Cyclone\"],\n//   \"passive_ability\": \"Eco-Warrior\",\n//   \"image\": \"recycleroo_image.png\",\n//   \"description\": \"A kangaroo that collects and sorts recyclables but throws them as projectiles.\",\n//   \"size\": \"Medium\",\n//   \"weight\": \"Moderate\",\n//   \"lore\": \"Recycleroo is known for its dedication to environmental protection, using recycled materials to defend nature.\"\n// };\n\n// export const shoe = {\n//   lore: \"Really? A shoe?\",\n// };\n\n// export const wolfjobb = {\n//   lore: \"A wolf with a amazing work ethic\",\n// };\n\n// export const testPals = [\n//   Luminowl,\n//   Glowbuggle,\n//   Umbrabunny,\n//   Infernodragon,\n//   Aquaphoenix,\n//   Verdantshifter,\n//   Technotitan,\n// ];\n","export const SolarSpiritBlast = {\n  name: 'Solar Spirit Blast',\n  type: 'elemental',\n  damage: 45,\n  speed: 8,\n  energyCost: 7,\n  effect: {\n    description: 'Requires charging, high damage',\n    chance: '100%',\n    result: 'damage',\n  },\n  priority: 'slow',\n}\n\n// export const QuickStrike = {\n//   name: 'Quick Strike',\n//   type: 'physical',\n//   damage: 25,\n//   speed: 7,\n//   energyCost: 3,\n//   effect: {\n//     description: 'High critical hit chance',\n//     chance: '50%',\n//     result: 'critical_hit',\n//   },\n//   priority: 'fast',\n// }\nexport const QuickStrike = {\n  name: 'Quick Strike',\n  type: 'physical',\n  damage: 25,\n  speed: 7,\n  cost: { energy: 3 },\n  // energyCost: 3,\n  effect: {\n    description: 'High critical hit chance',\n    chance: '50%',\n    result: 'critical_hit',\n  },\n  priority: 'fast',\n  targets: ['opponent', 'opponent_pals'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Nimble Dodge',\n    type: 'buff',\n    effect: {\n      description: 'Increase evasion for the next turn',\n      duration: '1 turn',\n      evasion_boost: 30, // Increase evasion for the user\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Rapid Fury',\n    type: 'physical',\n    damage: 40, // Enhanced damage for the Forceful aspect\n    speed: 9, // Slightly slower due to the added power\n    cost: { energy: 4 },\n\n    energyCost: 4, // Increased energyCost cost for the Forceful aspect\n    effect: {\n      description: 'Guaranteed critical hit and additional damage',\n      chance: '100%',\n      result: 'critical_hit',\n    },\n    targets: ['opponent', 'opponent_pals'],\n  },\n}\n\nexport const WebTrap = {\n  name: 'Web Trap',\n  type: 'status',\n  speed: 4,\n  cost: { energy: 2 },\n  energyCost: 2,\n  effect: {\n    description: 'Immobilizes target briefly',\n    chance: '40%',\n    result: 'immobilize',\n  },\n  priority: 'normal',\n}\n\nexport const Teleport = {\n  name: 'Teleport',\n  type: 'utility',\n  speed: 9,\n  cost: { energy: 5 },\n  energyCost: 5,\n  effect: {\n    description: 'Instantly move to another location',\n    chance: '100%',\n    result: 'teleport',\n  },\n  priority: 'fast',\n}\n\nexport const Mimicry = {\n  name: 'Mimicry',\n  type: 'utility',\n  speed: 5,\n  cost: { energy: 3 },\n  energyCost: 3,\n  effect: {\n    description: \"Copies the opponent's last move\",\n    chance: '100%',\n    result: 'copy_move',\n  },\n  priority: 'normal',\n}\nexport const DoubleStrike = {\n  name: 'Double Strike',\n  type: 'physical',\n  damage: 15,\n  speed: 7,\n  cost: { energy: 3 },\n  energyCost: 3,\n  effect: {\n    description: 'Goes again if the first attack is successful',\n    chance: '100%',\n    result: 'double_strike',\n  },\n  priority: 'fast',\n}\n\nexport const LifeSwap = {\n  name: 'Life Swap',\n  type: 'heal',\n  speed: 7,\n  cost: { energy: 4 },\n  energyCost: 5,\n  effect: {\n    description: 'Exchanges HP with the target',\n    chance: '100%',\n    result: 'life_swap',\n  },\n  priority: 'slow',\n}\n\nexport const Thunderstorm = {\n  name: 'Thunderstorm',\n  type: 'elemental',\n  damage: 40,\n  speed: 8,\n  cost: { energy: 6 },\n  energyCost: 6,\n  effect: {\n    description: 'Chance to paralyze multiple targets',\n    chance: '30%',\n    result: 'paralyze_multiple',\n  },\n  priority: 'slow',\n}\n\nexport const StealthyAmbush = {\n  name: 'Stealthy Ambush',\n  type: 'utility',\n  speed: 6,\n  cost: { energy: 4 },\n  energyCost: 4,\n  effect: {\n    description: 'Hides for a turn and then appears. Good for poison.',\n    chance: '100%',\n    result: 'stealthy_ambush',\n  },\n  priority: 'fast',\n}\n\nexport const MirrorImage = {\n  name: 'Mirror Image',\n  type: 'buff',\n  speed: 6,\n  cost: { energy: 3 },\n  energyCost: 3,\n  effect: {\n    description: 'Creates illusion copies',\n    chance: '100%',\n    result: 'mirror_image',\n  },\n  priority: 'normal',\n}\n\n// export const IceWall = {\n//   name: 'Ice Wall',\n//   type: 'elemental',\n//   speed: 7,\n//   energyCost: 5,\n//   effect: {\n//     description: 'Forms a protective ice wall',\n//     chance: '100%',\n//     result: 'ice_wall',\n//   },\n//   priority: 'slow',\n// }\nexport const IceWall = {\n  name: 'Ice Wall',\n  type: 'elemental',\n  damage: 0,\n  speed: 7,\n  cost: { energy: 5 },\n  energyCost: 5,\n  effect: {\n    description: 'Forms a protective ice wall',\n    chance: '100%',\n    result: 'ice_wall',\n  },\n  priority: 'slow',\n  targets: ['arena'],\n  notSoFast: {\n    name: 'Chilled Defenses',\n    type: 'buff',\n    effect: {\n      description: 'Enhance the defensive capabilities of the Ice Wall',\n      duration: '1 turn',\n      defense_boost: 30,\n    },\n  },\n  forceful: {\n    name: 'Glacial Fortress',\n    type: 'elemental',\n    damage: 0,\n    speed: 9,\n    cost: { energy: 6 },\n    energyCost: 6,\n    effect: {\n      description:\n        'Strengthen the Ice Wall and provide a protective barrier for pals',\n      chance: '100%',\n      result: 'ice_wall',\n    },\n    targets: ['arena'],\n  },\n}\n\n// luminowl attacks\nexport const LightBeam = {\n  name: 'Light Beam',\n  type: 'elemental',\n  damage: 40,\n  speed: 12,\n  cost: { energy: 5 },\n  energyCost: 5,\n  effect: {\n    description: 'Fires a beam of blinding light at the opponent',\n    chance: '30%',\n    result: 'blind',\n  },\n  priority: 'medium',\n  targets: ['opponent'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Evasive Twirl',\n    type: 'buff',\n    effect: {\n      description: 'Perform an evasive twirl to dodge incoming attacks',\n      duration: '1 turn',\n      evasion_boost: 50, // Increase evasion for 1 turn\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Solar Flare',\n    type: 'elemental',\n    damage: 60,\n    speed: 15,\n    cost: { energy: 4 },\n    energyCost: 5,\n    effect: {\n      description:\n        'Unleash a blinding solar flare to guarantee blinding the opponent',\n      chance: '100%',\n      result: 'blind',\n    },\n    targets: ['opponent'],\n  },\n}\n\nexport const WiseGaze = {\n  name: 'Wise Gaze',\n  type: 'elemental',\n  damage: 30,\n  speed: 10,\n  cost: { energy: 5 },\n  energyCost: 5,\n  effect: {\n    description: 'Pierces the opponent with a wise and penetrating gaze',\n    chance: '20%',\n    result: 'confuse',\n  },\n  priority: 'medium',\n  targets: ['opponent'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Clarity of Mind',\n    type: 'buff',\n    effect: {\n      description: 'Calm your mind to resist confusion',\n      duration: '1 turn',\n      confusion_resist: 100, // Provides immunity to confusion for 1 turn\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Enlightened Stare',\n    type: 'elemental',\n    damage: 45,\n    speed: 12,\n    cost: { energy: 4 },\n    energyCost: 5,\n    effect: {\n      description: 'Lock eyes with the opponent, ensuring confusion',\n      chance: '100%',\n      result: 'confuse',\n    },\n    targets: ['opponent'],\n  },\n}\n\nexport const FeatherGlide = {\n  name: 'Feather Glide',\n  type: 'physical',\n  damage: 35,\n  speed: 8,\n  cost: { energy: 4 },\n  energyCost: 5,\n  effect: {\n    description:\n      'Glide gracefully to deliver a swift and graceful physical attack',\n    chance: '10%',\n    result: 'stun',\n  },\n  priority: 'medium',\n  targets: ['opponent'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Aerial Agility',\n    type: 'buff',\n    effect: {\n      description: 'Enhance your aerial agility to dodge incoming attacks',\n      duration: '1 turn',\n      evasion_boost: 40, // Increase evasion for 1 turn\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Celestial Dive',\n    type: 'physical',\n    damage: 50,\n    speed: 10,\n    cost: { energy: 4 },\n    energyCost: 5,\n    effect: {\n      description:\n        'Perform a celestial dive to guarantee stunning the opponent',\n      chance: '100%',\n      result: 'stun',\n    },\n    targets: ['opponent'],\n  },\n}\n\n// all Glowbuggle moves\nexport const LuminousFlight = {\n  name: 'Luminous Flight',\n  type: 'elemental',\n  damage: 40,\n  speed: 11,\n  cost: { energy: 4 },\n  energyCost: 5,\n  effect: {\n    description: 'Take flight and emit a radiant glow',\n    chance: '20%',\n    result: 'illuminate',\n  },\n  priority: 'medium',\n  targets: ['user_pals'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Luminous Shield',\n    type: 'buff',\n    effect: {\n      description: 'Emit a protective shield of light for your pals',\n      duration: '1 turn',\n      shield_value: 40, // Create a protective shield\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Dazzling Radiance',\n    type: 'elemental',\n    damage: 55,\n    speed: 14,\n    cost: { energy: 4 },\n    energyCost: 5,\n    effect: {\n      description: 'Emit blinding radiance, guaranteeing illumination',\n      chance: '100%',\n      result: 'illuminate',\n    },\n    targets: ['user_pals'],\n  },\n}\n\nexport const GlowingCharm = {\n  name: 'Glowing Charm',\n  type: 'elemental',\n  damage: 0, // Glowing Charm doesn't deal damage\n  speed: 9,\n  cost: { energy: 4 },\n  energyCost: 5,\n  effect: {\n    description: 'Emit a comforting and charming glow',\n    chance: '100%',\n    result: 'charm',\n  },\n  priority: 'medium',\n  targets: ['opponent'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Radiant Resilience',\n    type: 'buff',\n    effect: {\n      description: 'Enhance your resistance to charm',\n      duration: '1 turn',\n      charm_resist: 100, // Provides immunity to charm for 1 turn\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Enchanting Aura',\n    type: 'elemental',\n    damage: 0, // Forceful aspect doesn't deal damage either\n    speed: 10,\n    cost: { energy: 4 },\n    energyCost: 5,\n    effect: {\n      description: 'Radiate an enchanting aura to guarantee charm',\n      chance: '100%',\n      result: 'charm',\n    },\n    targets: ['opponent'],\n  },\n}\n\nexport const WarmEmbrace = {\n  name: 'Warm Embrace',\n  type: 'healing',\n  healing: 50, // Healing value\n  speed: 8,\n  cost: { energy: 4 },\n  energyCost: 5,\n  effect: {\n    description: 'Offer a warm and comforting embrace, healing pals',\n    chance: '100%',\n    result: 'heal',\n  },\n  priority: 'medium',\n  targets: ['user_pals'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Caring Touch',\n    type: 'buff',\n    effect: {\n      description: 'Strengthen the healing effect of Warm Embrace',\n      duration: '1 turn',\n      healing_boost: 30, // Increase the healing effect\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Glowing Restoration',\n    type: 'healing',\n    healing: 70, // Increased healing value\n    speed: 10,\n    cost: { energy: 8 },\n    energyCost: 8,\n    effect: {\n      description: 'Channel a powerful healing glow to ensure maximum healing',\n      chance: '100%',\n      result: 'heal',\n    },\n    targets: ['user_pals'],\n  },\n}\n\n// All Umbrabunny moves:\nexport const EmotionDrain = {\n  name: 'Emotion Drain',\n  type: 'dark',\n  damage: 40,\n  speed: 12,\n  cost: { energy: 5 },\n  energyCost: 5,\n  effect: {\n    description: 'Drain the opponents emotions to weaken them',\n    chance: '20%',\n    result: 'debuff',\n  },\n  priority: 'medium',\n  targets: ['opponent'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Resilient Spirit',\n    type: 'buff',\n    effect: {\n      description: 'Enhance your emotional resilience to resist debuffs',\n      duration: '1 turn',\n      debuff_resist: 100, // Provides immunity to debuffs for 1 turn\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Soul Siphon',\n    type: 'dark',\n    damage: 60,\n    speed: 14,\n    cost: { energy: 7 },\n    energyCost: 7,\n    effect: {\n      description: 'Drain the opponents soul, guaranteeing debuffs',\n      chance: '100%',\n      result: 'debuff',\n    },\n    targets: ['opponent'],\n  },\n}\n\nexport const CuteCharm = {\n  name: 'Cute Charm',\n  type: 'elemental',\n  damage: 0, // Cute Charm doesn't deal damage\n  speed: 9,\n  cost: { energy: 4 },\n  energyCost: 4,\n  effect: {\n    description: 'Exude an adorable and charming presence',\n    chance: '100%',\n    result: 'charm',\n  },\n  priority: 'medium',\n  targets: ['opponent'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Charming Aura',\n    type: 'buff',\n    effect: {\n      description: 'Enhance your charm to guarantee success',\n      duration: '1 turn',\n      charm_resist: 100, // Provides immunity to charm for 1 turn\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Enchanting Presence',\n    type: 'elemental',\n    damage: 0, // Forceful aspect doesn't deal damage either\n    speed: 10,\n    cost: { energy: 5 },\n    energyCost: 5,\n    effect: {\n      description: 'Radiate an enchanting aura to guarantee charm',\n      chance: '100%',\n      result: 'charm',\n    },\n    targets: ['opponent'],\n  },\n}\n\nexport const ComfortingHug = {\n  name: 'Comforting Hug',\n  type: 'healing',\n  healing: 50, // Healing value\n  speed: 8,\n  cost: { energy: 6 },\n  energyCost: 6,\n  effect: {\n    description: 'Offer a comforting hug to heal pals',\n    chance: '100%',\n    result: 'heal',\n  },\n  priority: 'medium',\n  targets: ['user_pals'],\n  // \"NotSoFast\" aspect:\n  notSoFast: {\n    name: 'Reassuring Embrace',\n    type: 'buff',\n    effect: {\n      description: 'Strengthen the healing effect of Comforting Hug',\n      duration: '1 turn',\n      healing_boost: 30, // Increase the healing effect\n    },\n  },\n  // \"Forceful\" aspect:\n  forceful: {\n    name: 'Soothing Embrace',\n    type: 'healing',\n    healing: 70, // Increased healing value\n    speed: 10,\n    cost: { energy: 8 },\n    energyCost: 8,\n    effect: {\n      description: 'Offer a profound and soothing embrace for maximum healing',\n      chance: '100%',\n      result: 'heal',\n    },\n    targets: ['user_pals'],\n  },\n}\n","import { Ticklefairy } from '../pals/pals'\n\nexport const Trainer = {\n  name: 'Trainer Name',\n  reward: {\n    experience: 100,\n    currency: 500,\n    items: [\n      { obj: 'Potion', quantity: 3 },\n      { obj: 'Revive', quantity: 1 },\n      // Add more items as needed\n    ],\n  },\n  monsters: [\n    // { name: \"Bunbun\", level: 2 },\n    // { name: \"FireDrake\", level: 3 },\n    // { name: \"WaterSplash\", level: 4 },\n    { obj: Ticklefairy, level: 3 },\n    { obj: Ticklefairy, level: 3 },\n  ],\n  dialogue: {\n    enter: 'I challenge you to a battle!',\n    win: \"You're a strong trainer!\",\n    lose: 'Better luck next time!',\n    // Add more dialogue lines as needed\n  },\n  // Maybe spirit. Spirit would be a powerful buff from a dead monster. This could be the\n  // commander ability\n  // Add other trainer properties like image, location, etc.\n}\n\nexport const hikerBrak = {\n  name: 'Hiker Brak',\n  reward: {\n    experience: 150,\n    currency: 300,\n    items: [{ name: 'Rock Candy', quantity: 2 }],\n  },\n  monsters: [\n    // { name: \"Bunbun\", level: 6 },\n    // { name: \"Rockzilla\", level: 8 },\n    { obj: Ticklefairy, level: 3 },\n    { obj: Ticklefairy, level: 3 },\n  ],\n  dialogue: {\n    enter: 'Prepare to be crushed under the weight of my mighty rocks!',\n    win: \"You're no match for my boulders!\",\n    lose: \"You've chipped away at my confidence. Well done.\",\n  },\n}\n\nexport const mysticWillow = {\n  name: 'Mystic Willow',\n  reward: {\n    experience: 200,\n    currency: 400,\n    items: [{ name: 'Enchanted Orb', quantity: 1 }],\n  },\n  monsters: [\n    // { name: \"Sparklefox\", level: 10 },\n    // { name: \"Moonshadow\", level: 12 },\n    { obj: Ticklefairy, level: 3 },\n    { obj: Ticklefairy, level: 3 },\n  ],\n  dialogue: {\n    enter: 'Let the magic of nature guide our battle!',\n    win: \"Nature's power flows through you as well. Impressive!\",\n    lose: \"You've proven that the balance of nature is unpredictable.\",\n  },\n}\n\nexport const acePilotSkyler = {\n  name: 'Ace Pilot Skyler',\n  reward: {\n    experience: 250,\n    currency: 600,\n    items: [{ name: 'Jet Fuel', quantity: 3 }],\n  },\n  monsters: [\n    // { name: \"Thunderhawk\", level: 15 },\n    // { name: \"Cyclonejet\", level: 17 },\n    { obj: Ticklefairy, level: 3 },\n    { obj: Ticklefairy, level: 3 },\n  ],\n  dialogue: {\n    enter: \"Fasten your seatbelts! We're in for a turbulent battle!\",\n    win: 'You soared to new heights in this battle! Excellent!',\n    lose: 'My victory was as fleeting as the wind. Well fought.',\n  },\n}\n\nexport const scientistTesla = {\n  name: 'Scientist Tesla',\n  reward: {\n    experience: 180,\n    currency: 500,\n    items: [{ name: 'Tesla Coil', quantity: 1 }],\n  },\n  monsters: [\n    // { name: \"Electroray\", level: 9 },\n    // { name: \"Voltorbolt\", level: 11 },\n    { obj: Ticklefairy, level: 3 },\n    { obj: Ticklefairy, level: 3 },\n  ],\n  dialogue: {\n    enter: 'Witness the power of electricity, harnessed for battle!',\n    win: 'Your energy is electrifying! Impressive!',\n    lose: \"You've caused a short circuit in my plans. Well done.\",\n  },\n}\n\nexport const placeholderTrainer = {\n  name: 'Mr. Placeholder',\n  reward: {\n    experience: 1, // He's not very experienced\n    currency: 10, // He's not rich either\n    items: [\n      { name: 'Duct Tape', quantity: 1 }, // Just one roll of duct tape\n      { name: 'Expired Banana', quantity: 3 }, // Watch out, they're expired\n    ],\n  },\n  monsters: [\n    // { name: \"Sillyslime\", level: 1 }, // A slime that tells dad jokes\n    // { name: \"Pillowpet\", level: 2 }, // Literally a fluffy pillow brought to life\n    { obj: Ticklefairy, level: 3 }, // Special move: Tickle Attack!\n    { obj: Ticklefairy, level: 3 },\n    { obj: Ticklefairy, level: 3 },\n  ],\n  dialogue: {\n    enter: 'I challenge you to a tickle fight! Oops, I mean a battle!',\n    win: \"You're a slightly stronger trainer than me!\",\n    lose: \"Better luck next time! I'm off to tell more dad jokes!\",\n  },\n  spirit: 'The Ghost of Bad Puns', // Commander ability: Increases the likelihood of eye-rolls\n  // Other properties like image, location, etc. are intentionally left blank because Mr. Placeholder is all about being generic!\n}\n\nexport const basicTrainers = [\n  Trainer,\n  hikerBrak,\n  mysticWillow,\n  acePilotSkyler,\n  scientistTesla,\n  // Add more basic trainers as needed\n]\n\nexport const allTrainers = [\n  ...basicTrainers,\n  // Add more advanced trainers as needed\n  // ...advancedTrainers,\n  // ...specialTrainers,\n  // ...otherTrainers,\n  // ...etc.\n]\n\n// What trainerNames does is it returns an array of trainer names.\nexport const trainerNames = allTrainers.map((trainer) => trainer.name)\n\n// trainerNamesAndLevels returns an array of objects with the trainer name and level.\n// This is useful for displaying trainer names and levels in a table or list.\n// Example usage:\n// const trainerNamesAndLevels = trainerNamesAndLevels();\n// console.log(trainerNamesAndLevels); // [{ name: \"Trainer Name\", level: 2 }\nexport const trainerNamesAndLevels = allTrainers.map((trainer) => ({\n  name: trainer.name,\n  level: trainer.monsters[0].level,\n}))\n","import { SCENES } from '../scenes'\nimport { cusLog } from '../utils/debugging-utils'\nimport { basicTrainers } from './party/trainers'\n\nexport function generateNextLevelOptions() {\n  const options = []\n\n  const { BATTLE, EVENT, REST } = SCENES\n\n  // Generate 3 options\n  for (let i = 0; i < 3; i++) {\n    const randomValue = Math.random() // Generate a random number between 0 and 1\n\n    if (randomValue < 0.5) {\n      // would be better with {screen: \"battle\", details: null}\n      const randomTrainer =\n        basicTrainers[Math.floor(Math.random() * basicTrainers.length)]\n      options.push({\n        screen: BATTLE,\n        details: {\n          type: 'trainer',\n          trainer: randomTrainer,\n          area: 'tranquil forest',\n          difficulty: 'easy',\n        },\n      }) // 50% chance for Battle encounter\n      // options.push({screen: BATTLE, details: null});\n    } else if (randomValue < 0.7) {\n      options.push({ screen: EVENT, details: null }) // 20% chance for Event\n      // }\n      //  else if (randomValue < 0.8) {\n      //   options.push(\"Mystery\"); // 10% chance for Mystery\n    } else {\n      options.push({ screen: REST, details: null }) // 20% chance for Rest\n    }\n  }\n\n  return options\n}\n\n//it would be cool to have an in-game thing result in the board changing.\n// a monster dies before it becomes a boss,\n// a place catching fire so a fire battle is up ahead\n// a place freezing over because of so much ice moves so ice battle up ahead\n// theives steal from you so you fight them later on to get your stuff back\n\nexport function generateMap() {\n  const results = []\n\n  for (let i = 0; i < 8; i++) {\n    const options = generateNextLevelOptions() // Generate options using the previous function\n    results.push(options) // Store the generated options in the results array\n  }\n\n  return results\n}\n\n// Run the function\nconst multipleResults = generateMap()\n// console.log(''multipleResults)\ncusLog('Loading data', 'info', undefined, multipleResults)\n","import { startingDeck } from './consts'\nimport { EFFECTS } from '../effects'\nimport { SCENES } from '../handlers/sceneHandlers_new'\nimport { opponent, userParty } from './party/parties'\nimport { generateMap } from './mapGenerator_new'\nimport { placeholderTrainer } from './party/trainers'\n\nconst { DRAW, STUN, DOUBLEDAMAGE, SLEEP, POISON } = EFFECTS\n//\n\n// On load generate:\n// Generate party or choose a starting PAL\n\nexport const newStartingData = {\n  // Party system for the player and enemy\n  // playerParty: [\n  //   {\n  //     name: \"Pupcake\",\n  //     health: 100,\n  //     maxHP: 100,\n  //     energy: 5,\n  //     status: \"Fine\",\n  //     flaws: {\n  //       weak: \"poison\",\n  //       resist: \"fire\",\n  //     },\n  //     lvl: 3,\n  //     exp: 168034502,\n  //     Abilities: [\n  //       {\n  //         name: \"Claw Slash\",\n  //         type: \"physical\",\n  //         damage: 20,\n  //         speed: 7,\n  //         fuel: 2,\n  //         effect: { Desc: \"chance to paralyze\", chance: \"50%\", result: \"stun\" },\n  //         chance: 50,\n  //         descripition: \"chance to paralyze\",\n  //         priority: \"fast\",\n  //         notSoFast: {\n  //           name: \"Claw counter\",\n  //           type: \"physical\",\n  //           damage: 20,\n  //           speed: 7,\n  //           fuel: 2,\n  //           Desc: \"chance to paralyze on counter\",\n  //           chance: \"50%\",\n  //           result: \"stun\",\n  //           priority: \"fast\",\n  //         },\n  //         forceful: {\n  //           name: \"Claw Rage\",\n  //           type: \"physical\",\n  //           damage: 20,\n  //           speed: 7,\n  //           fuel: 2,\n  //           Desc: \"chance to paralyze on counter\",\n  //           chance: \"50%\",\n  //           result: \"stun\",\n  //           priority: \"fast\",\n  //         },\n  //       },\n  //       // Add more attacks as needed\n  //     ],\n  //     quirks: [\n  //       // Quirks that affect this monster's behavior or abilities\n  //       // Example: \"Furious\" - Increases damage output\n  //       [\"furious\", [\"damage buff\", 20]],\n  //       //Allows the user to dodge on his own.\n  //       [\"pirate\", [\"Illusive chance\", \"10%\"]], //if dodged, \"X's pirate wit caused him to evade the attack\"\n  //     ],\n  //     stats: {\n  //       // Stats that influence the monster's performance\n  //       // Example: \"Strength\", \"Agility\", \"Intelligence\"\n  //     },\n  //     nature: \"Friendly\",\n  //     // Add more attributes as needed\n  //     uniqueness:\n  //       \"I don't know, any unique attributes we can add based on this individual instance of the monster\",\n  //   },\n  //   // Add more party members as needed\n  // ],\n  // a party of one commander monster that has a strat - and a party of 5 monsters\n  \n  userParty: userParty,\n  opponent: placeholderTrainer,\n  battleManager: {\n    turn: 1, // Current turn number\n    currentPlayer: 'player', // Current player's turn (\"player\" or \"enemy\")\n    phase: 'begin', // Current phase\n    // Add more game state variables as needed\n  },\n  current: {\n    level: 0,\n    act: 1,\n    scene: { screen: SCENES.INTRO, details: null },\n    curEvent: null,\n    incomingLevels: [\n      {\n        scene: 'battle',\n        trainer: 'hikerNed',\n        // level based on our progression\n      },\n    ],\n  },\n  game: {\n    player: {\n      gold: 50,\n      credability: 3,\n      runes: [],\n      inventory: [],\n      effects: [],\n      energy: 6,\n    },\n    map: generateMap(),\n    battlesAhead: [],\n\n    // ...\n\n    // Event system (placeholder)\n    events: {\n      introEvent: {\n        text: 'Welcome to the game!',\n        options: [\n          {\n            text: 'Start the adventure',\n            action: () => {\n              // Handle action when this option is chosen\n              // For example, transition to the first map node\n            },\n          },\n          // Add more options as needed\n        ],\n      },\n      // Add more events as needed\n    },\n    // Error handling and alerts\n    alerts: [],\n    // ...\n    // Development mode flag\n    devMode: false,\n  },\n  dialog: {\n    isOpen: false,\n    message: 'startingData Message',\n    options: [\n      {\n        label: 'start',\n        onClick: () => {\n          // Handle action when this option is chosen\n          // For example, transition to the first map node\n        },\n        backgroundColor: '#4b770e',\n        color: '#fff',\n      },\n    ],\n    title: 'startingData Title',\n    header: 'startingData Header',\n  },\n}\n\nexport const startingData = {\n  deck: startingDeck,\n  gold: 50,\n  hero: {\n    health: 100,\n    energy: 5,\n    status: 'Feeling Fine',\n    effects: {\n      buff: null,\n      buildup: 1,\n    },\n    maxHP: 100,\n    maxEnergy: 5,\n    armor: 0,\n    power: 0,\n  },\n  battle: {\n    enemy: {\n      name: 'sample guy',\n      bio: 'just a standaard enemy',\n      health: '30',\n      maxHP: '30',\n      energy: 6,\n      status: 'none',\n      nextAttack: 'none',\n      attacks: [\n        {\n          name: 'sample atk hitting you',\n          type: 'hit',\n          damage: 20,\n          status: STUN,\n        },\n        {\n          name: 'sample atk hitting again',\n          type: 'hit',\n          damage: 40,\n          status: null,\n        },\n      ],\n    },\n    runes: [],\n    hand: [],\n    discarded: [],\n    beginning: false,\n    dialog: null,\n  },\n  curScene: { scene: 'intro', lvl: 1, act: 1 },\n  curEvent: null,\n  availableRewards: [],\n  alert: '',\n\n  // alert: \"--- Cards PERMANENTLY go away. They can only be used once ---\",\n  eventResultObj: null,\n  devMode: false,\n}\n","/* eslint-disable indent */\nimport React, { useContext } from 'react'\nimport './index.css'\n// import { startingData } from \"./consts/consts\";\nimport { newStartingData } from './consts/startingData'\nimport { cusLog } from './utils/debugging-utils'\n\nconst stateContext = React.createContext()\nconst dispatchContext = React.createContext()\n\nexport function useStateContext() {\n  return useContext(stateContext)\n}\n\nexport function useDispatchContext() {\n  return useContext(dispatchContext)\n}\n\nexport const ACTIONS = {\n  SET_SCENE: 'SET_SCENE',\n  SET_HEALTH: 'SET_HEALTH',\n  SET_GOLD: 'SET_GOLD',\n  SET_LEVEL: 'SET_LEVEL',\n  SET_INVENTORY: 'SET_INVENTORY',\n  ATTACK: 'ATTACK',\n  UPDATEGAMEDATA: 'UPDATEGAMEDATA',\n}\n\nexport const MainProvider = ({ children }) => {\n  // Here we initialize the state with the startingData\n  // const initialState = { startingData };\n  // Here is the reducer function\n  // const [state, dispatch] = React.useReducer(reducer, initialState);\n  const [state, dispatch] = React.useReducer(reducer, newStartingData)\n\n  function reducer(state, action) {\n    cusLog(`dispatching:`, 'info', undefined, action)\n    // console.log(`reducer HIT`, action.type, action)\n    switch (action.type) {\n      case ACTIONS.UPDATEGAMEDATA:\n        return { ...state, ...action.payload }\n      case ACTIONS.SET_SCENE:\n        return { ...state, scene: action.payload }\n      case ACTIONS.ATTACK:\n        return {\n          ...state,\n          playerParty: [\n            { ...state.playerParty[0], health: action.payload },\n            ...state.playerParty,\n          ],\n        }\n      case ACTIONS.SET_HEALTH:\n        return { ...state, health: action.payload }\n      case ACTIONS.SET_GOLD:\n        return { ...state, gold: action.payload }\n      case ACTIONS.SET_LEVEL:\n        return { ...state, level: action.payload }\n      case ACTIONS.SET_INVENTORY:\n        return { ...state, inventory: action.payload }\n      default:\n        console.log('ERROR: Invalid action type. End of Reducer reached')\n        return state\n    }\n  }\n\n  return (\n    <stateContext.Provider value={state}>\n      <dispatchContext.Provider value={dispatch}>\n        {children}\n      </dispatchContext.Provider>\n    </stateContext.Provider>\n  )\n}\n","import React from 'react'\nimport Dialog from './Dialog'\nimport { ACTIONS, useDispatchContext, useStateContext } from '../../MainContext'\n\nfunction DialoguePopup(props) {\n  const {\n    // trigger,\n    // title,\n    // header,\n    // buttonText,\n    // buttonText2,\n    // onButtonClick,\n    // message,\n    // size,\n    // speed,\n    // trigger,\n    // title = 'Default dialogPopup.js Title',\n    // header,\n    // message = 'default dialogPopup.js message',\n    // options = [\n    //   {\n    //     label: 'Button 1',\n    //     onClick: () => {\n    //       // Define the action for button 1\n    //     },\n    //     // helperText: 'Button 1 helper text', ?\n    //     backgroundColor: '#4b770e',\n    //     color: '#fff',\n    //   },\n    // ],\n    // state,\n    // dispatch,\n  } = props\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  const trigger = contextualState.dialog.isOpen\n\n  const closeDialogPopup = (button) => {\n    // if (dispatch) {\n    // You can use the state and dispatch here if needed.\n    // For example, you can dispatch an action based on the button clicked.\n    // dispatch(someAction(button));\n    // }\n    if (button.onClick) {\n      button.onClick()\n    }\n    const closeDialogueState = {\n      ...contextualState,\n      dialog: {\n        ...contextualState.dialog,\n        isOpen: false,\n      },\n    }\n    contextualDispatch({\n      payload: closeDialogueState,\n      type: ACTIONS.UPDATEGAMEDATA,\n    })\n  }\n\n  return trigger ? (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100vh',\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 100,\n      }}\n    >\n      <div\n        style={{\n          position: 'relative',\n          padding: '20px',\n          backgroundColor: '#5a7d2a',\n          width: '80%',\n          maxWidth: '640px',\n          boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n        }}\n      >\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px',\n          }}\n        >\n          <div\n            style={{\n              width: '24px',\n              height: '24px',\n              backgroundColor: 'green',\n              marginRight: '10px',\n            }}\n          >\n            {'i'}\n          </div>\n          <div\n            style={{\n              fontSize: '24px',\n              fontWeight: 'bold',\n            }}\n          >\n            <div>{contextualState.dialog.title}</div>\n          </div>\n        </div>\n        <div\n          style={{\n            marginBottom: '20px',\n          }}\n        >\n          {' '}\n        </div>\n        <div>\n          <div>\n            <Dialog size=\"20\" myText={contextualState.dialog.message} />\n          </div>\n          {contextualState.dialog.options.map((button, index) => (\n            <button\n              key={index}\n              onClick={() => closeDialogPopup(button)}\n              style={{\n                backgroundColor: button.backgroundColor || '#4b770e',\n                border: 'none',\n                color: button.color || '#fff',\n                padding: '10px 20px',\n                margin: '0px 4px',\n                cursor: 'pointer',\n              }}\n            >\n              {button.label}\n            </button>\n          ))}\n        </div>\n      </div>\n    </div>\n  ) : null\n}\n\nexport default DialoguePopup\n","const palAcronyms = [\n  \"Pixelated Artifact Locators\",\n  \"Prism-powered Adventure League\",\n  \"Pocket-sized Animal Luminaries\",\n  \"Parallel Adventure Leaders\",\n  \"Psychedelic Artifact Legends\",\n  \"Plushie Animal Legion\",\n  \"Pixel Art Adventure Lovers\",\n  \"Pioneers of Animal Magic\",\n  \"Paladins of Ancient Lore\",\n  \"Playful Animal Liaison\",\n  \"Prodigious Animal Partners\",\n  \"Particle Acceleration Legacy\",\n  \"Peaceful Artifact Location Team\",\n  \"Protectors of Arcane Lands\",\n  \"Phantasmal Animal Lords\",\n  \"Prehistoric Adventure Mystics\",\n  \"Puzzle-solving Animal Mentors\",\n  \"Pixel-powered Artifact Locating\",\n  \"Prism-bound Adventure Magicians\",\n  \"Pocket-sized Animal Legends\",\n  \"Parallel Artifact Locators\",\n  \"Psychedelic Adventure Lovers\",\n  \"Plushie Animal Mythos\",\n  \"Pixel Art Adventure Masters\",\n  \"Pioneers of Animal Mythology\",\n  \"Paladins of Animal Liberation\",\n  \"Playful Animal Legends\",\n  \"Prodigious Animal Liaisons\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Artifact Location Experts\",\n  \"Protectors of Alien Life\",\n  \"Phenomenal Animal Leaders\",\n  \"Prehistoric Adventure Legends\",\n  \"Puzzle-solving Animal Magicians\",\n  \"Pixel-powered Artifact Location\",\n  \"Prism-empowered Adventure Luminaries\",\n  \"Pocket-sized Animal Lovers\",\n  \"Parallel Artifact Location Team\",\n  \"Psychedelic Animal Mysteries\",\n  \"Plushie Adventure Lords\",\n  \"Pixel Art Artifact Lovers\",\n  \"Pioneers of Animal Realms\",\n  \"Paladins of Ancient Magic\",\n  \"Playful Animal Luminaries\",\n  \"Prodigious Animal Legends\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Artifact Location Society\",\n  \"Protectors of Alternate Lands\",\n  \"Phenomenal Animal Liberationists\",\n  \"Prehistoric Animal Liaisons\",\n  \"Puzzle-solving Adventure Mystics\",\n  \"Pixel-powered Augmented Life\",\n  \"Prism-bound Animal Leaders\",\n  \"Pocket-sized Artifact Locators\",\n  \"Parallel Animal Lovers\",\n  \"Psychedelic Artifact Mysteries\",\n  \"Plushie Adventure Magicians\",\n  \"Pixel Art Artifact Legends\",\n  \"Pioneers of Animal Realities\",\n  \"Paladins of Ancient Mythos\",\n  \"Playful Animal Magi\",\n  \"Prodigious Animal Lore\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Artifact Location Team\",\n  \"Protectors of Astronomical Life\",\n  \"Phenomenal Animal Luminaries\",\n  \"Prehistoric Artifact Liaisons\",\n  \"Puzzle-solving Augmented Legends\",\n  \"Pixel-powered Animal Lovers\",\n  \"Prism-empowered Artifact Locators\",\n  \"Pocket-sized Adventure Mysteries\",\n  \"Parallel Animal Mythology\",\n  \"Psychedelic Augmented Lovers\",\n  \"Plushie Artifact Magicians\",\n  \"Pixel Art Animal Legends\",\n  \"Pioneers of Astral Magic\",\n  \"Paladins of Ancient Mythology\",\n  \"Playful Artifact Magi\",\n  \"Prodigious Artifact Lore\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Adventure Location Team\",\n  \"Protectors of Ancient Mysteries\",\n  \"Phenomenal Augmented Lifeforms\",\n  \"Prehistoric Artifact Legends\",\n  \"Puzzle-solving Augmented Mythos\",\n  \"Pixel-powered Animal League\",\n  \"Prism-empowered Artifact Leaders\",\n  \"Pocket-sized Augmented Luminaries\",\n  \"Parallel Artifact Liaisons\",\n  \"Psychedelic Animal Magicians\",\n  \"Plushie Augmented Legends\",\n  \"Pixel Art Augmented Life\",\n  \"Pioneers of Astral Mythology\",\n  \"Paladins of Ancient Magic\",\n  \"Playful Artifact Mysteries\",\n  \"Prodigious Augmented Lore\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Adventure Location Society\",\n  \"Protectors of Ancient Realities\",\n  \"Phenomenal Augmented Leaders\",\n  \"Prehistoric Augmented Mythology\",\n  \"Puzzle-solving Artifact League\",\n  \"Pixel-powered Augmented Leaders\",\n  \"Prism-empowered Augmented Luminaries\",\n  \"Pocket-sized Artifact Liaison\",\n  \"Parallel Augmented Magicians\",\n  \"Psychedelic Adventure Mythos\",\n  \"Plushie Augmented Magicians\",\n  \"Pixel Art Augmented Legends\",\n  \"Pioneers of Astral Realities\",\n  \"Paladins of Ancient Mysteries\",\n  \"Playful Augmented Magic\",\n  \"Prodigious Artifact Masters\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Adventure Location Team\",\n  \"Protectors of Ancient Realms\",\n  \"Phenomenal Augmented Luminaries\",\n  \"Prehistoric Augmented Mythos\",\n  \"Puzzle-solving Augmented League\",\n  \"Pixel-powered Augmented Lifeforms\",\n  \"Prism-empowered Artifact Location\",\n  \"Pocket-sized Adventure Mythology\",\n  \"Parallel Artifact Masters\",\n  \"Psychedelic Augmented Magicians\",\n  \"Plushie Adventure Magic\",\n  \"Pixel Art Augmented Lore\",\n  \"Pioneers of Astral Legends\",\n  \"Paladins of Ancient Realities\",\n  \"Playful Augmented Leaders\",\n  \"Prodigious Artifact Liaisons\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Adventure Location Society\",\n  \"Protectors of Ancient Mysteries\",\n  \"Phenomenal Augmented Life\",\n  \"Prehistoric Artifact Masters\",\n  \"Puzzle-solving Augmented Mythology\",\n  \"Pixel-powered Augmented League\",\n  \"Prism-empowered Augmented Leaders\",\n  \"Pocket-sized Artifact Luminaries\",\n  \"Parallel Augmented Liaisons\",\n  \"Psychedelic Augmented Magi\",\n  \"Plushie Adventure Mythos\",\n  \"Pixel Art Augmented Luminaries\",\n  \"Pioneers of Astral Magic\",\n  \"Paladins of Ancient Mythology\",\n  \"Playful Augmented Masters\",\n  \"Prodigious Artifact Mythos\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Adventure Location Team\",\n  \"Protectors of Ancient Realms\",\n  \"Phenomenal Augmented Leaders\",\n  \"Prehistoric Augmented Mysteries\",\n  \"Puzzle-solving Artifact League\",\n  \"Pixel-powered Augmented Legends\",\n  \"Prism-empowered Augmented Life\",\n  \"Pocket-sized Augmented Liaison\",\n  \"Parallel Augmented Magicians\",\n  \"Psychedelic Augmented Mythos\",\n  \"Plushie Artifact Mysteries\",\n  \"Pixel Art Augmented Magic\",\n  \"Pioneers of Astral Mythos\",\n  \"Paladins of Ancient Magic\",\n  \"Playful Augmented Mysteries\",\n  \"Prodigious Augmented Masters\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Adventure Location Society\",\n  \"Protectors of Ancient Realities\",\n  \"Phenomenal Augmented Luminaries\",\n  \"Prehistoric Augmented Mythology\",\n  \"Puzzle-solving Artifact Leaders\",\n  \"Pixel-powered Augmented League\",\n  \"Prism-empowered Augmented Luminaries\",\n  \"Pocket-sized Artifact Liaison\",\n  \"Parallel Augmented Mythology\",\n  \"Psychedelic Augmented League\",\n  \"Plushie Artifact Magi\",\n  \"Pixel Art Augmented Mysteries\",\n  \"Pioneers of Astral Realms\",\n  \"Paladins of Ancient Mysteries\",\n  \"Playful Augmented Magic\",\n  \"Prodigious Augmented Mythology\",\n  \"Particle Acceleration Laboratory\",\n  \"Peaceful Adventure Location Team\",\n  \"Protectors of Ancient Realms\",\n  \"Phenomenal Augmented Leaders\",\n  \"Prehistoric Augmented Realities\",\n  \"Puzzle-solving Artifact Luminaries\",\n];\n\nexport function getRandomPALAcronym() {\n  const randomIndex = Math.floor(Math.random() * palAcronyms.length);\n  return palAcronyms[randomIndex];\n}\n","import React, { useEffect, useState } from 'react'\nimport './Intro.css'\nimport { setSceneAction } from '../../actions'\nimport { motion } from 'framer-motion/dist/framer-motion'\n// @TODO: Add typewriter effect to text\nimport '../common/Button.css'\nimport { AnimatePresence } from 'framer-motion'\n\nimport Dialog from '../common/Dialog'\nimport ThemedButton from '../common/ThemedButton'\nimport DialoguePopup from '../common/DialoguePopup'\nimport { ACTIONS, useDispatchContext, useStateContext } from '../../MainContext'\nimport { getRandomPALAcronym } from '../../consts/fun/pal'\nimport {\n  SCENES,\n  updateLevel,\n  updateScene,\n} from '../../handlers/sceneHandlers_new'\n// import SparkleButton from '../common/SparkleButton'\n\nconst Intro = ({ dispatch }) => {\n  const styles = {\n    fontStyle: {\n      fontFamily: 'Silkscreen',\n      // fontSize: \"100px\",\n      fontSize: '22px',\n      color: 'white',\n      padding: '20px',\n    },\n    fontFam: {\n      fontFamily: 'Silkscreen',\n    },\n  }\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  const loadNextLevel = () => {\n    // #TODO: remove?\n    console.log(`func: loadNextLevel()`)\n    dispatch(setSceneAction())\n    //\n\n    const nextSceneState = updateScene(contextualState, {\n      screen: SCENES.CHOOSECHARACTER,\n      details: null,\n    })\n    const nextLevelState = updateLevel(nextSceneState, 1)\n    contextualDispatch({\n      payload: nextLevelState,\n      type: ACTIONS.UPDATEGAMEDATA,\n    })\n  }\n\n  // Viseral Resonance, Behavioral Resonance, Reflective Resonance\n  // Emotional Attachment\n  const [lastPlayedTime, setLastPlayedTime] = useState(null)\n  const [streak, setStreak] = useState(0)\n  const [longestStreak, setLongestStreak] = useState(0)\n\n  useEffect(() => {\n    const today = new Date().toDateString()\n    const lastPlayed = localStorage.getItem('lastPlayed')\n\n    if (lastPlayed !== today) {\n      const localStreak = localStorage.getItem('streak')\n      const localLongestStreak = localStorage.getItem('longestStreak')\n      let newStreak = 1\n      if (lastPlayed === new Date(Date.now() - 86400000).toDateString()) {\n        newStreak = localStreak ? Number(localStreak) + 1 : 1\n        localStorage.setItem('streak', newStreak)\n        setStreak(newStreak)\n      } else {\n        localStorage.setItem('streak', 1)\n        setStreak(1)\n      }\n      if (!localLongestStreak || newStreak > Number(localLongestStreak)) {\n        localStorage.setItem('longestStreak', newStreak)\n        setLongestStreak(newStreak)\n      }\n      localStorage.setItem('lastPlayed', today)\n    }\n\n    setLastPlayedTime(localStorage.getItem('lastPlayed'))\n    setStreak(Number(localStorage.getItem('streak')))\n    setLongestStreak(Number(localStorage.getItem('longestStreak')))\n  }, [])\n\n  const circleVariants = {\n    initial: { y: 0 },\n    animate: { y: '-100vh' },\n    exit: { opacity: 0 },\n  }\n\n  const explosionVariants = {\n    initial: { scale: 0 },\n    animate: { scale: [1, 2, 2, 1, 1], opacity: [1, 1, 1, 0, 0] },\n  }\n\n  const Circle = ({ onComplete }) => (\n    <motion.div\n      variants={circleVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      exit=\"exit\"\n      onAnimationComplete={onComplete}\n      style={{\n        background: 'red',\n        borderRadius: '50%',\n        width: '100px',\n        height: '100px',\n      }}\n    />\n  )\n\n  const Explosion = () => (\n    <motion.div\n      variants={explosionVariants}\n      initial=\"initial\"\n      animate=\"animate\"\n      style={{\n        position: 'absolute',\n        top: '0',\n        background: 'orange',\n        borderRadius: '50%',\n        width: '200px',\n        height: '200px',\n      }}\n    />\n  )\n\n  const [explode, setExplode] = useState(false)\n  const [startAnimation, setStartAnimation] = useState(false)\n\n  // const handleButtonClick = () => {\n  //   // Handle button click action here\n  //   setShowPopup(false)\n  // }\n\n  return (\n    <>\n      <div>\n        <div\n          className=\"font-silkscreen flex flex-col items-center\n         bg-repeat bg-cover bg-white text-white p-5\"\n        >\n          <div style={{ color: 'gray' }}>Rebirth v0.21</div>\n          <div>\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1.1, duration: 2 }}\n              style={styles.fontStyle}\n            >\n              Super Chibipal Slayer!\n              <h5>{getRandomPALAcronym()}</h5>\n            </motion.div>\n          </div>\n          <div>\n            <img\n              style={{ width: 240, height: 200, padding: '20px' }}\n              src=\"creatures/Chibipal.png\"\n              alt=\"Chibipal Backside\"\n            />\n          </div>\n          <div style={{ paddingRight: '5px', paddingLeft: '5px' }}>\n            {/* <div style={{color: 'white'}}>  Hi Lisa, I made this game for you to play</div> */}\n            <Dialog\n              size=\"20\"\n              myText={`In 2025 - We discovered mystical creatures that harnessed the power of the elements. \n      In 2030 - The incredible creatures revolutionized mankind. Today, you get yours.`}\n            />\n            <br />\n          </div>{' '}\n          {/* <div style={{ position: \"relative\", height: \"100vh\" }}>\n            <AnimatePresence>\n              {!explode && <Circle onComplete={() => setExplode(true)} />}\n              {explode && <Explosion />}\n            </AnimatePresence>\n          </div> */}\n          {/* <button onClick={() => setStartAnimation(true)}>\n              Start Animation\n            </button> */}\n          <div style={{ padding: '30px' }}>\n            {' '}\n            <ThemedButton text={`Lets Adventure!`} onClick={loadNextLevel} />\n          </div>\n          {/* <SparkleButton /> */}\n          <ThemedButton text={`Options`} onClick={loadNextLevel} />\n          <ThemedButton text={`Museum`} onClick={loadNextLevel} />\n          \n          <div style={{ backgroundColor: 'gray', padding: '5px' }}>\n            <p className=\"text-3xl font-bold underline text-red-300\">\n              Hello Tailwind World! Streak: {streak} longestStreak {longestStreak}\n              , (Last Played: {lastPlayedTime})\n            </p>\n          </div>\n          {/* <div style={{ color: 'white' }}>\n            {JSON.stringify(contextualState)}\n          </div> */}\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Intro\n","export const possibleEvents = [\n  {\n    name: \"Sample Event\",\n    description: \"You happen upon a glade\",\n    choices: [\n      {\n        choice: \"Fight the civilians\",\n        resultType: \"money\",\n        resultNum: 30,\n        resultDialog: \"Great Job\",\n        resultDialogTitle: \"Thanks!\",\n      },\n      {\n        choice: \"Keep going going on path\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"Next time you'll get it\",\n        resultDialogTitle: \"Its okay\",\n      },\n    ],\n  },\n  {\n    name: \"Help a lost traveler\",\n    description:\n      \"You come across a lost traveler who needs help finding his way to the next town.\",\n    choices: [\n      {\n        choice: \"Help him\",\n        resultType: \"money\",\n        resultNum: 50,\n        resultDialog: \"You've helped the traveler and received a reward.\",\n        resultDialogTitle: \"Thanks!\",\n      },\n      {\n        choice: \"Leave him\",\n        resultType: \"health\",\n        resultNum: -5,\n        resultDialog:\n          \"You've decided to leave the traveler, your kindness has decreased\",\n        resultDialogTitle: \"Not so kind\",\n      },\n    ],\n  },\n  {\n    name: \"Abandoned mine\",\n    description:\n      \"You find an abandoned mine in the middle of the forest, it seems like it was left in a hurry.\",\n    choices: [\n      {\n        choice: \"Explore the mine\",\n        resultType: \"money\",\n        resultNum: 20,\n        resultDialog: \"You've found some valuable resources in the mine.\",\n        resultDialogTitle: \"Great find!\",\n      },\n      {\n        choice: \"Leave the mine\",\n        resultType: \"health\",\n        resultNum: 10,\n        resultDialog:\n          \"You've decided to leave the mine and rest, your health has increased\",\n        resultDialogTitle: \"Rest and recover\",\n      },\n    ],\n  },\n  {\n    name: \"A wounded animal\",\n    description: \"You come across a wounded animal, it seems to be in pain.\",\n    choices: [\n      {\n        choice: \"Help the animal\",\n        resultType: \"health\",\n        resultNum: 15,\n        resultDialog:\n          \"You've helped the animal and it has increased your kindness and health.\",\n        resultDialogTitle: \"Kindness pays off\",\n      },\n      {\n        choice: \"Leave the animal\",\n        resultType: \"health\",\n        resultNum: -5,\n        resultDialog:\n          \"You've decided to leave the animal, your kindness has decreased\",\n        resultDialogTitle: \"Not so kind\",\n      },\n    ],\n  },\n  {\n    name: \"A mysterious chest\",\n    description:\n      \"You come across a chest in the middle of the forest, it seems to be locked.\",\n    choices: [\n      {\n        choice: \"Open the chest\",\n        resultType: \"money\",\n        resultNum: 50,\n        resultDialog: \"You've found some valuable treasures in the chest.\",\n        resultDialogTitle: \"Great find!\",\n      },\n      {\n        choice: \"Leave the chest\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the chest, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A lost village\",\n    description:\n      \"You come across a village that seems to be abandoned, but you can see smoke coming from one of the chimneys.\",\n    choices: [\n      {\n        choice: \"Investigate the village\",\n        resultType: \"money\",\n        resultNum: 30,\n        resultDialog: \"You've found some valuable resources in the village.\",\n        resultDialogTitle: \"Great find!\",\n      },\n      {\n        choice: \"Leave the village\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the village, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A strange man\",\n    description:\n      \"You come across a strange man in the middle of the path, he seems to be lost in thought.\",\n    choices: [\n      {\n        choice: \"Talk to him\",\n        resultType: \"money\",\n        resultNum: 20,\n        resultDialog: \"You've helped the man and received a reward.\",\n        resultDialogTitle: \"Thanks!\",\n      },\n      {\n        choice: \"Leave him alone\",\n        resultType: \"health\",\n        resultNum: -5,\n        resultDialog:\n          \"You've decided to leave the man alone, your kindness has decreased.\",\n        resultDialogTitle: \"Not so kind\",\n      },\n    ],\n  },\n  {\n    name: \"A strange potion\",\n    description:\n      \"You come across a strange potion in the middle of the path, it seems to be glowing.\",\n    choices: [\n      {\n        choice: \"Drink the potion\",\n        resultType: \"health\",\n        resultNum: 20,\n        resultDialog: \"You've drank the potion and your health has increased.\",\n        resultDialogTitle: \"Health boost!\",\n      },\n      {\n        choice: \"Leave the potion\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the potion, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A river crossing\",\n    description:\n      \"You come across a river that needs to be crossed, but the water is too deep.\",\n    choices: [\n      {\n        choice: \"Swim across the river\",\n        resultType: \"health\",\n        resultNum: 15,\n        resultDialog:\n          \"You've swam across the river and your health has increased.\",\n        resultDialogTitle: \"Health boost!\",\n      },\n      {\n        choice: \"Find another way\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to find another way, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A treasure map\",\n    description:\n      \"You come across a treasure map, it seems to be leading to a hidden treasure.\",\n    choices: [\n      {\n        choice: \"Follow the map\",\n        resultType: \"money\",\n        resultNum: 50,\n        resultDialog: \"You've found the treasure and received a reward.\",\n        resultDialogTitle: \"Thanks!\",\n      },\n      {\n        choice: \"Leave the map\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the map, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"Abandoned Research Facility\",\n    description:\n      \"You come across an abandoned research facility deep in the forest, it looks like it has been abandoned for quite some time.\",\n    choices: [\n      {\n        choice: \"Explore the facility\",\n        resultType: \"gold\",\n        resultNum: 100,\n        resultDialog:\n          \"You've found a lot of valuable resources and equipment in the facility. You also found some notes that hint at the creatures you've been encountering being the result of some kind of genetic experimentation. You take the notes with you and continue your journey.\",\n        resultDialogTitle: \"Great find!\",\n      },\n      {\n        choice: \"Leave the facility\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the facility, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"Encounter with a mutant creature\",\n    description:\n      \"You come across a creature that seems to be a twisted mix of different animals, it looks aggressive and ready to attack.\",\n    choices: [\n      {\n        choice: \"Fight the creature\",\n        resultType: \"gold\",\n        resultNum: 50,\n        resultDialog:\n          \"You've fought and defeated the creature, it seems to be another example of the genetic experimentation you've been hearing about. You take some valuable resources from the creature and continue your journey.\",\n        resultDialogTitle: \"Victory!\",\n      },\n      {\n        choice: \"Run away\",\n        resultType: \"health\",\n        resultNum: -10,\n        resultDialog:\n          \"You've decided to run away from the creature, but it managed to wound you as you fled. You need to rest and recover before continuing your journey.\",\n        resultDialogTitle: \"Wounded\",\n      },\n    ],\n  },\n  {\n    name: \"A friendly tribe\",\n    description:\n      \"You come across a tribe of friendly creatures that have taken in some of the mutated creatures as their own.\",\n    choices: [\n      {\n        choice: \"Join the tribe\",\n        resultType: \"health\",\n        resultNum: 20,\n        resultDialog:\n          \"You've decided to join the tribe and rest for a while. The tribe's healers have taken care of your wounds and you've learned a lot about the creatures and the experimentation from the tribe members. You say your goodbyes and continue your journey with newfound knowledge.\",\n        resultDialogTitle: \"Rest and recovery\",\n      },\n      {\n        choice: \"Leave the tribe\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the tribe, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A hidden laboratory\",\n    description:\n      \"You come across a hidden laboratory deep in the forest, it looks like it is still in operation.\",\n    choices: [\n      {\n        choice: \"Investigate the laboratory\",\n        resultType: \"gold\",\n        resultNum: 150,\n        resultDialog:\n          \"You've found the source of the genetic experimentation, the laboratory is still in operation and you've found a lot of valuable resources and information. You also found some evidence of who is behind the experimentation, you take what you can and destroy the rest of the laboratory. You continue your journey with a heavy heart and a newfound determination to put an end to the experimentation.\",\n        resultDialogTitle: \"Great find!\",\n      },\n      {\n        choice: \"Leave the laboratory\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the laboratory, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A village under attack\",\n    description:\n      \"You come across a village that is under attack by mutated creatures.\",\n    choices: [\n      {\n        choice: \"Fight alongside the villagers\",\n        resultType: \"gold\",\n        resultNum: 75,\n        resultDialog:\n          \"You've helped the villagers fend off the attack, they are grateful and reward you with valuable resources. You also learn more about the experimentation and who may be behind it. You continue your journey with a newfound determination to put an end to the experimentation and protect innocent lives.\",\n        resultDialogTitle: \"Victory!\",\n      },\n      {\n        choice: \"Leave the village\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the village, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A hidden cave\",\n    description:\n      \"You come across a hidden cave in the mountains, it looks like it has not been explored in a long time.\",\n    choices: [\n      {\n        choice: \"Explore the cave\",\n        resultType: \"gold\",\n        resultNum: 100,\n        resultDialog:\n          \"You've explored the cave and found a lot of valuable resources and ancient artifacts. You also discovered some ancient texts that contain information about the creatures and the experimentation. You take the texts with you and continue your journey.\",\n        resultDialogTitle: \"Great find!\",\n      },\n      {\n        choice: \"Leave the cave\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the cave, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A healing spring\",\n    description:\n      \"You come across a healing spring deep in the forest, the water is said to have healing properties.\",\n    choices: [\n      {\n        choice: \"Drink from the spring\",\n        resultType: \"health\",\n        resultNum: 30,\n        resultDialog:\n          \"You've drank the water from the spring and your health has been restored. The water also seems to have a cleansing effect, you feel like you've been rid of some negative energy. You continue your journey feeling refreshed and renewed.\",\n        resultDialogTitle: \"Healed!\",\n      },\n      {\n        choice: \"Leave the spring\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the spring, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n  {\n    name: \"A strange statue\",\n    description:\n      \"You come across a strange statue deep in the forest, it looks like it has been there for a very long time.\",\n    choices: [\n      {\n        choice: \"Examine the statue\",\n        resultType: \"gold\",\n        resultNum: 50,\n        resultDialog:\n          \"You've examined the statue and found a hidden compartment containing valuable resources. The statue also seems to be connected to the creatures and the experimentation in some way, you take note of it and continue your journey.\",\n        resultDialogTitle: \"Great find!\",\n      },\n      {\n        choice: \"Leave the statue\",\n        resultType: \"exit\",\n        resultNum: 0,\n        resultDialog: \"You've decided to leave the statue, maybe next time\",\n        resultDialogTitle: \"Maybe next time\",\n      },\n    ],\n  },\n]\n","import React from \"react\"\nimport { eventChoiceAction } from \"../../actions\"\nimport { possibleEvents } from \"../../consts/allEvents\"\n\nconst Event = ({ dispatch }) => {\n  const executeChoice = (choice) => {\n    dispatch(eventChoiceAction(choice))\n    //pass in the full object of the choice. it should have the result information, and the reducer should send\n    // the user to the trans scene with enough info to have the trans go to the next scene\n  }\n\n  const chosenEvent = Math.floor(Math.random() * possibleEvents.length)\n  const ourEvent = possibleEvents[chosenEvent]\n  return (\n    <div>\n      <img src=\"/eventImages/questionMark.png\" alt=\"Question Mark\" />\n      <h5>Event Name: {ourEvent.name} </h5>\n      <div>{ourEvent.description}</div>\n      <br />\n      {ourEvent.choices.map((choiceOBJ) => {\n        return (\n          <button onClick={() => executeChoice(choiceOBJ)}>\n            {choiceOBJ.choice}\n          </button>\n        )\n      })}\n      <br />\n      <br />\n    </div>\n  )\n}\n\nexport default Event\n","//choose between 3 in the beginning to be added to your deck\n//packs can have variable rarity of cards that are better, like loot in diablo\nimport {\n  buildupCards,\n  ddamageCards,\n  poisonCards,\n  sleepCards,\n  stunCards,\n  shopCards,\n  rewardCards,\n} from \"./allCards\"\n\nexport const poisonPackBasic = {\n  title: \"Poison\",\n  desc: `These attacks will Poison the enemy for the amount it says. \n  Poison stacks with each one used.`,\n  buttonText: \"Professor, inject me\",\n  img: \"/packImages/Poison.png\",\n  id: 1,\n  pack: [\n    poisonCards.ToxicGas,\n    poisonCards.AcidSpray,\n    poisonCards.ToxicSpores,\n    poisonCards.PoisonousTouch,\n    poisonCards.ToxicOoze,\n    poisonCards.PoisonCloud,\n  ],\n}\n\nexport const doubledamagePackBasic = {\n  title: \"DoubleDamage\",\n  desc: `These attacks will apply a buff that doubles your damage \n  for the full turn`,\n  buttonText: \"Lets get buff!\",\n  img: \"/packImages/DoubleDamage.png\",\n  id: 2,\n  pack: [\n    ddamageCards.focus,\n    ddamageCards.focus,\n    ddamageCards.focus,\n    ddamageCards.focusPunch,\n    ddamageCards.focusPunch,\n    ddamageCards.focusPunch,\n  ],\n}\n\n//Nerf slightly\nexport const stunPackBasic = {\n  title: \"Stun\",\n  desc: `Stun will disable an enemy from attacking for coming attack`,\n  buttonText: \"Show me how you stunned them\",\n  img: \"/packImages/Stun.png\",\n  id: 3,\n  pack: [\n    stunCards.throwFist,\n    stunCards.throwFist,\n    stunCards.throwFist,\n    stunCards.throwFistPlus,\n    stunCards.throwFistPlus,\n    stunCards.throwFistPlus,\n  ],\n}\n\n//nerf\nexport const sleepPackBasic = {\n  title: \"Sleep\",\n  desc: `Puts enemies to sleep, disabling them from attacking.\n   They chance to wake up at the end of the turn`,\n  buttonText: \"Teach me hypnosis\",\n  img: \"/packImages/Sleep.png\",\n  id: 4,\n  pack: [\n    sleepCards.hypnosis,\n    sleepCards.hypnosis,\n    sleepCards.hypnosis,\n    sleepCards.hypnosis,\n    sleepCards.hypnosisPlus,\n    sleepCards.hypnosisPlus,\n  ],\n}\n\nexport const buildupPackBasic = {\n  title: \"BuildUp\",\n  desc: `Each time you play a card, your BuildUp card's damage increases permanently if it is in your hand.`,\n  buttonText: \"I want to grow\",\n  img: \"/packImages/Buildup.png\",\n  id: 4,\n  pack: [\n    buildupCards.channel,\n    buildupCards.channel,\n    buildupCards.channel,\n    buildupCards.channel,\n    buildupCards.channelPlus,\n    buildupCards.channelPlus,\n  ],\n}\n\nexport const rewardPack = [\n  rewardCards.flameToss,\n  rewardCards.fireBreath,\n  rewardCards.broil,\n  rewardCards.waterMissile,\n  rewardCards.aquaBlast,\n  rewardCards.drippingWet,\n  rewardCards.grassBlade,\n  rewardCards.pelletGun,\n  rewardCards.swarm,\n  rewardCards.shadowDrop,\n  rewardCards.electricSymphony,\n  rewardCards.backstab,\n  rewardCards.hypnoticDistress,\n  rewardCards.blackOoze,\n  rewardCards.overload,\n  rewardCards.stunningDelivery,\n]\n\nexport const shopPack = [\n  shopCards.AcidRain,\n  shopCards.DreamCatcher,\n  shopCards.ElectricBolt,\n  shopCards.ElectroPunch,\n  shopCards.ForcefulBlow,\n  shopCards.HypnoWave,\n  shopCards.NoxiousBite,\n  shopCards.PoisonousClaw,\n  shopCards.PoisonousMist,\n  shopCards.PowerPunch,\n  shopCards.PowerSurge,\n  shopCards.PsychicBlast,\n  shopCards.Shockwave,\n  shopCards.StrongHit,\n  shopCards.ThunderFist,\n  shopCards.ToxicFog,\n  shopCards.VenomousFang\n]\n\nexport const allBasicPacks = [\n  poisonPackBasic,\n  doubledamagePackBasic,\n  stunPackBasic,\n  sleepPackBasic,\n  buildupPackBasic,\n]\n// export const startingPack = []\n","// import { uniqueId } from \"../utils/reducer-utils\"\nimport { shopPack } from \"./packs\"\n\nexport const allShopItems = shopPack\n","import React from \"react\"\nimport { motion } from \"framer-motion/dist/framer-motion\"\nimport { EFFECTS } from \"../../effects\"\n\nconst Card = ({ cardValue, useCard, isBattle, isOnSale }) => {\n  const { STUN, DRAW, SLEEP, POISON, DOUBLEDAMAGE, BUILDUP } = EFFECTS\n  const { type, name, num, cost, effect, effectChance, qty, id } = cardValue\n\n  const styles = {\n    cardStyle: {\n      backgroundColor: \"#f0feff\",\n      color: \"blue\",\n      display: \"inline\",\n      border: \"2px solid silver\",\n      borderRadius: \"10px\",\n      padding: \"7px\",\n      margin: \"3px\",\n      fontFamily: \"Silkscreen\",\n    },\n    fontStyle: {\n      fontFamily: \"Silkscreen\",\n      // Fonts: add Koulen, Press Start 2P, Squada One?\n      // fontFamily: 'Silkscreen', cursive,\n    },\n    newCardStyle: {\n      fontFamily: \"Silkscreen\",\n      backgroundColor: \"green\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      backgroundImage: \"url(/backgrounds/gridBGlightGreen.png)\",\n      backgroundRepeat: \"repeat\",\n      backgroundSize: \"1000px\",\n      width: \"150px\",\n      height: \"200px\",\n      padding: \"2px\",\n      cursor: \"pointer\",\n    },\n  }\n\n  let effectString = \"\"\n\n  switch (effect) {\n    case STUN:\n      effectString = `${effectChance? `${effectChance*100}% chance` :\"\"} Stuns for 1 turn`\n      break\n    case DRAW:\n      effectString = `Draws ${qty} cards`\n      break\n    case SLEEP:\n      effectString = `Puts to Sleep`\n      break\n    case POISON:\n      effectString = `Applies ${qty} Poison`\n      break\n    case DOUBLEDAMAGE:\n      effectString = `DoubleDamage`\n      break\n    case BUILDUP:\n      // effectString = `${qty} BuildUp bonus. +2 dmg each`\n      effectString = `BuildUp: ${qty}*2 bonus dmg`\n      break\n    default:\n      effectString = ``\n    // console.log(`\"Card\" effectString default case`)\n  }\n\n  const energyEmoji = \"🧪\"\n  return (\n    <>\n      <div style={{ display: \"flex\" }}>\n        {/* <AnimatePresence> */}\n          <motion.button\n            // exit={{ x: -300, opacity: 0 }}\n            exit={{ y: -500 }}\n            key={id}\n            whileHover={{\n              scale: 2.0,\n              transition: { type: \"spring\", duration: 1.5, bounce: 0.6 },\n            }}\n            //Uncomment for the tap turning\n            // whileTap={{\n            //   scale: 0.2,\n            //   rotate: -90,\n            // }}\n            // style={styles.cardStyle}\n            style={{\n              ...styles.newCardStyle,\n              border: `2px solid ${\n                type === \"Poison\"\n                  ? \"#99ff99\"\n                  : type === \"Electric\"\n                  ? \"yellow\"\n                  : type === \"Technical\"\n                  ? \"blue\"\n                  : type === \"Physical\"\n                  ? \"white\"\n                  : type === \"Psychic\"\n                  ? \"purple\"\n                  : \"silver\"\n              }`,\n            }}\n            onClick={() => useCard(cardValue)}\n          >\n            <div style={{ display: \"flex\", flex: \"1\" }}>\n              {`${name} ${energyEmoji.repeat(cost)}`}\n            </div>\n            <div style={{ display: \"flex\", flex: \"1\" }}>\n              <h5 style={{ color: \"gray\" }}>{`(${type})`}</h5>\n            </div>\n            <div style={{ color: \"gray\", display: \"flex\", flex: \"1\" }}>\n              {num <= 0 ? \" \" : `Deals ${num} damage`}\n            </div>\n            <span style={{ display: \"flex\", flex: \"1\" }}>\n              <div style={{ color: \"brown\" }}>\n                {\" \"}\n                {effectString}\n                {/* {effect ? `Causes ${qty ? qty : \"\"} ${effect}` : ``}{\" \"} */}\n              </div>\n              {/* TODO Add on sale stuff like this: {cardValue.price && isOnSale ? <div>price: {cardValue.price}</div> : <></>} */}\n              {cardValue.price && isBattle !== true ? (\n                <div>price: {cardValue.price}</div>\n              ) : (\n                <></>\n              )}\n            </span>\n          </motion.button>\n        {/* </AnimatePresence> */}\n      </div>\n    </>\n  )\n}\n\nexport default Card\n","import React from \"react\"\n// import { sampleItems } from \"../../consts/consts\";\nimport { allShopItems } from \"../../consts/allShopItems\"\nimport { shuffle } from \"../../utils/reducer-utils\"\nimport Card from \"../common/Card\"\nimport ThemedButton from \"../common/ThemedButton\"\nimport { buyCardAction, setSceneAction } from \"../../actions\"\n\nconst Shop = ({ gameData, dispatch }) => {\n  const shuffledCards = shuffle(allShopItems)\n  const itemSelection = shuffledCards.slice(0, 4)\n  // const {itemSelection, setItemSelection} = useState(shuffledCards.slice(0,4))\n  // TODO: change buyCardAction to get rid of the card after adding to deck, and not change scenes\n  const buyCard = (card) => {\n    console.log(`adding this card:`, card)\n    dispatch(buyCardAction(card))\n  }\n  const loadNextLevel = () => {\n    console.log(`loadNextLevel`)\n    dispatch(setSceneAction())\n  }\n\n  return (\n    <div>\n      <div className=\"battleStats\">\n        <p>\n          {`${gameData.gold}`}\n          <span style={{ color: \"#e6ecc3\" }}>Gold</span>\n          <span style={{ color: \"#e6ecc3\" }}> Level</span>\n          {gameData.curScene.lvl}\n          {\" -\"}\n          <span style={{ color: \"#e6ecc3\" }}>ACT</span>\n          {gameData.curScene.act}-\n        </p>\n      </div>\n\n      <h1>Welcome to the Shop</h1>\n      <br />\n      <h3>Its dangerous to go alone, give me money</h3>\n      <div>\n        Items for sale (Just attacks for now. I'm too busy for this), also you\n        can only buy 1 right now :P\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {itemSelection.map((card) => {\n          return <Card key={card.id} cardValue={card} useCard={buyCard} />\n        })}\n      </div>\n      <ThemedButton text={`Leave without buying something`} onClick={loadNextLevel} />\n      {/* <button onClick={loadNextLevel}>Leave without buying something</button> */}\n    </div>\n  )\n}\n\nexport default Shop\n","import React from \"react\"\nimport { ACTIONS } from \"../../actions\"\nimport { setSceneAction } from \"../../actions\"\n\nconst Rest = ({ gameData, dispatch }) => {\n  const loadNextLevel = () => {\n    console.log(`loadNextLevel`)\n    dispatch(setSceneAction())\n  }\n\n  const healToFullHealth = () => {\n    dispatch({\n      type: ACTIONS.SELECT_REST,\n    })\n  }\n  return (\n    <>\n      <img src=\"/eventImages/campfirePXL.png\" alt=\"Campfire with people\" />\n      <h1>Rest</h1>\n      <h3>Stay a while, and listen</h3>\n      <div>As you come upon a campfire, you feel calm.</div>\n      <div>A wise old scholar greets you.</div>\n      <div>\n        You realize the old man will keep watch and alarm you if there is any\n        danger\n      </div>\n      <div>( current health is {gameData.hero.health}/100 )</div>\n      <button\n        onClick={() => {\n          healToFullHealth()\n        }}\n      >\n        Heal\n      </button>\n      <br />\n      <br />\n      <button onClick={loadNextLevel}>Next Level</button>\n    </>\n  )\n}\n\nexport default Rest\n","import React, { useState } from 'react'\nimport { testPals } from '../../consts/pals/pals'\nimport { Luminowl, Glowbuggle, Umbrabunny } from '../../consts/pals/pals'\nimport { addMonsterToParty } from '../../handlers/partyHandlers_new'\nimport { ACTIONS, useDispatchContext, useStateContext } from '../../MainContext'\nimport {\n  SCENES,\n  updateLevel,\n  updateScene,\n} from '../../handlers/sceneHandlers_new'\nimport { generateEnemyParty } from '../../handlers/Battle/prepareBattle'\nimport { hikerBrak } from '../../consts/party/trainers'\n\nconst ChibipalsSelection = () => {\n  const [selectedMonster, setSelectedMonster] = useState(null)\n  const [showDetails, setShowDetails] = useState(false)\n\n  const monsters = [Luminowl, Glowbuggle, Umbrabunny]\n\n  const handleMonsterClick = (monster) => {\n    setSelectedMonster(monster)\n    setShowDetails(true)\n  }\n\n  const handleGoBack = () => {\n    setShowDetails(false)\n  }\n\n  const popupStyle = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    background: 'green',\n    padding: '5px',\n    boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.5)',\n    zIndex: 1000,\n    color: 'white',\n    textAlign: 'center',\n  }\n\n  const monsterListStyle = {\n    display: 'flex',\n    justifyContent: 'center',\n  }\n\n  const placeholderImageStyle = {\n    backgroundColor: 'green',\n    borderRadius: '50%',\n    width: '100%',\n    paddingTop: '100%',\n  }\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  const mapLevels = contextualState.game.map[0]\n\n  const handleSelect = (selectedMonster) => {\n    console.log(\n      `you selected monster: ${selectedMonster.name}`,\n      selectedMonster,\n    )\n    // #TODO: This is the code that breaks things but I need to make it work:\n    setShowDetails(false)\n    // this is just the party obj, not the full state\n    const partyWithMonsterAdded = addMonsterToParty(\n      selectedMonster,\n      contextualState.userParty,\n    )\n    const stateWithParty = {\n      ...contextualState,\n      userParty: partyWithMonsterAdded,\n    }\n    const nextSceneState = updateScene(stateWithParty, {\n      screen: SCENES.MAP,\n      details: null,\n    })\n    const nextLevelState = updateLevel(nextSceneState, 0)\n\n    //\n    // Define a function to log colored messages\n    const logWithColor = (message, color) => {\n      console.log(`%c${message}`, `color: ${color}; font-weight: bold;`)\n    }\n\n    // Clone the current state into a new variable\n    const newState = { ...nextLevelState }\n    console.log(`[!!!]newState`, newState)\n\n    // Dispatch the updated state\n    contextualDispatch({\n      type: ACTIONS.UPDATEGAMEDATA,\n      payload: newState,\n    })\n  }\n\n  return (\n    <div>\n      <h1 style={{ color: 'white' }}>Choose Your Chibipal</h1>\n      <div className=\"monster-list\" style={monsterListStyle}>\n        {monsters.map((monster) => (\n          <div\n            key={monster.id}\n            className={`monster ${\n              selectedMonster === monster ? 'selected' : ''\n            }`}\n            onClick={() => handleMonsterClick(monster)}\n            style={{ flex: '1', margin: '10px', cursor: 'pointer' }}\n          >\n            <div\n              style={placeholderImageStyle}\n              className={monster.image ? 'with-image' : 'without-image'}\n            >\n              {monster.image && (\n                <img\n                  src={monster.image}\n                  alt={monster.name}\n                  style={{ width: '100%', height: '100%', objectFit: 'cover' }}\n                  key={monster.id} // Added key prop\n                />\n              )}\n            </div>\n            <p style={{ color: 'white' }}>{monster.name}</p>\n          </div>\n        ))}\n      </div>\n\n      {showDetails && (\n        <div style={popupStyle}>\n          <div\n            className=\"popup-content\"\n            style={{ fontSize: '14px', margin: '10px' }}\n          >\n            <p style={{ fontSize: '16px', marginBottom: '4px' }}>\n              {selectedMonster.name}\n            </p>\n            <div style={{ display: 'flex' }}>\n              <img\n                src={selectedMonster.image}\n                alt={selectedMonster.name}\n                style={{\n                  width: '240px',\n                  height: '240px',\n                  objectFit: 'cover',\n                  paddingLeft: '5px',\n                  paddingRight: '5px',\n                }}\n              />{' '}\n              <div>\n                <div\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    marginRight: '10px',\n                  }}\n                >\n                  <div>\n                    <div\n                      style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                      }}\n                    >\n                      <span>Level:</span>\n                      <span>{selectedMonster.level}</span>\n                    </div>\n                    <div\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                      }}\n                    >\n                      <div\n                        style={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          marginBottom: '4px',\n                        }}\n                      ></div>\n                      <div\n                        style={{\n                          width: '100px',\n                          height: '10px',\n                          backgroundColor: 'lightgray',\n                          borderRadius: '5px',\n                          border: '1px solid lightgreen',\n                        }}\n                      >\n                        <div\n                          style={{\n                            width: `${\n                              (selectedMonster.stats.hp /\n                                selectedMonster.stats.max_hp) *\n                              100\n                            }%`,\n                            height: '100%',\n                            backgroundColor: 'darkgreen',\n                            borderRadius: '3px',\n                          }}\n                        ></div>\n                      </div>\n                      <div style={{ marginTop: '4px', fontSize: '12px' }}>\n                        {selectedMonster.stats.hp} /{' '}\n                        {selectedMonster.stats.max_hp\n                          ? selectedMonster.stats.max_hp\n                          : 'not found'}\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    style={{ display: 'flex', justifyContent: 'space-between' }}\n                  >\n                    <span>Atk:</span>\n                    <span>{selectedMonster.stats.attack.name}</span>\n                  </div>\n                  <div\n                    style={{ display: 'flex', justifyContent: 'space-between' }}\n                  >\n                    <span>Def:</span>\n                    <span>{selectedMonster.stats.defense}</span>\n                  </div>\n                  <div\n                    style={{ display: 'flex', justifyContent: 'space-between' }}\n                  >\n                    <span>Speed:</span>\n                    <span>{selectedMonster.stats.speed}</span>\n                  </div>\n                </div>\n                {selectedMonster.elemental_type}\n                {'-'}\n                {selectedMonster.creature_type} [\n                {selectedMonster.specialty_group}]\n              </div>{' '}\n            </div>\n            <div>\n              <span style={{ marginRight: '10px' }}>\n                Lvl: {selectedMonster.level}\n              </span>\n              <span style={{ marginRight: '10px' }}>\n                Exp: {selectedMonster.experience}\n              </span>\n              <span>Exp to Next Lvl: xxx</span>\n              <div\n                style={{\n                  width: '100%',\n                  backgroundColor: 'gray',\n                  height: '10px',\n                  borderRadius: '2px',\n                  border: '1px solid lightgreen',\n                }}\n              >\n                <div\n                  style={{\n                    width: `${30}%`,\n                    backgroundColor: 'darkgreen',\n                    height: '100%',\n                    borderRadius: '2px',\n                  }}\n                ></div>\n              </div>\n            </div>\n\n            <div>\n              <p style={{ padding: '10px' }}>\n                <span>{selectedMonster.description}</span>\n              </p>\n            </div>\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                textAlign: 'left',\n                gap: '4px',\n              }}\n            >\n              <div>Moves: </div>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'flex-start',\n                  flexWrap: 'wrap',\n                  gap: `2px`,\n                }}\n              >\n                {selectedMonster.moves.map((move, index) => (\n                  <div style={{ padding: '1px' }}>\n                    <span\n                      key={index}\n                      style={{\n                        backgroundColor: 'lightgreen',\n                        borderRadius: '4px',\n                        padding: '3px',\n                        color: 'darkgreen',\n                      }}\n                    >\n                      {move.name}\n                    </span>\n                  </div>\n                ))}\n              </div>\n              <div>\n                <div>Possible Moves:</div>\n                <span>\n                  <div\n                    style={{ color: 'lightGray', gap: '2px', display: 'flex' }}\n                  >\n                    {selectedMonster.possible_moves.map((move, index) => (\n                      <div\n                        key={index}\n                        style={{\n                          display: 'flex',\n                          alignItems: 'center',\n                          // marginBottom: \"4px\",\n                          backgroundColor: 'black',\n                          borderRadius: '8%',\n                          padding: '2px',\n                        }}\n                      >\n                        <div\n                          style={{\n                            backgroundColor: 'gray',\n                            borderRadius: '50%',\n                            width: '7px', // Adjust the width and height as needed\n                            height: '7px',\n                            marginRight: '2px',\n                            // padding: \"3px\",\n                          }}\n                        ></div>\n                        <span>{move}</span>\n                      </div>\n                    ))}\n                  </div>\n                </span>\n              </div>\n              <span>\n                <div>Passive:</div>\n                <span\n                  style={{\n                    backgroundColor: 'lightgreen',\n                    borderRadius: '4px',\n                    padding: '1px',\n                    color: 'green',\n                  }}\n                >\n                  {selectedMonster.passive_ability}\n                </span>\n              </span>\n            </div>\n            <div style={{ padding: '4px' }}>\n              <button onClick={() => handleSelect(selectedMonster)}>\n                Select\n              </button>\n              <button onClick={handleGoBack}>Go Back</button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ChibipalsSelection\n","// Function to add a monster to the party\nexport const addMonsterToParty = (monster, userParty, slot) => {\n  // If slot is not specified, find the next available slot\n  if (!slot) {\n    for (const [partySlot, partyMonster] of Object.entries(userParty)) {\n      if (partyMonster === null) {\n        // Add the monster to the first available slot\n        userParty[partySlot] = monster;\n        console.log(`Added ${monster.name} to party slot ${partySlot}.`);\n        // Update the state or perform any necessary actions\n        // For React, you would typically use setState or a state management library like Redux here\n        return userParty;\n\n        \n        // return;\n         // Exit the loop once a slot is found\n      }\n    }\n\n    // Handle the case where all slots are occupied\n    console.error(\"All party slots are occupied.\");\n    // You can display an error message to the user or take other actions as needed\n  } else {\n    // Check if the slot is valid and not already occupied\n    if (userParty[slot] === null) {\n      // Add the monster to the specified slot\n      userParty[slot] = monster;\n\n      return userParty;\n      // Update the state or perform any necessary actions\n      // For React, you would typically use setState or a state management library like Redux here\n    } else {\n      // Handle the case where the slot is already occupied\n      console.error(`Slot ${slot} is already occupied.`);\n      // You can display an error message to the user or take other actions as needed\n    }\n  }\n};\n","import React from \"react\"\nimport Card from \"../common/Card\"\nimport { addCardAction } from \"../../actions\"\nimport { motion } from \"framer-motion/dist/framer-motion\"\nimport ChibipalsSelection from \"../reward/ChibipalsSelection\"\n\nconst Reward = () => {\n  return (\n    <div>\n      reward page:\n      <ChibipalsSelection />\n    </div>\n  )\n}\n\n// const Reward = ({ gameData, dispatch }) => {\n//   const currentRewards = gameData.availableRewards\n\n//   const addCard = (card) => {\n//     console.log(`adding this card:`, card)\n//     dispatch(addCardAction(card))\n//   }\n//   console.log(`gameData from Rewards`, gameData)\n\n//   return (\n//     <div>\n//       <br />\n//       <h1>A Reward!</h1>\n//       <br />\n//       <h3>\n//         Thank you for vanquishing those foes. You have {gameData.deck.length}{\" \"}\n//         cards.\n//       </h3>\n//       <h4>Please take something, its on us</h4>\n\n//       <motion.div\n//         initial={{ opacity: 0.5 }}\n//         animate={{ opacity: 1 }}\n//         transition={{ delay: 0.1, duration: 3 }}\n//         style={{\n//           display: \"flex\",\n//           flexDirection: \"row\",\n//           justifyContent: \"center\",\n//           alignItems: \"center\",\n//         }}\n//       >\n//         {currentRewards.map((card) => {\n//           return <Card key={card.id} cardValue={card} useCard={addCard} />\n//         })}\n//       </motion.div>\n//       <br />\n//     </div>\n//   )\n// }\n\nexport default Reward\n","import { shuffle } from \"./reducer-utils\";\n\nexport const generateRewardPackSelection = (packPool, seed, qty) => {\n    const shuffledPackSelection = shuffle(packPool, seed)\n    const slicedPackSelection = shuffledPackSelection.slice(0, qty)\n    return slicedPackSelection\n}\n\n","import React from \"react\"\nimport { motion } from \"framer-motion/dist/framer-motion\"\nimport { setSceneAction, addPackAction } from \"../../actions\"\nimport \"./PackReward.css\"\nimport { allBasicPacks } from \"../../consts/packs\"\nimport { generateRewardPackSelection } from \"../../utils/reward-utils\"\n\nfunction PackReward({ gameData, dispatch }) {\n  const addPackAndProceedToNextLevel = (Pack) => {\n    console.log(`addin this Pack:`, Pack)\n    dispatch(addPackAction(Pack))\n    dispatch(setSceneAction())\n  }\n  const loadNextLevel = () => {\n    console.log(`loadNextLevel`)\n    dispatch(setSceneAction())\n  }\n\n  const packSelection = generateRewardPackSelection(\n    allBasicPacks,\n    Math.random(),\n    3\n  )\n  console.log(\"packSelection\", packSelection)\n  return (\n    <div className=\"pack-reward-container\">\n      <h1 className=\"pack-reward-title\">\n        Choose an infusion, you'll get a pack of cards:\n      </h1>\n      <div className=\"pack-reward-grid\">\n        {packSelection.map((packObj) => {\n          const { title, desc, buttonText, img, pack } = packObj\n          return (\n            <motion.button\n              className=\"pack-container\"\n              initial={{ opacity: 0.5 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.1, duration: 3 }}\n              whileHover={{\n                scale: 1.01,\n                // rotate: 0.2,\n                transition: {\n                  yoyo: Infinity,\n                },\n              }}\n              whileTap={{\n                scale: 0.2,\n                // rotate: -90,\n              }}\n              onClick={() => addPackAndProceedToNextLevel(pack)}\n            >\n              <div className=\"pack-card-heading\">\n                <div className=\"pack-title\">\n                  <strong>{title}</strong>\n                </div>\n                <img src={img} alt={`${title} pack`} className=\"pack-image\" />\n              </div>\n              <div className=\"pack-description\">{desc}</div>\n              <div className=\"pack-cards-amount\">\n                You'll get {pack.length} cards:{\" \"}\n              </div>\n              <ul className=\"pack-card-list\">\n                {pack.map((card) => {\n                  return <li>{card.name}</li>\n                })}\n              </ul>\n              {/* <button className=\"pack-select-button\" onClick={() => addPackAndProceedToNextLevel(pack)}>{buttonText}</button> */}\n              <div className=\"pack-select-button\">{buttonText}</div>\n            </motion.button>\n          )\n        })}\n      </div>\n      <button className=\"next-level-button\" onClick={loadNextLevel}>\n        I don't want anything\n      </button>\n    </div>\n  )\n}\n\nexport default PackReward\n","// import { basicConvos } from \"./convoCategories\"\nimport { howToPlay } from \"./tutorialConvos\"\n\nexport const firstMeeting = [\n  { actor: \"Jack\", text: \"Whoa, what is that thing?\", pos: \"left\" },\n  {\n    actor: \"Luna\",\n    text: \"I am Luna, a genetically modified dragon-wolf hybrid.\",\n    pos: \"right\",\n    actions: [\n      {\n        text: \"You're a what?\",\n        result: \"dialog\",\n        // reward: { amt: 60, type: \"gold\" },\n        resultLocation: howToPlay\n      },\n      {\n        text: \"push him over\",\n      },\n    ],\n  },\n  { actor: \"Jack\", text: \"Cool, can we be friends?\", pos: \"left\" },\n  {\n    actor: \"Luna\",\n    text: \"I would be honored to accompany you on your adventures.\",\n    pos: \"right\",\n  },\n  {\n    actor: \"Jack\",\n    text: \"That's great to hear! So, what kind of adventures have you been on?\",\n    pos: \"left\",\n  },\n  {\n    actor: \"Luna\",\n    text: \"I've traveled through many forests, climbed mountains, and even explored some ancient ruins.\",\n    pos: \"right\",\n  },\n  {\n    actor: \"Jack\",\n    text: \"Wow, you've been on some amazing adventures! I'm a bit of an adventurer myself.\",\n    pos: \"left\",\n  },\n  {\n    actor: \"Luna\",\n    text: \"It sounds like we would make great companions on our future journeys together.\",\n    pos: \"right\",\n  },\n  {\n    actor: \"Jack\",\n    text: \"I couldn't agree more! So, what do you think our next adventure should be?\",\n    pos: \"left\",\n  },\n  {\n    actor: \"Luna\",\n    text: \"How about we explore a mysterious jungle rumored to be filled with hidden treasures?\",\n    pos: \"right\",\n  },\n  {\n    actor: \"Jack\",\n    text: \"Sounds like a great idea! Let's go on our next adventure together!\",\n    pos: \"left\",\n  },\n]\n\nexport const testConvo = [\n  {\n    actor: \"ADAM\",\n    text: \"I'm surprised you're okay\",\n    pos: \"left\",\n    actions: [\n      {\n        text: \"How did you first meet?\",\n        result: \"dialog\",\n        resultLocation: firstMeeting\n        // resultLocation: convoHelper.basic.firstMeeting,\n      },\n      {\n        text: \"push him over\",\n      },\n    ],\n  },\n  { actor: \"ADAM\", text: \"This is definitely a test\", pos: \"left\" },\n  { actor: \"LISA\", text: \"That can't be right\", pos: \"right\" },\n  { actor: \"ADAM\", text: \"I'm telling you, its true\", pos: \"left\" },\n  { actor: \"LISA\", text: \"I don't see why\", pos: \"middle\" },\n  {\n    actor: \"ADAM\",\n    text: \"I'll say it again, this is a little odd to not be a test\",\n    pos: \"left\",\n  },\n]\n\n// separate files for fanning out dialog trees\n// export const secondMeeting = []\n// export const eventConvos = {}\n// export const rewardConvos = {}\n\n","export const howToPlay = [\n    { actor: \"ADAM\", text: \"We should teach 'em something\", pos: \"left\" },\n    { actor: \"LISA\", text: \"fiiine, but he seems to be doing well on his own\", pos: \"right\" },\n    { actor: \"ADAM\", text: \"He needs to understand how these battles\", pos: \"left\" },\n    { actor: \"LISA\", text: \"I don't see why\", pos: \"middle\" },\n]","import React from \"react\"\nimport \"./Convo.css\"\nimport Dialog from \"../common/Dialog\"\nimport ThemedButton from \"../common/ThemedButton\"\nimport { useState } from \"react\"\nimport { setSceneAction } from \"../../actions\"\nimport { testConvo } from \"../../convos/convos\"\n\nconst Convo = ({ gameData, dispatch, conversation }) => {\n  // Set the current conversation to state, then change line in state\n\n  const loadNextLevel = () => {\n    dispatch(setSceneAction())\n  }\n\n  const [line, setLine] = useState(0)\n\n  //   const testConvo = basicConvos.testConvo\n\n  const [convo, setConvo] = useState(testConvo)\n\n  const playNextText = () => {\n    if (line < convo.length - 1) {\n      setLine(line + 1)\n    } else {\n      setLine(0)\n      loadNextLevel()\n    }\n  }\n  console.log(\"THE CONVO: \", testConvo, line, testConvo[0].actions[0])\n\n  const executeChoice = (action) => {\n    switch (action.result) {\n      case \"reward\":\n        // dispatch(setMyData(action.reward))\n        break\n      case \"dialog\":\n        // setConvo(action.result)\n        console.log(\"choice actions:\", action)\n        setConvo(action.resultLocation)\n        break\n      case \"extend\":\n        // setConvo(...convo.splice(WHATEVERGOESHERE action.result))\n        break\n      default:\n        console.log(`executeChoice on dialog: default case reached`)\n    }\n  }\n\n  return (\n    <div className=\"convo-scene\">\n      <div className=\"convo-container\">\n        <div\n          className={`convo-img-container convo-img-container-${convo[line].pos}`}\n        >\n          <img\n            className=\"convo-img\"\n            src={`/actors/${convo[line].actor}.png`}\n            alt={`${convo[line].actor} Avatar`}\n          />\n        </div>\n        <div\n          className={`convo-dialog-container convo-dialog-container-${convo[line].pos}`}\n        >\n          <div className=\"convo-dialog\">\n            <h1>{convo[line].actor}</h1>\n            <div className=\"dialog-text\">\n              <Dialog\n                size=\"30\"\n                myText={convo[line].text}\n                key={convo[line].text}\n              />\n            </div>\n            <div className=\"convo-actions\">\n              <div className=\"action-buttons\">\n                {convo[line].actions\n                  ? convo[line].actions.map((action) => {\n                      return (\n                        <ThemedButton\n                          text={action.text}\n                          onClick={() => executeChoice(action)}\n                        />\n                      )\n                    })\n                  : null}\n              </div>\n              <ThemedButton\n                className=\"convo-next-btn\"\n                text={`->`}\n                onClick={playNextText}\n              />\n            </div>\n          </div>\n          {/* <div className=\"convo-dialog\">\n            <h1>{convo[line].actor}</h1>\n            <Dialog\n              size=\"30\"\n              myText={convo[line].text}\n              key={convo[line].text}\n            />\n            {convo[line].actions\n              ? convo[line].actions.map((action) => {\n                  return (\n                    <ThemedButton\n                      text={action.text}\n                      onClick={() => executeChoice(action)}\n                    />\n                  )\n                })\n              : null}\n            <ThemedButton text={`->`} onClick={playNextText} />\n          </div> */}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Convo\n","import React from 'react'\n\nconst attackContainerStyle = {\n  border: '1px solid #a5e54d',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  padding: '12px',\n  margin: '8px 0',\n  backgroundColor: '#fff',\n}\n\nconst attackInfoStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '8px',\n}\n\nconst attackNameStyle = {\n  fontWeight: 'bold',\n}\nconst attackDamageStyle = {\n  flex: 1,\n  textAlign: 'right',\n}\n\nconst monsterNameStyle = {\n  fontWeight: 'bold',\n}\n\nconst monsterAbilitiesStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  marginLeft: '34px', // To align with the monster icon\n}\n\nfunction Monster({ name, abilities }) {\n  const monsterIcon = (\n    <div\n      style={{\n        backgroundColor: 'green',\n        width: '24px',\n        height: '24px',\n        marginRight: '10px',\n      }}\n    />\n  )\n\n  // Check if abilities is an array\n  if (Array.isArray(abilities)) {\n    return (\n      <div style={{ ...attackContainerStyle, backgroundColor: '#5a7d2a' }}>\n        <div style={attackInfoStyle}>\n          {monsterIcon}\n          <div style={monsterNameStyle}>{name}</div>\n        </div>\n        <div style={monsterAbilitiesStyle}>\n          {abilities.map((ability, index) => (\n            <div key={index}>{ability}</div>\n          ))}\n        </div>\n      </div>\n    )\n  } else {\n    console.error(`Invalid abilities prop for ${name}:`, abilities)\n    return null\n  }\n}\n\nexport default Monster\n","// export const EmotionDrain = {\n//   name: 'Emotion Drain',\n//   type: 'dark',\n//   damage: 40,\n//   speed: 12,\n//   fuel: 5,\n//   effect: {\n//     description: 'Drain the opponents emotions to weaken them',\n//     chance: '20%',\n//     result: 'debuff',\n//   },\n//   priority: 'medium',\n//   targets: ['opponent'],\n//   // \"NotSoFast\" aspect:\n//   notSoFast: {\n//     name: 'Resilient Spirit',\n//     type: 'buff',\n//     effect: {\n//       description: 'Enhance your emotional resilience to resist debuffs',\n//       duration: '1 turn',\n//       debuff_resist: 100, // Provides immunity to debuffs for 1 turn\n//     },\n//   },\n//   // \"Forceful\" aspect:\n//   forceful: {\n//     name: 'Soul Siphon',\n//     type: 'dark',\n//     damage: 60,\n//     speed: 14,\n//     fuel: 7,\n//     effect: {\n//       description: 'Drain the opponents soul, guaranteeing debuffs',\n//       chance: '100%',\n//       result: 'debuff',\n//     },\n//     targets: ['opponent'],\n//   },\n// }\n\nimport { ACTIONS } from '../MainContext'\nimport { Party, opponent } from '../consts/party/parties'\nimport { cusLog } from '../utils/debugging-utils'\n// import { customLog } from '../utils/debugging-utils'\nexport const ATK_PHASES = {\n  PAY: 'pay',\n  CALCULATE_DAMAGE: 'calcDamage',\n  RESOLVE_EFFECT: 'effect',\n  APPLY_STATUSES: 'apply',\n  APPLY_DAMAGE: 'damage',\n  END: 'end',\n}\n\nexport const createPopupRemovedState = (prevState) => {\n  return {\n    ...prevState,\n    dialog: {\n      ...prevState.dialog,\n      isOpen: false,\n    },\n  }\n}\nexport const createPopupVisibleState = (prevState) => {\n  return {\n    ...prevState,\n    dialog: {\n      ...prevState.dialog,\n      isOpen: true,\n    },\n  }\n}\n\n//also check if dead along the way :P\n\nexport const executeMove = (\n  move,\n  contextualState,\n  contextualDispatch,\n  user, // maybe change to add the other aspects, destructure after\n  phase,\n  // ---\n  // player: AI , you, them\n  // target/s: AI, you, them\n) => {\n  // user is the user\n  const targetMonster = contextualState.opponent.monsters[0].obj\n\n  // this is a function that gets called many times.\n  // at each point, we need do a phase and then\n  // present to the player a dialog to decide what to do next\n\n  // the dialog has everything needed to run the function yet again,\n  // this continues until the full attack resolves\n\n  // hmm, ATK_PHASES.PAY should match `phase`. Lets check that\n  // if (phase !== ATK_PHASES.PAY) {\n  //   cusLog(`Starting ${phase} phase`, 'info')\n  // } else {\n  //   cusLog(`Starting ${phase} phase, not pay phase`, 'pay')\n  // }\n\n  // this shows the difference between phase and ATK_PHASES.PAY\n\n  // TODO: Finish this function\n  switch (phase) {\n    case ATK_PHASES.PAY:\n      console.log(`Starting PAY phase`, 'pay')\n      // cusLog(`Starting PAY phase`, 'pay')\n      // 1. Pay cost. If you can't, return:\n      // Lets use player energy for this\n      const playerEnergy = contextualState.game.player.energy\n      // Add the type later, this is for another switch statement.\n      // They might have to pay health or gold or something else\n      // cosnt costType = move.cost.type\n\n      const moveCost = move.cost.energy\n      console.log(`cost is ${moveCost} energy. Player has ${playerEnergy}`)\n\n      if (playerEnergy < moveCost) {\n        console.log(\n          `${playerEnergy}<${moveCost} • Not enough energy to perform the move`,\n        )\n        // Dialogue: not enough energy\n        const dialogState = {\n          ...contextualState,\n          dialog: {\n            ...contextualState.dialog,\n            isOpen: true,\n            message: `Not enough energy. ${user.name} to perform the move`,\n            options: [\n              {\n                label: 'Oh dear',\n                onClick: () => {\n                  const closedPopupState =\n                    createPopupRemovedState(contextualState)\n                  console.log(closedPopupState)\n                  return contextualDispatch({\n                    payload: closedPopupState,\n                    type: ACTIONS.UPDATEGAMEDATA,\n                  })\n                },\n                backgroundColor: '#4b770e',\n                color: '#fff',\n              },\n            ],\n            title: 'Pay Phase',\n            header: 'Not enough energy to perform the move',\n          },\n        }\n        // return the original state\n        return contextualDispatch({\n          payload: dialogState,\n          type: ACTIONS.UPDATEGAMEDATA,\n        })\n      } else {\n        const playerEnergyAfterPayment = playerEnergy - moveCost\n        console.log(\n          `Enough to use :), ${playerEnergy}-${moveCost} = ${playerEnergyAfterPayment}`,\n        )\n        const energyPaidState = {\n          ...contextualState,\n          game: {\n            ...contextualState.game,\n            player: {\n              ...contextualState.game.player,\n              energy: playerEnergyAfterPayment,\n            },\n          },\n        }\n        console.log('Pay: energyPaidState, resulting state:', energyPaidState)\n\n        const costPaidDialogState = {\n          ...energyPaidState,\n          dialog: {\n            ...energyPaidState.dialog,\n            isOpen: true,\n            message: `${moveCost} Energy paid.\n            ${user.name} uses ${move.name}`,\n            options: [\n              {\n                label: 'Okay',\n                onClick: () => {\n                  //replace here with our function create\n                  // const closedPopupState = createRemovedState(whateverMakesSenseHere)\n                  // handle onClick logic here\n                  const closedPopupState = {\n                    ...energyPaidState,\n                    dialog: {\n                      ...energyPaidState.dialog,\n                      isOpen: false,\n                    },\n                  }\n                  executeMove(\n                    move,\n                    closedPopupState,\n                    contextualDispatch,\n                    user,\n                    ATK_PHASES.CALCULATE_DAMAGE, // phase,\n                  )\n                },\n                backgroundColor: '#4b770e',\n                color: '#fff',\n              },\n              {\n                label: 'Enhance',\n                onClick: () => {\n                  //replace here with our function create\n                  // const closedPopupState = createRemovedState(whateverMakesSenseHere)\n                  // handle onClick logic here\n                  const closedPopupState = {\n                    ...energyPaidState,\n                    dialog: {\n                      ...energyPaidState.dialog,\n                      isOpen: false,\n                    },\n                  }\n                  // -maybe just use the same executeMove\n                  // the button should change phase\n                  executeMove(\n                    move,\n                    closedPopupState,\n                    contextualDispatch,\n                    user,\n                    ATK_PHASES.CALCULATE_DAMAGE, // phase,\n                  )\n                },\n                backgroundColor: '#4b770e',\n                color: '#fff',\n              },\n              {\n                label: 'Enhance',\n                onClick: () => {\n                  //replace here with our function create\n                  // const closedPopupState = createRemovedState(whateverMakesSenseHere)\n                  // handle onClick logic here\n                  const closedPopupState = {\n                    ...energyPaidState,\n                    dialog: {\n                      ...energyPaidState.dialog,\n                      isOpen: false,\n                    },\n                  }\n                  // -maybe just use the same executeMove\n                  // the button should change phase\n                  executeMove(\n                    move, // move,\n                    // energyPaidState, // contextualState,\n                    closedPopupState,\n                    contextualDispatch, // contextualDispatch,\n                    user, // user,\n                    ATK_PHASES.CALCULATE_DAMAGE, // phase,\n                  )\n                },\n                backgroundColor: '#4b770e',\n                color: '#fff',\n              },\n            ],\n            title: 'Pay Phase',\n            header: 'You can pay!',\n          },\n          // Dialogue: Paid x energy\n        }\n        console.log('Pay: PAID, resulting state:', costPaidDialogState)\n        return contextualDispatch({\n          payload: costPaidDialogState,\n          type: ACTIONS.UPDATEGAMEDATA,\n        })\n      }\n\n      //dispatch( payload:  whatever to set the dialog with, rest of the obj\n      // type: ACTIONS.UPDATE SETDATA)\n\n      // Dialogue: ___ used ____ <-move\n      break\n    case ATK_PHASES.CALCULATE_DAMAGE:\n      console.log(`ATK: CALCULATE_DAMAGE phase`, contextualState)\n      // Calculate the damage based on move and user's stats\n      // also apply the enemy abilities and effects with this as well\n      const ourDmg = move.damage //Apply pal's stats (userMonster.stats.attack * move.damage) / 100\n      console.log(\n        'info',\n        `The damage to be dealt is ${ourDmg}. from ${\n          user.stats.attack\n        } * ${ourDmg} / 100.\n      This will result in targetMonster.stats.hp (${targetMonster.stats.hp})\n       at: ${targetMonster.stats.hp - ourDmg}`,\n      )\n      // 2. Calculate damage\n      // const stateWithDamageDealt = dealDamage(move, user)\n      //----------\n      // const damagedHP = ourDmg - antagonistHP\n\n      // if (user.player === 'user') {\n      //   // same as below but for user\n      // } else if (user.player === 'AI') {\n      //   const stateWithDamageDealt = {\n      //     ...contextualState,\n      //     userParty: {\n      //       // set the new HP\n      //     },\n      //   }\n      // }\n\n      // for all modifiers, switch(move.modifiers) go through every modifier.\n      break\n    case ATK_PHASES.APPLY_DAMAGE:\n      // customLog('info', `ATK: Apply Damage Phase`)\n      const damage = move.damage //Apply pal's stats (userMonster.stats.attack * move.damage) / 100\n\n      // (Previously 5). Apply damage\n      // Apply dmg to the target\n      // Dialogue: ___ is dealt x damage\n      targetMonster.stats.hp -= damage\n      break\n    // Check if the move has a status effect\n    case ATK_PHASES.APPLY_STATUSES:\n      console.log(`move.effect is ${move.effect.result}`, `move`, move)\n\n      console.log(`ATK: apply statuses resolve phase`)\n      // 3. resolve effect?\n      const doesItLand = Math.random() <= parseFloat(move.effect.chance) / 100\n      console.log(`doesItLand is ${doesItLand}`)\n      // Dialogue: does/does not land\n\n      break\n    case ATK_PHASES.RESOLVE_EFFECTS:\n      // 4. Apply statuses\n      // const stateWithStatusesApplied = applyStatuses(move, user) // switch(move.statuses)\n      if (move.effect && doesItLand) {\n        const effect = move.effect.result\n        // Implement logic to apply the status effect (e.g., set 'blind' status)\n        // if it has an effect, run it through the effects switch case\n        // abstract the logic out into its' own file\n        // For example:\n        switch (effect) {\n          case 'blind':\n            // apply blind\n            // Dialogue: applying blind\n            console.log(`applying blind to ${targetMonster.name}`)\n            //applyEffect(\"blind\", targetMonster)\n            //evasion less\n            // acuracy less\n            // note the effect is applied to the target\n            targetMonster.status.blind = true\n            break\n          case 'buff':\n            // apply buff\n            // Dialogue: applying buff\n            targetMonster.stats.attack += 2\n          default:\n            console.log(`default case for hero buffs applied`)\n        }\n        // 6. Resolve End Steps (is this taken care of here?)\n        // Dialogue: ___ is taking x poison damage (or any other effect)\n        // const stateWithEndStepsResolved = resolveEndSteps(move, user) // switch(move.endStepsTriggers)\n        // if theres poison, apply damage. it theres sleep, see if it wakes, etc.\n      }\n      break\n    case ATK_PHASES.END:\n      console.log(`ATK: end phase`)\n      break\n\n    default:\n      console.log(`ATK: default phase in switch reacted`)\n      return contextualState\n  }\n\n  // Check for target's fainting (if HP drops to 0 or below)\n  //this kinda happens all the time.\n  // Always. check death\n  if (targetMonster.stats.hp <= 0) {\n    // Implement logic for the target monster fainting (e.g., switch to the next monster)\n    // Handle any other relevant logic like gaining experience, etc.\n  }\n\n  // 7. Change turns (Probably happens after this function)\n  // inititeOpponentTurn()\n\n  // Return relevant data about the move's execution\n  return {\n    ...contextualState,\n    opponent: {\n      ...contextualState.opponent,\n      monsters: [targetMonster, ...contextualState.opponent.monsters.slice(1)],\n      // damageDealt: damage,\n      // statusEffect: move.effect ? move.effect.result : null,\n      // You can add more data as needed for your game\n    },\n  }\n}\nexport const handlePlayerMoveSelection = (move, state, dispatch) => {\n  // Implement logic for selecting a move by the player\n  const user = state.userParty[Party.SLOT_1] // Get the user's party\n  const target = state.opponent.monsters[0] // Get the opponent's party\n  // const target = state.opponent; // Get the opponent's party\n  const result = executeMove(move, user, target) // Execute the selected move\n  // Handle the move's result (e.g., update UI, check for win/loss conditions)\n  return result\n}\nexport const handleOpponentMoveSelection = (state, dispatch) => {\n  // Implement logic for selecting a move by the opponent\n  const user = state.opponent // Get the opponent's party\n  const target = state.userParty // Get the user's party\n  // Implement AI logic to select a move\n  // Your AI logic here to choose a move\n  const selectedMove = //state.opponent.moves[0]; // Get the selected move\n    state.opponent.moves[\n      Math.floor(Math.random() * state.opponent.moves.length)\n    ] // Get the selected move\n  console.log(`opponent selected move: ${selectedMove.name}`)\n  const result = executeMove(selectedMove, user, target) // Execute the selected move\n  // Handle the move's result (e.g., update UI, check for win/loss conditions)\n}\n// const handleSelect = (selectedMonster) => {\n//   console.log(\n//     `you selected monster: ${selectedMonster.name}`,\n//     selectedMonster,\n//   )\n//   // #TODO: This is the code that breaks things but I need to make it work:\n//   setShowDetails(false)\n//   // this is just the party obj, not the full state\n//   const partyWithMonsterAdded = addMonsterToParty(\n//     selectedMonster,\n//     contextualState.userParty,\n//   )\n//   const stateWithParty = {\n//     ...contextualState,\n//     userParty: partyWithMonsterAdded,\n//   }\n//   const nextSceneState = updateScene(stateWithParty, {\n//     screen: SCENES.MAP,\n//     details: null,\n//   })\n//   const nextLevelState = updateLevel(nextSceneState, 0)\n\n//   //\n//   // Define a function to log colored messages\n//   const logWithColor = (message, color) => {\n//     console.log(`%c${message}`, `color: ${color}; font-weight: bold;`)\n//   }\n","import React, { useState } from 'react'\nimport { energyEmoji } from '../../consts/consts'\nimport {\n  ATK_PHASES,\n  executeMove,\n  handlePlayerMoveSelection,\n} from '../../handlers/moveHandlers'\nimport { ACTIONS } from '../../MainContext'\nimport { Party } from '../../consts/party/parties'\n\nfunction RenderIndAttack({ attack, contextualState, contextualDispatch, togglePopup }) {\n  // const [basicAttackSelected, setBasicAttackSelected] = useState(true)\n  const [attackType, setAttackType] = useState('basic') // Default to 'basic' attack\n\n  console.log('attack:', attack) // Log the value of the attack prop\n  console.log('contextualState:', contextualState) // Log the value of the contextualState prop\n\n  const {\n    name,\n    type,\n    damage,\n    speed,\n    fuel,\n    effect,\n    priority,\n    targets,\n    notSoFast,\n    forceful,\n  } = attack\n\n  const runMove = (move, user) => {\n    // also turn off popup\n    togglePopup()\n\n    // console.log('renderIndAttack->runMove():', move, user)\n    console.log(\n      `renderIndAttack->runMove():\n      move,contextualState,contextualDispatch,user,ATK_PHASES.PAY,`,\n      move,\n      contextualState,\n      contextualDispatch,\n      user,\n      ATK_PHASES.PAY,\n    )\n\n    const resultState = executeMove(\n      move,\n      contextualState,\n      contextualDispatch,\n      user,\n      ATK_PHASES.PAY,\n    )\n    console.log('resultState [XXXX]:', resultState)\n    contextualDispatch({ payload: resultState, type: ACTIONS.UPDATEGAMEDATA })\n\n    //       const appliedCost is in cast\n    // if (castResult.success) {\n    //   const appliedEffect = applyEffect(castResult, move.effect)\n    //   const appliedDamage = applyDamage(appliedEffect, move.damage)\n    //   contextualDispatch(castResult.state, ACTIONS.UPDATEGAMEDATA)\n    // }\n    // or apply the results here:\n    // contextualDispatch(castResult.state, ACTIONS.UPDATEGAMEDATA)\n    // ------------------------------------\n    // const nextLevelState = updateLevel(nextSceneState, 1)\n    // contextualDispatch(nextLevelState, ACTIONS.UPDATEGAMEDATA)\n  }\n  const renderBasic = (move) => {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div style={{ display: 'flex' }}>\n          <div>\n            {fuel}\n            {energyEmoji}\n          </div>\n          <div>S {speed}</div>\n          <div>{damage}</div>\n          <div>{type}</div>\n        </div>\n        <div>Effect: {effect.description}</div>\n        <div>Priority: {priority}</div>\n        <div>Targets: {targets.join(', ')}</div>\n        <button\n          style={{\n            backgroundColor: '#4b770e',\n            color: '#fff',\n            cursor: 'pointer',\n            padding: '8px 8px',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            borderRadius: '4px',\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n          }}\n          onClick={() =>\n            runMove(attack, contextualState.userParty[Party.SLOT_1])\n          }\n        >\n          Use\n        </button>\n      </div>\n    )\n  }\n\n  const renderForceful = (move) => {\n    return (\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\n        <div style={{ display: 'flex' }}>\n          <div>\n            {forceful.fuel}\n            {energyEmoji}\n          </div>\n          <div>Speed: {forceful.speed}</div>\n          <div>{forceful.damage}DMG</div>\n          <div>{forceful.type}</div>\n        </div>\n        <div>Effect: {forceful.effect.description}</div>\n        <div>chance: {forceful.effect.chance}</div>\n        <div>result: {forceful.effect.result}</div>\n        <div>Targets: {forceful.targets.join(', ')}</div>\n        <button\n          style={{\n            backgroundColor: '#4b770e',\n            color: '#fff',\n            cursor: 'pointer',\n            padding: '8px 8px',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            borderRadius: '4px',\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n          }}\n        >\n          Use\n        </button>\n      </div>\n    )\n  }\n\n  const renderCounter = (move) => {\n    return <div>CounterAttack</div>\n  }\n\n  const moveFormToRender = (move) => {\n    if (attackType === 'basic') {\n      return renderBasic(move)\n    } else if (attackType === 'forceful') {\n      return renderForceful(move)\n    } else if (attackType === 'notSoFast') {\n      return renderCounter(move)\n    }\n  }\n  return (\n    <div style={{ ...attackContainerStyle, backgroundColor: '#5a7d2a' }}>\n      <div style={{ display: 'flex' }}>\n        <div\n          style={{\n            backgroundColor: attackType === 'basic' ? '#4b770e' : '#5a7d2a',\n            color: attackType === 'basic' ? '#fff' : '#000',\n            cursor: 'pointer',\n            padding: '8px 8px',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            borderRadius: '4px',\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n            margin: '0px 3px',\n          }}\n          onClick={() => setAttackType('basic')}\n        >\n          {attack.name}\n        </div>\n        <div\n          style={{\n            backgroundColor: attackType === 'forceful' ? '#4b770e' : '#5a7d2a',\n            color: attackType === 'forceful' ? '#fff' : '#000',\n            cursor: 'pointer',\n            padding: '8px 8px',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            borderRadius: '4px',\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n            margin: '0px 3px',\n          }}\n          onClick={() => setAttackType('forceful')}\n        >\n          {forceful.name}\n        </div>\n        <div\n          style={{\n            backgroundColor: attackType === 'notSoFast' ? '#4b770e' : '#5a7d2a',\n            color: attackType === 'notSoFast' ? '#fff' : '#000',\n            cursor: 'pointer',\n            padding: '8px 8px',\n            fontSize: '16px',\n            fontWeight: 'bold',\n            borderRadius: '4px',\n            boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n            margin: '0px 3px',\n          }}\n          onClick={() => setAttackType('notSoFast')}\n        >\n          {notSoFast.name}\n        </div>\n      </div>\n      {moveFormToRender(attack)}\n    </div>\n  )\n}\n\nexport default RenderIndAttack\n\nconst attackContainerStyle = {\n  border: '1px solid #a5e54d',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  padding: '12px',\n  margin: '8px 0',\n  backgroundColor: '#fff',\n}\n\nconst attackInfoStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '8px',\n}\n\nconst attackNameStyle = {\n  fontWeight: 'bold',\n}\n\nconst attackDamageStyle = {\n  flex: 1,\n  textAlign: 'right',\n}\n\nconst attackDescriptionStyle = {\n  flex: 1,\n  textAlign: 'left',\n  color: 'black',\n}\n\nconst attackEnergyCostStyle = {\n  alignSelf: 'flex-end',\n  textAlign: 'right',\n}\n\nconst attackHeaderStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '10px',\n}\n\nconst characterIconStyle = {\n  width: '24px',\n  height: '24px',\n  backgroundColor: 'green', // Blue circle (placeholder for character icon)\n  marginRight: '10px',\n}\n\nconst attackLabelStyle = {\n  fontSize: '24px',\n  fontWeight: 'bold',\n}\n\nconst monsterNameStyle = {\n  fontWeight: 'bold',\n}\n\nconst monsterAbilitiesStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  marginLeft: '34px', // To align with the monster icon\n}\n","import React, { useState } from 'react'\nimport Button from './Button'\nimport { useDispatchContext, useStateContext } from '../../MainContext'\nimport { Party } from '../../consts/party/parties'\nimport { IceWall } from '../../consts/allMoves'\nimport Monster from '../info/Monster'\nimport RenderIndAttack from '../info/RenderIndAttack'\n\nconst { SLOT_1, SLOT_2, SLOT_3, SLOT_4, SLOT_5, SLOT_6 } = Party\n\nconst MenuOptions = {\n  ATTACKS: 'attacks',\n  BENCH_ATTACKS: 'benchAttacks',\n  DO_SOMETHING: 'doSomething',\n}\n\nfunction MenuPopup(props) {\n  const [currentMenu, setCurrentMenu] = useState(MenuOptions.ATTACKS)\n  const toggleMenu = (menu) => {\n    setCurrentMenu(menu)\n  }\n\n  const renderTab = (menuOption) => (\n    <div\n      key={menuOption}\n      onClick={() => toggleMenu(menuOption)}\n      style={{\n        cursor: 'pointer',\n        padding: '10px',\n        backgroundColor: currentMenu === menuOption ? '#4b770e' : '#5a7d2a',\n        color: currentMenu === menuOption ? '#fff' : '#000',\n        marginRight: '10px',\n      }}\n    >\n      {menuContent[menuOption].label}\n    </div>\n  )\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  const menuContent = {\n    [MenuOptions.ATTACKS]: {\n      label: 'Attacks',\n      content: (\n        <>\n          {props.selectedPal.moves.map((move) => (\n            <RenderIndAttack\n              attack={move}\n              contextualState={contextualState}\n              contextualDispatch={contextualDispatch}\n              togglePopup={props.togglePopup}\n            />\n          ))}\n        </>\n      ),\n    },\n    [MenuOptions.BENCH_ATTACKS]: {\n      label: 'Bench Attacks',\n      content: (\n        <>\n          <Monster name={'Monster 1'} abilities={['Tackle', 'Growl']} />\n          <Monster name={'Monster 2'} abilities={['Scratch']} />\n          <Monster name={'Monster 3'} abilities={['Tail Whip', 'Growl']} />\n          <Monster name={'Monster 4'} abilities={['Tail Whip']} />\n          <Monster name={'Monster 5'} abilities={['Tail Whip']} />\n        </>\n      ),\n    },\n    [MenuOptions.DO_SOMETHING]: {\n      label: 'Do Something',\n      content: (\n        <div>This is the \"Do Something\" menu. Add your content here.</div>\n      ),\n    },\n  }\n\n  return props.trigger ? (\n    <div\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        width: '100%',\n        height: '100vh',\n        backgroundColor: 'rgba(0, 0, 0, 0.2)',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        zIndex: 100,\n      }}\n    >\n      <div\n        style={{\n          position: 'relative',\n          padding: '20px',\n          backgroundColor: '#5a7d2a',\n          width: '80%',\n          maxWidth: '640px',\n          boxShadow: '0 0 10px rgba(0, 0, 0, 0.5)',\n        }}\n      >\n        <div style={attackHeaderStyle}>\n          <div style={characterIconStyle}>{'i'}</div>\n          <div style={attackLabelStyle}>{menuContent[currentMenu].label}</div>\n        </div>\n        <div\n          style={{\n            maxHeight: '400px', // Set a maximum height for the scrollable content\n            overflowY: 'auto', // Enable vertical scrolling\n          }}\n        >\n          {menuContent[currentMenu].content}\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          {Object.values(MenuOptions).map((menuOption) =>\n            renderTab(menuOption),\n          )}\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          {/* Add any additional details here */}\n        </div>\n        <button\n          style={{\n            backgroundColor: '#4b770e',\n            border: 'none',\n            color: '#fff',\n            padding: '10px 20px',\n            cursor: 'pointer',\n            marginTop: '20px',\n          }}\n          onClick={() => props.togglePopup()}\n        >\n          Close\n        </button>\n      </div>\n    </div>\n  ) : (\n    ''\n  )\n}\n\nconst attackHeaderStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '10px',\n}\n\nconst characterIconStyle = {\n  width: '24px',\n  height: '24px',\n  backgroundColor: 'green', // Blue circle (placeholder for character icon)\n  marginRight: '10px',\n}\n\nconst attackLabelStyle = {\n  fontSize: '24px',\n  fontWeight: 'bold',\n}\n\nexport default MenuPopup\n","import React from 'react'\n\nconst styles = {\n  attackContainer: {\n    border: '1px solid #a5e54d',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'stretch',\n    padding: '12px',\n    margin: '8px 0',\n    backgroundColor: '#fff',\n    boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n    transition: 'transform 0.2s',\n  },\n  attackContainerHover: {\n    transform: 'translateY(-5px)',\n  },\n  attackInfo: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: '8px',\n  },\n  attackName: {\n    fontWeight: 'bold',\n  },\n  attackDamage: {\n    flex: 1,\n    textAlign: 'right',\n  },\n  attackDescription: {\n    flex: 1,\n    textAlign: 'left',\n    color: 'black',\n  },\n  attackEnergyCost: {\n    alignSelf: 'flex-end',\n    textAlign: 'right',\n  },\n  button: {\n    backgroundColor: '#4b770e',\n    border: 'none',\n    color: '#fff',\n    padding: '10px 20px',\n    cursor: 'pointer',\n    marginTop: '20px',\n  },\n}\n\nconst AttackPopup = ({\n  // name,\n  // damage,\n  // description,\n  // energyCost,\n  onAttackClick,\n  closeAttackPopup,\n  removeAttackButton,\n  attack,\n}) => {\n  console.log('Here is attack', attack)\n  // export const QuickStrike = {\n  //   name: 'Quick Strike',\n  //   type: 'physical',\n  //   damage: 25,\n  //   speed: 7,\n  //   energyCost: 3,\n  //   effect: {\n  //     description: 'High critical hit chance',\n  //     chance: '50%',\n  //     result: 'critical_hit',\n  //   },\n  //   priority: 'fast',\n  //   targets: ['opponent', 'opponent_pals'],\n  //   // \"NotSoFast\" aspect:\n  //   notSoFast: {\n  //     name: 'Nimble Dodge',\n  //     type: 'buff',\n  //     effect: {\n  //       description: 'Increase evasion for the next turn',\n  //       duration: '1 turn',\n  //       evasion_boost: 30, // Increase evasion for the user\n  //     },\n  //   },\n  //   // \"Forceful\" aspect:\n  //   forceful: {\n  //     name: 'Rapid Fury',\n  //     type: 'physical',\n  //     damage: 40, // Enhanced damage for the Forceful aspect\n  //     speed: 9, // Slightly slower due to the added power\n  //     fuel: 4, // Increased fuel cost for the Forceful aspect\n  //     effect: {\n  //       description: 'Guaranteed critical hit and additional damage',\n  //       chance: '100%',\n  //       result: 'critical_hit',\n  //     },\n  //     targets: ['opponent', 'opponent_pals'],\n  //   },\n  // };\n  const {\n    name,\n    damage,\n    effect,\n    energyCost,\n    targets,\n    priority,\n    speed,\n    type,\n    fuel,\n    notSoFast,\n    forceful,\n  } = attack\n  const { description } = effect\n\n  // #TODO: Add the attack param. It is missing so far.\n\n  return (\n    <div\n      style={{\n        ...styles.attackContainer,\n      }}\n      onClick={onAttackClick}\n    >\n      <div style={styles.attackInfo}>\n        <div style={styles.attackName}>{name}</div>\n        <div style={styles.attackDamage}>{damage}</div>\n        <div style={styles.attackEnergyCost}>Cost: {energyCost}</div>\n        <div style={styles.attackDescription}>{description}</div>\n        <div style={styles.attackTargets}>Targets: {targets.join(', ')}</div>\n        <div style={styles.attackPriority}>Priority: {priority}</div>\n        <div style={styles.attackSpeed}>Speed: {speed}</div>\n        <div style={styles.attackType}>Type: {type}</div>\n        {fuel && <div style={styles.attackFuel}>Fuel: {fuel}</div>}\n        {notSoFast && (\n          <div style={styles.attackNotSoFast}>\n            Not So Fast: {notSoFast.name}\n          </div>\n        )}\n        {forceful && (\n          <div style={styles.attackForceful}>Forceful: {forceful.name}</div>\n        )}\n      </div>\n      {!removeAttackButton && ( // Render the attack button only if not disabled\n        <button style={styles.button} onClick={onAttackClick}>\n          Attack\n        </button>\n      )}\n      <button style={styles.button} onClick={closeAttackPopup}>\n        Close\n      </button>\n    </div>\n  )\n}\n\nexport default AttackPopup\n","import React, { useState } from 'react'\n\n// eslint-disable-next-line no-unused-vars\nimport { motion, AnimatePresence } from 'framer-motion/dist/framer-motion'\n\nimport './../scenes/Battle.css'\nimport './../common/Button.css'\nimport { useDispatchContext, useStateContext } from '../../MainContext'\n// eslint-disable-next-line no-unused-vars\nimport AttackPopup from '../common/AttackPopup'\nimport Button from '../common/Button'\n\nexport default function BattleTopDisplay() {\n  const attackPopupStyles = {\n    overlay: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.5)',\n      // background: \"lightgreen\",\n\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 1000,\n    },\n    container: {\n      // background: \"#fff\",\n      background: 'lightgreen',\n\n      boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.5)',\n      padding: '20px',\n      borderRadius: '2px',\n    },\n  }\n\n  // const [isAttackDisplayVisible, setAttackDisplayVisible] = useState(false)\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  const handleAttackClick = (name) => {\n    // Dispatch an action to perform the selected attack\n    contextualDispatch({\n      type: 'PERFORM_ATTACK',\n      payload: { attackName: name },\n    })\n  }\n\n  const [isAttackPopupVisible, setAttackPopupVisible] = useState(false)\n\n  const openAttackPopup = () => {\n    setAttackPopupVisible(true)\n  }\n\n  const closeAttackPopup = () => {\n    setAttackPopupVisible(false)\n  }\n\n  const renderAttack = (name, damage, description, energyCost) => {\n    return (\n      <AttackPopup\n        name={name}\n        damage={damage}\n        description={description}\n        energyCost={energyCost}\n        onAttackClick={() => handleAttackClick(name)}\n        // attack={moves[0]}\n\n      />\n    )\n  }\n\n  // const { name, status, poison, health, maxHP, img, nextAttack } =\n  //   gameData.battle.enemy;\n\n  const yourVariants = {\n    visible: {\n      x: [0, 2, -3, 5, -1, 5, -3, 0],\n      y: [0, 3, -1],\n      transition: {\n        // delay: 0.5,\n        duration: 15,\n        yoyo: Infinity,\n      },\n    },\n  }\n\n  // Def work on this later\n  const currentMonDetails = contextualState.opponent.monsters[0]\n\n  const currentMon =\n    contextualState.current.scene.details.trainer.monsters[0].obj // .level\n  console.log(`currentMon:`, currentMon)\n  // const currentMon = Ticklefairy;\n  const {\n    name,\n    lore,\n    image,\n    elemental_type,\n    creature_type,\n    specialty_group,\n    nature,\n    quirks,\n    stats,\n    enterAbility,\n    strengths,\n    weaknesses,\n    cost,\n    moves,\n    possible_moves,\n    passive_ability,\n    experience,\n    lvl,\n  } = currentMon\n  console.log(`currentMonDetails:`, currentMonDetails, currentMon, stats)\n\n  return (\n    <div className=\"battleTop\">\n      <div className=\"battleTopLeft\">\n        <div className=\"battleTLname\" style={{ fontSize: '25px' }}>\n          {name}\n          <span style={{ color: 'gray', fontSize: '12px' }}>lvl{lvl}</span>\n        </div>\n        <div className=\"battleTLhealth\">\n          {stats.hp}HP\n          <progress\n            id=\"health\"\n            value={stats.hp}\n            max={stats.hp}\n            style={{\n              backgroundColor: '#4caf50',\n              color: '#9faf4c',\n            }}\n          />\n        </div>\n        <div className=\"battleTLnext\">\n          {/* <span style={{ color: \"gray\" }}>Next: </span> */}\n          <span style={{ color: 'gray', fontSize: '12px' }}>\n            In 10{' '}\n            <img\n              src={`./icons/Seconds.png`}\n              style={{ width: 20, height: 20 }}\n              alt=\"Seconds Icon\"\n            />{' '}\n          </span>\n          {/* , will use */}:\n          <button\n            onClick={openAttackPopup}\n            style={{\n              backgroundColor: 'green',\n              padding: '3px',\n              borderRadius: '3px',\n              color: 'white',\n            }}\n          >\n            {moves[0].name}\n          </button>\n        </div>\n        {/* <div> */}\n        {/* <Button onClick={openAttackPopup} text={moves[0].name} /> */}\n\n        {/* </div> */}\n\n        {isAttackPopupVisible && (\n          <div style={attackPopupStyles.overlay} onClick={closeAttackPopup}>\n            <div style={attackPopupStyles.container}>\n              <AttackPopup\n                name={moves[0].name} // Pass the attack details here\n                damage=\"30\"\n                description=\"An example attack description.\"\n                energyCost=\"10\"\n                onAttackClick={closeAttackPopup}\n                closeAttackPopup={closeAttackPopup}\n                removeAttackButton={false}\n                attack={moves[0]}\n              />\n            </div>\n          </div>\n        )}\n      </div>{' '}\n      <div className=\"battleTopRight\">\n        <motion.img\n          style={{ width: 180, height: 150 }}\n          animate=\"visible\"\n          whileHover=\"hover\"\n          variants={yourVariants}\n          // src={img}\n          src={image}\n          alt=\"Enemy Frontside\"\n        />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\n// eslint-disable-next-line no-unused-vars\nimport { motion, AnimatePresence } from 'framer-motion/dist/framer-motion'\n// import { useDispatchContext, useStateContext } from \"../../MainContext\"\n\nimport './../scenes/Battle.css'\nimport './../common/Button.css'\nimport { useDispatchContext, useStateContext } from '../../MainContext'\nimport { Party } from '../../consts/party/parties'\nimport Button from '../common/Button'\n\n// function BattleBotDisplay({ gameData, health, maxHP, energy }) {\nfunction BattleBotDisplay({ ourCurrentMon }) {\n  console.log(`battleBot currentMon`, ourCurrentMon)\n  const yourVariants = {\n    visible: {\n      x: [0, 2, -3, 5, -1, 5, -3, 0],\n      y: [0, 3, -1],\n      transition: {\n        // delay: 0.5,\n        duration: 15,\n        yoyo: Infinity,\n      },\n    },\n  }\n\n  const contextualState = useStateContext()\n  const ourParty = contextualState.userParty\n  const ourMain = ourParty[Party.SLOT_1]\n\n  console.log(`X_ourParty:`, ourParty, `ourMain`, ourMain)\n\n  // const ourParty = contextualState.userParty.SLOT_1\n  return (\n    <div className=\"battleBot\">\n      {/* @TODO: reverse left and right here */}\n      <div className=\"battleBotRight\">\n        <motion.img\n          style={{ width: 180, height: 150 }}\n          animate=\"visible\"\n          whileHover=\"hover\"\n          variants={yourVariants}\n          src={ourCurrentMon.image}\n          alt=\"Your Chibipal\"\n        />\n      </div>\n      <div className=\"battleBotLeft\">\n        <div className=\"battleBotLeftUpper\">\n          <div>\n            <div className=\"battleBLname\" style={{ fontSize: '25px' }}>\n              {ourCurrentMon.name}\n              <span style={{ fontSize: '12px' }}>\n                <span style={{ color: 'gray' }}>lvl{ourCurrentMon.lvl}</span>\n              </span>\n            </div>\n\n            <div className=\"battleBLhealth\">\n              {ourCurrentMon.stats.hp}HP\n              {/* <img\n                style={{ width: 10, height: 10 }}\n                src=\"./icons/heart.png\"\n                alt=\"Health\"\n              /> */}\n              <progress\n                id=\"health\"\n                value={ourCurrentMon.stats.hp}\n                max={ourCurrentMon.maxHP}\n                style={{\n                  backgroundColor: '#4caf50',\n                }}\n              />\n            </div>\n          </div>\n          {/* <div className=\"battleBuffs\"></div> */}\n          {/* <div className=\"battleBotLeftProperties\"> */}\n          <div>\n            <ul\n              style={{\n                fontSize: '14px',\n                display: 'flex',\n                flexDirection: 'column',\n              }}\n            >\n              {/* <li>Commander Ability: {ourCurrentMon.commander_ability.name}</li>\n              <li>Cost: {ourCurrentMon.cost}</li>\n              <li>Creature Type: {ourCurrentMon.creature_type}</li>\n              <li>Description: {ourCurrentMon.description}</li>\n              <li>Elemental Type: {ourCurrentMon.elemental_type}</li>\n              <li>Enter Ability: {ourCurrentMon.enterAbility}</li>\n              <li>Experience: {ourCurrentMon.experience}</li>\n              <li>ID: {ourCurrentMon.id}</li> */}\n              {/* <li>Lore: {ourCurrentMon.lore}</li> */}\n              {/* <li>\n                Moves:{' '}\n                {ourCurrentMon.moves.map((move, index) => (\n                  <span key={index}>{move}, </span>\n                ))}\n              </li> */}\n              {/* <li>Name: {ourCurrentMon.name}</li> */}\n              {/* <li>Nature: {ourCurrentMon.nature}</li> */}\n              <li>\n                {/* Passive: <Button text={ourCurrentMon.passive_ability} /> */}\n                <button\n                  style={{\n                    backgroundColor: 'green',\n                    padding: '5px',\n                    borderRadius: '2px',\n                    color: 'white',\n                  }}\n                >\n                  {ourCurrentMon.passive_ability}\n                </button>\n              </li>\n              {/* <li> */}\n              {/* Possible Moves:{' '} */}\n              {/* {ourCurrentMon.possible_moves.map((move, index) => (\n                  <span key={index}>{move}, </span>\n                )} */}\n              {/* </li> */}\n              {/* <li> */}\n              {/* Quirks:{' '} */}\n              {/* {ourCurrentMon.quirks.map((quirk, index) => (\n                  <span key={index}>{quirk}, </span>\n                )} */}\n              {/* </li> */}\n              {/* <li>Size: {ourCurrentMon.size}</li> */}\n              <li>Group: {ourCurrentMon.specialty_group}</li>\n              {/* <li>\n                Stats:\n                <ul>\n                  <li>HP: {ourCurrentMon.stats.hp}</li>\n                  <li>Max HP: {ourCurrentMon.stats.max_hp}</li>\n                  <li>Attack: {ourCurrentMon.stats.attack}</li>\n                  <li>Defense: {ourCurrentMon.stats.defense}</li>\n                  <li>Special Attack: {ourCurrentMon.stats.special_attack}</li>\n                </ul>\n              </li> */}\n              <li>\n                +{' '}\n                {ourCurrentMon.strengths.map((strength, index) => (\n                  <span key={index}>{strength}, </span>\n                ))}\n              </li>\n              <li>\n                -{' '}\n                {ourCurrentMon.weaknesses.map((weakness, index) => (\n                  <span key={index}>{weakness}, </span>\n                ))}\n              </li>\n              {/* <li>Weight: {ourCurrentMon.weight}</li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n\n  BattleBotDisplay.propTypes = {\n    ourCurrentMon: PropTypes.shape({\n      name: PropTypes.string,\n      // health: PropTypes.number,\n      stats: PropTypes.object,\n      passive_ability: PropTypes.string,\n      moves: PropTypes.array,\n      possible_moves: PropTypes.array,\n      quirks: PropTypes.array,\n      size: PropTypes.string,\n      weight: PropTypes.number,\n      maxHP: PropTypes.number,\n      lvl: PropTypes.number,\n      image: PropTypes.string,\n      description: PropTypes.string,\n      strengths: PropTypes.array,\n      weaknesses: PropTypes.array,\n      specialty_group: PropTypes.string,\n      commander_ability: PropTypes.object,\n      cost: PropTypes.number,\n      creature_type: PropTypes.string,\n      elemental_type: PropTypes.string,\n      enterAbility: PropTypes.string,\n      experience: PropTypes.number,\n      id: PropTypes.number,\n      lore: PropTypes.string,\n      nature: PropTypes.string,\n\n      // Add other expected prop types here\n    }).isRequired,\n  }\n}\n\nexport default BattleBotDisplay\n","import React from 'react'\n\nconst UserPartyDisplay = () => {\n  // Placeholder data for party members (with made-up creature names)\n  const partyMembers = [\n    {\n      name: 'Sparklepaw',\n      health: 80,\n      image: './creatures/Squirrely.png',\n    },\n    {\n      name: 'Firebreath',\n      health: 70,\n      image: './creatures/Squirrely.png',\n    },\n    {\n      name: 'Leafywing',\n      health: 90,\n      image: './creatures/Squirrely.png',\n    },\n    {\n      name: 'Bubblesnout',\n      health: 60,\n      image: './creatures/Squirrely.png',\n    },\n    {\n      name: 'Aquaflare',\n      health: 75,\n      image: './creatures/Squirrely.png',\n    },\n    {\n      name: 'Aquaflare',\n      health: 75,\n      image: './creatures/Squirrely.png',\n    },\n  ]\n\n  return (\n    <div style={{ textAlign: 'center', fontFamily: 'Silkscreen' }}>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          color: 'green',\n        }}\n      >\n        {partyMembers.map((member, index) => (\n          <div\n            key={index}\n            style={{\n              margin: '5px',\n              border: '2px solid green',\n              borderRadius: '2%',\n            }}\n          >\n            <div>{member.name}</div>\n            <img\n              src={member.image}\n              alt={`Party Member ${index + 1}`}\n              style={{\n                width: '30px',\n                height: '30px',\n              }}\n            />\n            <div>\n              Health: {member.health}\n              <div\n                style={{\n                  backgroundColor: 'green',\n                  width: `${(member.health / 100) * 60}px`,\n                  height: '5px',\n                }}\n              />\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default UserPartyDisplay\n\n// import React from \"react\";\n\n// const UserPartyDisplay = () => {\n//   // Placeholder image URLs (you can replace these with actual image URLs)\n//   const placeholderImages = [\n//     './creatures/Squirrely.png',\n//     './creatures/Squirrely.png',\n//     './creatures/Squirrely.png',\n//     './creatures/Squirrely.png',\n//     './creatures/Squirrely.png',\n//   ];\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         justifyContent: \"center\",\n//       }}\n//     >\n//       {placeholderImages.map((image, index) => (\n//         <img\n//           key={index}\n//           src={image}\n//           alt={`Party Member ${index + 1}`}\n//           style={{\n//             width: '60px', // Adjust the image size as needed\n//             height: '60px',\n//             border: '2px solid green', // Optional border for styling\n//             borderRadius: '10%', // To create rounded images\n//             margin: '5px', // Adjust margin as needed\n//           }}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default UserPartyDisplay;\n","import React from 'react'\nimport { energyEmoji } from '../../consts/consts'\nimport PropTypes from 'prop-types'\n\nfunction MenuButtonGroup ({ togglePopup }) {\n  return (\n    <div\n      style={{\n        fontFamily: 'Silkscreen',\n        display: 'flex',\n        color: 'white',\n        backgroundColor: '#5a7d2a',\n      }}\n    >\n      <div\n        style={{\n          display: 'flex',\n          fontSize: '20px',\n          alignContent: 'center',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          padding: '4px',\n        }}\n      >\n        10{energyEmoji}\n      </div>\n      <div\n        style={{\n          fontFamily: 'Silkscreen',\n          display: 'flex',\n          justifyContent: 'space-around',\n          flex: 2,\n          backgroundColor: '#5a7d2a',\n          color: 'white',\n          margin: '3px',\n        }}\n      >\n        <div>\n          <div\n            style={{ padding: '3px' }}\n            onClick={togglePopup}\n            className=\"text-green-200\"\n          >\n            Attack\n          </div>\n          <div style={{ padding: '3px' }} className=\"text-blue-400\">\n            Items\n          </div>\n        </div>\n        <div>\n          <div style={{ padding: '3px' }}>PaLs</div>\n          <div style={{ padding: '3px' }}>Options</div>\n        </div>\n      </div>\n    </div>\n  )\n  MenuButtonGroup.propTypes = {\n    togglePopup: PropTypes.func.isRequired,\n  }\n}\n\nexport default MenuButtonGroup\n","import React from 'react'\n\nfunction HUDHeader ({ gameData }) {\n  return (\n    <p\n      style={{\n        margin: '4px',\n        backgroundColor: '#5a7d2a',\n        color: 'white',\n        flex: '1',\n      }}\n    >\n      Simulation Room: No Effects\n    </p>\n  )\n}\n\nexport default HUDHeader\n","import React, { useState } from 'react'\nimport { endTurnAction, playCardAction } from '../../actions'\nimport Card from '../common/Card'\nimport { dmgEmoji, energyEmoji, goldEmoji } from '../../consts/consts'\nimport { motion } from 'framer-motion/dist/framer-motion'\n\nimport Dialog from '../common/Dialog'\nimport MenuPopup from '../common/MenuPopup'\n// import HUDHeader from \"../battle/HUDHeader\"\n// import EnemyDisplay from \"../battle/BattleTopDisplay\";\nimport BattleTopDisplay from '../battle/BattleTopDisplay'\nimport BattleBotDisplay from '../battle/BattleBotDisplay'\nimport UserPartyDisplay from '../battle/UserPartyDisplay'\nimport MenuButtonGroup from '../battle/MenuButtonGroup'\nimport { useDispatchContext, useStateContext } from '../../MainContext'\nimport { startingData } from '../../consts/startingData'\nimport { Party } from '../../consts/party/parties'\nimport DialoguePopup from '../common/DialoguePopup'\nimport HUDHeader from '../battle/HUDHeader'\n\n// const Battle = ({ gameData, dispatch }) => {\nconst Battle = () => {\n  const gameData = startingData\n\n  //TODO: Make this contextual based on what is passed in\n  const [popupOpen, setPopupOpen] = useState(false)\n  const togglePopup = () => setPopupOpen(!popupOpen)\n\n  //Remove when ready. Breaks the old implementation\n  const { health, energy, maxHP } = gameData.hero\n  const yourVariants = {\n    visible: {\n      x: [0, 2, -3, 5, -1, 5, -3, 0],\n      y: [0, 3, -1],\n      transition: {\n        // delay: 0.5,\n        duration: 15,\n        yoyo: Infinity,\n      },\n    },\n  }\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  const ourParty = contextualState.userParty\n  console.log(`ourCurrentMonSHOULDBE`, ourParty)\n\n  const ourCurrentMon = ourParty[Party.SLOT_1]\n  console.log(`ourCurrentMon`, ourCurrentMon, `curMON`, ourParty)\n\n  const [showPopup, setShowPopup] = useState(true)\n\n  const handleButtonClick = () => {\n    setShowPopup(false)\n  }\n\n  const popupContent = {\n    trigger: showPopup,\n    title: 'BATTLE START',\n    message: 'Mr. Yamashita wants to fight! Are you ready to battle?',\n    buttonText: 'OK',\n    buttonText2: 'Counter',\n    onButtonClick: handleButtonClick,\n  }\n\n  // TODO Leverage the knowledge events to make victory scenes, and any scene that goes between another\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n    >\n      <div>\n        <div\n          style={{\n            fontFamily: 'Silkscreen',\n            display: 'flex',\n            flexWrap: 'wrap',\n            alignItems: 'center',\n          }}\n        >\n          <HUDHeader />\n          <UserPartyDisplay />\n          <BattleTopDisplay gameData={gameData} />\n          <BattleBotDisplay ourCurrentMon={ourCurrentMon} />\n        </div>\n        {gameData.alert ? (\n          <div\n            style={{\n              color: 'Red',\n              padding: '10px 0px',\n              margin: '0px 30px',\n              backgroundColor: 'black',\n            }}\n          >\n            {gameData.alert}\n          </div>\n        ) : (\n          <></>\n        )}\n\n        <div style={{ display: 'flex' }}>\n          {/* #TODO: Give MenuPopup its' own toggle, and remove this - MenuPopup */}\n          <MenuButtonGroup togglePopup={togglePopup} />\n        </div>\n        <UserPartyDisplay />\n        <div\n          style={{\n            fontFamily: 'Silkscreen',\n            backgroundColor: '#5a7d2a',\n            color: 'white',\n          }}\n        >\n          <MenuPopup\n            selectedPal={ourCurrentMon}\n            trigger={popupOpen}\n            togglePopup={togglePopup}\n            zIndex={1}\n          />\n          <DialoguePopup\n            trigger={showPopup}\n            title=\"BATTLE START\"\n            message=\"Mr. Yamashita wants to fight! Are you ready to battle?\"\n            onButtonClick={handleButtonClick}\n            options={[\n              {\n                label: 'OK',\n                onClick: handleButtonClick,\n                backgroundColor: '#4b770e',\n                color: '#fff',\n              },\n              {\n                label: 'Counter',\n                buttonText2: 'Counter',\n                onClick: handleButtonClick,\n                backgroundColor: '#4b770e',\n                color: '#fff',\n              },\n              {\n                label: 'Relaxxx',\n                buttonText2: 'Counter',\n                // onButtonClick: handleButtonClick,\n                onClick: handleButtonClick,\n                backgroundColor: '#4b770e',\n                color: '#fff',\n              },\n            ]}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst attackContainerStyle = {\n  border: '1px solid #a5e54d',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'stretch',\n  padding: '12px',\n  margin: '8px 0',\n  backgroundColor: '#fff',\n}\n\nconst attackInfoStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  marginBottom: '8px',\n}\n\nconst attackNameStyle = {\n  fontWeight: 'bold',\n}\n\nconst attackDamageStyle = {\n  flex: 1,\n  textAlign: 'right',\n}\n\nconst attackDescriptionStyle = {\n  flex: 1,\n  textAlign: 'left',\n  color: 'black',\n}\n\nconst attackEnergyCostStyle = {\n  alignSelf: 'flex-end',\n  textAlign: 'right',\n}\n\nconst attackHeaderStyle = {\n  display: 'flex',\n  alignItems: 'center',\n  marginBottom: '10px',\n}\n\nexport default Battle\n","import React from 'react'\nimport { ACTIONS, useDispatchContext, useStateContext } from '../../MainContext'\nimport { motion, useAnimation } from 'framer-motion'\nimport { SCENES, changeLevel } from '../../handlers/sceneHandlers_new'\nimport { hikerBrak } from '../../consts/party/trainers'\nimport { generateEnemyParty } from '../../handlers/Battle/prepareBattle'\n\nfunction Map() {\n  const containerStyle = {\n    // backgroundColor: '#222',\n    color: 'white',\n    padding: '20px',\n    fontFamily: 'Arial, sans-serif',\n    textAlign: 'center',\n  }\n\n  const titleStyle = {\n    fontSize: '24px',\n    marginBottom: '20px',\n  }\n\n  const sectionStyle = {\n    // backgroundColor: '#444',\n    backgroundColor: 'green',\n    borderRadius: '8px',\n    padding: '15px',\n    marginBottom: '10px',\n  }\n\n  const headingStyle = {\n    fontSize: '18px',\n    margin: '0',\n  }\n\n  const buttonStyle = {\n    // backgroundColor: \"#007bff\",\n    backgroundColor: 'darkgreen',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    padding: '10px 20px',\n    cursor: 'pointer',\n    margin: '10px',\n  }\n\n  // Inside your component\n  const imageControls = useAnimation()\n\n  // Define a spring animation that moves the image up and down\n  const imageAnimation = {\n    y: [0, -5, 0, 5, 0], // Define the Y-axis values for the animation\n    transition: {\n      duration: 2, // Duration of each cycle (in seconds)\n      repeat: Infinity, // Repeat the animation infinitely\n      ease: 'linear', // Use a linear easing function for a simple up-and-down motion\n    },\n  }\n\n  // Use the imageControls to start the animation\n  imageControls.start(imageAnimation)\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  const handleChangeLevel = (state, scene) => {\n    const stateWithChangedLevel = changeLevel(state, scene)\n    contextualDispatch({\n      type: ACTIONS.UPDATEGAMEDATA,\n      payload: stateWithChangedLevel,\n    })\n    console.log(`state after changing level:`, stateWithChangedLevel)\n\n    // console.log(`state after changing level:`, contextualState);\n  }\n\n  const ourParty = contextualState.userParty\n\n  // Function to render details for a monster\n  const renderMonsterDetails = (monster) => {\n    return (\n      <div\n        key={monster ? monster.id : 'empty-slot'}\n        style={{\n          marginBottom: '2px',\n          border: '1px solid lightgreen', // Add a border to distinguish slots\n          padding: '5px',\n        }}\n      >\n        {monster ? (\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <motion.img\n              src={monster.image}\n              alt={monster.name}\n              style={{ maxWidth: '35px', maxHeight: '35px' }}\n              animate={imageControls}\n            />\n            <div style={{ marginRight: '5px' }}>{monster.name}</div>\n            <div>\n              HP: {monster.stats.hp}/{monster.stats.max_hp}\n            </div>{' '}\n            <div\n              style={{\n                width: '100px',\n                height: '10px',\n                backgroundColor: 'lightgray',\n                borderRadius: '5px',\n                marginTop: '4px',\n              }}\n            >\n              <div\n                style={{\n                  width: `${(monster.stats.hp / monster.stats.max_hp) * 100}%`,\n                  height: '100%',\n                  borderRadius: '5px',\n                  backgroundColor: 'darkgreen',\n                }}\n              ></div>\n            </div>\n          </div>\n        ) : (\n          <p>Empty Slot</p>\n        )}\n      </div>\n    )\n  }\n\n  return (\n    <div style={containerStyle}>\n      <h1 style={titleStyle}>New Map Component</h1>\n      <div style={sectionStyle}>\n        <div style={sectionStyle}>\n          <h2 style={headingStyle}>Map Stuff</h2>\n          <p>Choose your path:</p>\n          <div>\n            {' '}\n            {/* you see a shadowy figure, you can feed it or not. \"feed me\"\n          if you feed it it joins your party. you have bait/food I guess */}\n            {contextualState.game.map[contextualState.current.level].map(\n              (option, index) => {\n                // if(option === SCENES.BATTLE){\n                // // load new\n                // const stateWithEnemyParty = generateEnemyParty(contextualState, hikerBrak)\n                // contextualDispatch({\n                //   type: ACTIONS.UPDATEGAMEDATA,\n                //   payload: stateWithEnemyParty,\n                // });\n\n                // console.log(`[!]state after adding an opponent:`, contextualState,\n                // contextualState.opponent\n                // )\n                // }\n                return (\n                  <button\n                    key={index}\n                    onClick={() => handleChangeLevel(contextualState, option)}\n                    style={buttonStyle}\n                  >\n                    {option.screen}\n                  </button>\n                )\n              },\n            )}\n            <button\n              onClick={() =>\n                handleChangeLevel(contextualState, {\n                  screen: SCENES.BATTLE,\n                  details: {\n                    type: 'trainer',\n                    trainer: hikerBrak,\n                    area: 'tranquil forest',\n                    difficulty: 'easy',\n                  },\n                })\n              }\n            >\n              •Battle•\n            </button>\n          </div>\n\n          {/* <button style={buttonStyle}>Battle Ahead</button>\n          <button style={buttonStyle}>investigate the market</button>\n          <button style={buttonStyle}>\n            ???\n          </button>\n          <button style={buttonStyle}>Explore</button> */}\n        </div>\n        <h2 style={headingStyle}>Prepare Your Party</h2>\n        <div\n          style={{\n            display: 'flex',\n            flexWrap: 'wrap',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          }}\n        >\n          {Object.values(ourParty).map((monster) =>\n            renderMonsterDetails(monster),\n          )}\n        </div>\n      </div>\n      <div style={sectionStyle}>\n        <h2 style={headingStyle}>Inventory</h2>\n        {/* Add content for inventory management here */}\n      </div>\n    </div>\n  )\n}\n\n//   return (\n//     <div style={containerStyle}>\n//       <h1 style={titleStyle}>New Map Component</h1>\n//   <div style={sectionStyle}>\n//     <h2 style={headingStyle}>Map Stuff</h2>\n//     <p>Choose your path:</p>\n//     <button style={buttonStyle}>Battle Ahead</button>\n//     <button style={buttonStyle}>Event</button>\n//     <button style={buttonStyle}>Mystery</button>\n//     <button style={buttonStyle}>Explore</button>\n//   </div>\n//       <div style={sectionStyle}>\n//         <h2 style={headingStyle}>Prepare Your Party</h2>\n//         {/* Add content for party management here */}\n//       </div>\n//       <div style={sectionStyle}>\n//         <h2 style={headingStyle}>Inventory</h2>\n//         {/* Add content for inventory management here */}\n//       </div>\n//     </div>\n//   );\n\nexport default Map\n","import React from \"react\"\nimport { motion } from \"framer-motion/dist/framer-motion\"\nimport {\n  // transitionSceneAction,\n  setSceneAction,\n} from \"../../actions\"\nconst Trans = ({ gameData, dispatch, dialog, options }) => {\n  const loadNextLevel = () => {\n    dispatch(setSceneAction())\n  }\n  // TODO if another transition scene is warranted, send to that transition scene\n  //else, send them to the next scene in the map\n  // const loadTransitionScene = () => {\n  //   console.log(`loadTransitionScene`)\n  //   dispatch(transitionSceneAction())\n  // }\n\n  return (\n    <>\n      <div style={{ fontFamily: \"Silkscreen\" }}>\n        <br />\n        <h1>Results:</h1>\n        <motion.div\n        style={{ padding: \"30px\", fontSize: \"20px\"}}\n          animate={{\n            rotate: 360,\n            borderRadius: [\"50% 50%\", \"2% 50%\"],\n            x: 75,\n          }}\n          initial={{\n            x: -75,\n          }}\n          transition={{\n            flip: Infinity,\n            duration: 1,\n            ease: \"easeInOut\",\n          }}\n        >\n          Success!!!\n        </motion.div>\n        <h1 style={{ padding: \"30px\" }}>\n          {gameData.curEvent.resultDialogTitle\n            ? gameData.curEvent.resultDialogTitle\n            : \"No dialog title found\"}\n        </h1>\n        <div>\n          <div>\n            {gameData.curEvent.resultDialog\n              ? gameData.curEvent.resultDialog\n              : \"No dialog found\"}\n          </div>\n        </div>\n        {options ? (\n          options\n        ) : (\n          // <button onClick={loadTransitionScene}>Next Level</button>\n          <button onClick={() => loadNextLevel()}>Next Level</button>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default Trans\n","import React from 'react'\nimport './Victory.css'\n// import devProfileImage from '/misc/Pocket.jpg';  // import victory image\n// import { Pocket } from \"/misc/Pocket.js\"\n// import {pocket2} from \"./Pocket.png\"\nconst Victory = ({ gameData, dispatch }) => {\n  return (\n    <div className=\"victory-screen\">\n      {/* <img src={pocket2} alt=\"Developer of the game\" /> */}\n      <h1>Congratulations, you have defeated the opponent!</h1>\n      <p>Your victory is a testament to your skill and determination.</p>\n      <div>Results</div>\n      <div>This and this happened</div>\n      <div>Your recieved this and this and this for winning</div>\n      <div>\n        your pals ___ and ___ leveled up and or learnt a thing. You recieved a\n        TM or something\n      </div>\n      <div>prize choice 1</div>\n      <button>Claim prize</button>\n      <div>prize choice 2</div>\n      <button>Claim prize</button>\n      <div>prize choice 3</div>\n      <button>Claim prize</button>\n    </div>\n  )\n}\n\n// const Victory = ({gameData, dispatch}) => {\n//   return (\n//     <div className=\"victory-screen\">\n//       {/* <img src={pocket2} alt=\"Developer of the game\" /> */}\n//       <h1>Congratulations, you have won the game!</h1>\n//       <p>Your victory is a testament to your skill and determination.</p>\n//       <p>\n//         You had {gameData.gold} Gold, {gameData.hero.health} health, and got to the\n//         final level: {gameData.curScene.lvl}\n//       </p>\n//       <button onClick={() => window.location.reload()}>Play Again</button>\n//     </div>\n//   )\n// }\n\nexport default Victory\n","import React from 'react'\nimport ChibipalsSelection from '../reward/ChibipalsSelection'\n\nfunction ChooseCharacter() {\n  return (\n    <div>\n      <ChibipalsSelection />\n    </div>\n  )\n}\n\nexport default ChooseCharacter\n","// different screens\nimport React, { useEffect } from 'react'\n// import { SCENES } from \"../scenes\";\nimport { SCENES } from '../handlers/sceneHandlers_new'\n// All of our scenes are below\nimport Intro from './scenes/Intro'\nimport Event from './scenes/Event'\nimport Shop from './scenes/Shop'\nimport Rest from './scenes/Rest'\nimport Reward from './scenes/Reward'\nimport PackReward from './scenes/PackRewardTemp'\nimport Convo from './scenes/Convo'\nimport Battle from './scenes/Battle'\n// import Map from \"./scenes/Map\";\nimport Map from './map/Map'\nimport Trans from './scenes/Trans'\nimport Victory from './scenes/Victory'\nimport { ACTIONS, useDispatchContext, useStateContext } from '../MainContext'\nimport ChooseCharacter from './scenes/ChooseCharacter'\nimport { generateEnemyParty } from '../handlers/Battle/prepareBattle'\nimport { hikerBrak } from '../consts/party/trainers'\nimport { cusLog } from '../utils/debugging-utils'\n// import MiniBoss from \"./scenes/MiniBoss\";\n\nconst Screen = ({ gameData, dispatch, map }) => {\n  const {\n    TRANSITION,\n    INTRO,\n    CHOOSECHARACTER,\n    BATTLE,\n    SHOP,\n    MAP,\n    EVENT,\n    REST,\n    REWARD,\n    PACKREWARD,\n    CONVO,\n    MINIBOSS,\n    BOSS,\n    GAMEOVER,\n    VICTORY,\n  } = SCENES\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  // const logWithColor = (message, color) => {\n  //   console.log(`%c${message}`, `color: ${color}; font-weight: bold;`);\n  // };\n\n  // const levelToSet = gameData.curScene.scene;\n  const levelToSet = contextualState.current.scene.screen\n\n  // console.log(`levelToSet is:`, levelToSet)\n  cusLog(`levelToSet is: ${levelToSet}`, 'level', undefined, levelToSet)\n\n  switch (levelToSet) {\n    case TRANSITION:\n      console.log('((screen: transition)')\n      return <Trans gameData={gameData} dispatch={dispatch} />\n    case INTRO:\n      console.log('(screen: intro)')\n      // return <Intro dispatch={dispatch} />;\n      return <Intro dispatch={dispatch} />\n    case CHOOSECHARACTER:\n      console.log('(screen: choosecharacter )')\n\n      return <ChooseCharacter />\n    case SHOP:\n      console.log('(screen: shop )')\n      return <Shop gameData={gameData} dispatch={dispatch} />\n    case MAP:\n      console.log('(screen: map )')\n\n      return <Map />\n    // return <Map gameData={gameData} dispatch={dispatch} map={map} />;\n    case EVENT:\n      console.log('(screen: event )')\n      return <Event gameData={gameData} dispatch={dispatch} />\n    case REST:\n      console.log('(screen: rest)')\n      return <Rest gameData={gameData} dispatch={dispatch} />\n    case REWARD:\n      console.log('(screen: reward)')\n      return (\n        <Reward\n          gameData={gameData}\n          dispatch={dispatch}\n          randomizedVal={Math.random()}\n        />\n      )\n    case PACKREWARD:\n      console.log('(screen: PackReward)')\n      return <PackReward gameData={gameData} dispatch={dispatch} />\n    case CONVO:\n      console.log('(screen: Convo)')\n      return <Convo gameData={gameData} dispatch={dispatch} />\n    case BATTLE:\n      console.log('(screen: battle)')\n      return <Battle gameData={gameData} dispatch={dispatch} />\n    case MINIBOSS:\n      console.log('(screen: miniboss)')\n      return <Battle gameData={gameData} dispatch={dispatch} />\n    case BOSS:\n      console.log('screen: boss')\n      return <Battle gameData={gameData} dispatch={dispatch} />\n    case GAMEOVER:\n      console.log('screen: game over')\n      // return <GAMEOVER gameData={gameData} dispatch={dispatch} />\n      return <div>`game over`</div>\n    case VICTORY:\n      console.log('screen: victory')\n      return <Victory gameData={gameData} dispatch={dispatch} />\n    default:\n      console.log(\n        'screen: no scene (Screen Case) selected. Your _levelToSet_ was',\n        levelToSet,\n      )\n      return (\n        <h1>\n          404 Yo. Something went wrong with selecting a Screen to display.\n          likely something related to the switch case, dawg.Your _levelToSet_\n          was: {levelToSet}\n        </h1>\n      )\n  }\n}\n\n// Screen.propTypes = {\n//   gameData: PropTypes.object,\n//   dispatch: PropTypes.func,\n//   map: PropTypes.array\n// };\n\nexport default Screen\n","import { SCENES } from \"../scenes\"\n\n//As for the areas, you could also add more like a tutorial level, a challenge level, a puzzle level, a secret level, etc.\nconst {\n  // TRANSITION,\n  INTRO,\n  BATTLE,\n  MAP,\n  SHOP,\n  REWARD,\n  PACKREWARD,\n  // CONVO,\n  EVENT,\n  REST,\n  MINIBOSS,\n  BOSS,\n  GAMEOVER,\n  VICTORY,\n} = SCENES\n\nexport const mapGraphExample = [\n  [[\"m\"], [\"m\"], [\"m\"], [\"m\"], [\"m\"], [\"m\"]],\n  [[\"x\"], [\"m\"], [\"x\"], [\"x\"], [\"m\"], [\"x\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"m\"], [\"x\"], [\"x\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"x\"], [\"e\"], [\"x\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"x\"], [\"r\"], [\"x\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"y\"], [\"x\"], [\"x\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"x\"], [\"r\"], [\"x\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"x\"], [\"x\"], [\"m\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"x\"], [\"m\"], [\"x\"]],\n  [[\"x\"], [\"x\"], [\"x\"], [\"r\"], [\"x\"], [\"x\"]],\n  [[\"b\"], [\"b\"], [\"b\"], [\"b\"], [\"b\"], [\"b\"]],\n]\n\nconst mapGenerator = () => {\n  return [\n    GAMEOVER,\n    INTRO,\n    REWARD,\n    // CONVO,\n    MAP,\n    BATTLE,\n    PACKREWARD,\n    REWARD,\n    EVENT,\n    MAP,\n    SHOP,\n    BATTLE,\n    PACKREWARD,\n    REWARD,\n    MAP,\n    EVENT,\n    BATTLE,\n    PACKREWARD,\n    REWARD,\n    MAP,\n    REST,\n    MINIBOSS,\n    PACKREWARD,\n    REWARD,\n    MAP,\n    BATTLE,\n    PACKREWARD,\n    REWARD,\n    MAP,\n    BATTLE,\n    PACKREWARD,\n    REWARD,\n    REST,\n    BOSS,\n    VICTORY,\n    // That is ACT1. If someone beats ACT1, we can start with ACT2 and ACT3\n    // REWARD,\n    // REWARD,\n    // //Act 2\n    // EVENT,\n    // BATTLE,\n    // REWARD,\n    // SHOP,\n    // BATTLE,\n    // REWARD,\n    // EVENT,\n    // BATTLE,\n    // REWARD,\n    // REST,\n    // MINIBOSS,\n    // REWARD,\n    // BATTLE,\n    // REWARD,\n    // BATTLE,\n    // REWARD,\n    // REST,\n    // BOSS,\n    // //Act 3\n    // REWARD,\n    // EVENT,\n    // BATTLE,\n    // REWARD,\n    // SHOP,\n    // BATTLE,\n    // REWARD,\n    // EVENT,\n    // BATTLE,\n    // REWARD,\n    // REST,\n    // MINIBOSS,\n    // REWARD,\n    // BATTLE,\n    // REWARD,\n    // BATTLE,\n    // REWARD,\n    // REST,\n    // BOSS,\n  ]\n}\n\nexport const map = mapGenerator()\n","// General GameData handlers\n\nimport { applyUniqueId } from \"../utils/reducer-utils\"\n\nexport const setMyDataHandler = (state) => {\n  return state\n}\n\nexport const healHandler = (state, payload) => {\n  let nextState = { ...state }\n  const newHealth = nextState.hero.health + payload\n  console.log(`newHealth is  ${newHealth}`)\n  nextState = { ...nextState, hero: { ...nextState.hero, health: newHealth } }\n  console.log(`nextState`, nextState)\n  return nextState\n}\n\nexport const setMyBalanceHandler = (state, payload) => {\n  const newBalance = state.gold + payload\n  console.log(`newBalance is  ${newBalance}`)\n  const nextState = { ...state, gold: newBalance }\n  return nextState\n}\n\nexport const addCardHandler = (state, payload) => {\n  const ourDeck = state.deck\n  const cardWithFreshID = applyUniqueId(payload.card) \n  console.table(\"ourDeck and cardWithFreshIDb4:\",ourDeck, cardWithFreshID)\n  ourDeck.push(cardWithFreshID)\n  console.table(\"ourDeck and cardWithFreshIDa:\",ourDeck, cardWithFreshID)\n\n  // ourDeck.push(payload.card)\n  // set some notification that the card is added\n  const updatedDeck = ourDeck\n  return { ...state, deck: updatedDeck }\n}\n\n// export const addUniqueIdToCard = (state, payload) => {\n//   const {card} = payload\n//   return\n// }\n\nexport const addPackHandler = (state, payload) => {\n  const {pack} = payload\n  let newState = { ...state}\n  // const ourDeck = newState.deck\n  // const packWithIds = []\n  //for loop breaks ALL the things\n  // const packWithIDs = pack.map(card => {\n  //   return {...card, id: uniqueId()}\n  // })\n  for(let i = 0; i < pack.length; i++){\n    newState = addCardHandler(newState, {card: pack[i]} )\n  }\n  // pack added\n  // const newDeck = [...ourDeck, ...payload.pack]\n  // const newDeck = [...ourDeck, ...packWithIDs]\n\n  return { ...newState }\n  // return { ...newState, deck: newDeck }\n}\n\nexport const setAlertHandler = (state, payload) => {\n  return {\n    ...state,\n    alert: payload,\n  }\n}\n\nexport const setDialogHandler = (state, payload) => {\n  const { dialog } = payload\n  return { ...state, battle: { ...state.battle, dialog: dialog } }\n}\n","// import { uniqueId } from \"../utils/reducer-utils\"\nimport { rewardPack } from \"./packs\"\n\nexport const allAvailableRewards = rewardPack\n","import { map } from \"../consts/mapGenerator_old\"\nimport { SCENES } from \"../scenes\"\nimport { ENEMY_TYPES } from \"../actions\"\nimport { decideEnemyArr } from \"../utils/reducer-utils\"\nimport { startingData } from \"../consts/consts\"\nimport { setMyDataHandler } from \"./dataHandlers\"\nimport {\n  setEnemyHandler,\n  setAtkHandler,\n  beginBattleHandler,\n  generateRewardsHandler,\n} from \"./battleSetupHandlers\"\n\nexport const setSceneHandler = (state, payload) => {\n  const { enemySeed, atkSeed, beginBattleSeed, startingHandCount } = payload\n  const nextLevel = {\n    scene: map[state.curScene.lvl + 1],\n    lvl: state.curScene.lvl + 1,\n    act: state.curScene.act,\n  }\n  let nextState = state\n  let enemyArr = []\n\n  switch (nextLevel.scene) {\n    case SCENES.BATTLE:\n      enemyArr = decideEnemyArr(state.curScene.act, ENEMY_TYPES.REG)\n\n      // typical battle code:\n      nextState = setEnemyHandler(nextState, {\n        seed: enemySeed,\n        enemyArr: enemyArr,\n      })\n      nextState = setAtkHandler(nextState, { seed: atkSeed })\n      nextState = beginBattleHandler(nextState, {\n        seed: beginBattleSeed,\n        startingHandCount,\n      })\n      break\n    case SCENES.MINIBOSS:\n      enemyArr = decideEnemyArr(state.curScene.act, `mini`)\n      // typical battle code:\n      nextState = setEnemyHandler(nextState, {\n        seed: enemySeed,\n        enemyArr: enemyArr,\n      })\n      nextState = setAtkHandler(nextState, { seed: atkSeed })\n      nextState = beginBattleHandler(nextState, {\n        seed: beginBattleSeed,\n        startingHandCount,\n      })\n      break\n    case SCENES.BOSS:\n      enemyArr = decideEnemyArr(state.curScene.act, `boss`)\n      // typical battle code:\n      nextState = setEnemyHandler(nextState, {\n        seed: enemySeed,\n        enemyArr: enemyArr,\n      })\n      nextState = setAtkHandler(nextState, { seed: atkSeed })\n      nextState = beginBattleHandler(nextState, {\n        seed: beginBattleSeed,\n        startingHandCount,\n      })\n      break\n    default:\n      // console.log(\n      //   `setSceneHandler type isn't battle, type is: ${nextLevel.scene}`,\n      //   nextLevel\n      // )\n  }\n\n  return {\n    ...nextState,\n    curScene: nextLevel,\n  }\n}\n\n// @TODO: Finish in progress setTransitionHandler or get rid of it:\nexport const setTransitionHandler = (state, payload) => {\n  // Probably need text to display and options here. maybe confetti?\n  // Do you need a battle payload here? probably not.\n  // const { enemySeed, atkSeed, beginBattleSeed, startingHandCount } = payload\n  //\n\n  let nextState = { ...state }\n\n  const nextLevel = {\n    scene: SCENES.TRANSITION,\n    lvl: nextState.curScene.lvl,\n    act: nextState.curScene.act,\n  }\n\n  nextState = {\n    ...nextState,\n    curScene: nextLevel,\n    curEvent: payload.choice,\n  }\n\n  return nextState\n}\n\nexport const winBattleHandler = (state, { battlePayload }) => {\n  //why was `payload` not working? Investigate\n  // const {battlePayload} = payload\n\n  let nextState = { ...state }\n  console.log(`you defeated the enemy!`)\n  //put hand back into deck\n  let nextDeck = []\n  nextDeck.push(...nextState.deck)\n  nextDeck.push(...nextState.battle.hand)\n  console.log(`nextDeck`, nextDeck)\n\n  // generate new rewards\n  nextState = generateRewardsHandler(nextState, battlePayload)\n\n  nextState = setMyDataHandler({\n    ...nextState,\n    gold: nextState.gold + 25,\n    deck: nextDeck,\n    hero: {\n      ...nextState.hero,\n      effects: { ...nextState.hero.effects, buff: null },\n    },\n    battle: {\n      ...nextState.battle,\n      enemy: {\n        ...nextState.battle.enemy,\n        status: \"none\",\n      },\n    },\n  })\n  console.log(`nextState`, nextState)\n\n  const payload = battlePayload\n  console.log(`payload`, battlePayload)\n\n  // replace with something like setTransitionHandler\n  // nextState = setTransitionHandler(nextState, payload)\n  //\n  //\n  nextState = setSceneHandler(nextState, payload)\n  return nextState\n}\n\nexport const gameOverHandler = (state) => {\n  return {\n    ...startingData,\n    curScene: {\n      scene: SCENES.GAMEOVER,\n      lvl: 0,\n      act: 0,\n    },\n  }\n}\n","/* eslint-disable indent */\nimport { dmgEmoji, energyEmoji } from '../consts/consts'\nimport { EFFECTS } from '../effects'\nimport { setAlertHandler } from './dataHandlers'\nimport { winBattleHandler } from './sceneHandlers'\nimport { setDialogHandler } from './dataHandlers'\nimport { SCENES } from './sceneHandlers_new'\nimport { ACTIONS, useDispatchContext, useStateContext } from '../MainContext'\n// import { useDispatchContext, useStateContext } from '../../MainContext'\n\n// NEW AND TASTY Handlers\n// const contextualState = useStateContext()\n// const contextualDispatch = useDispatchContext()\n\nexport const PHASES = {\n  BEGIN: 'begin',\n  START: 'start',\n  ATTACK: 'attack',\n  RESOLVE_ATTACK: 'resolveAttack',\n  CHANGE_TURN: 'changeTurn',\n  END_TURN: 'endTurn',\n  END_BATTLE: 'endBattle',\n  // REWARD: 'reward', //Yes?\n}\n\n//something like contextualState.battleManager.phase\n\n// const contextualState = useStateContext()\n// const contextualDispatch = useDispatchContext()\n\nexport const runBattlePhase = (contextualState, contextualDispatch) => {\n  const phase = contextualState.battleManager.phase\n  // const phase = contextualState.battleManager.phase\n  // add a switch statement for phases. so it is like: switch(phase) { case phase1: do phase1 stuff; break; case phase2: do phase2 stuff; break; }\n\n  // should there be a separate switch statement for\n  // the different attack stuff like attack, resolve attack\n  // apply effects, etc?\n  switch (phase) {\n    case PHASES.BEGIN:\n      console.log(`Battle: BEGIN`)\n      \n      // do phase 1 stuff\n      // slide in player and opponent.\n      // other player wants to fight\n      // Dialogue: Other Player sends out their monster,\n      // Effects apply from ETB\n      // Dialogue: You send out your monster\n      // Effects apply from ETB\n      // any other effects.\n      break\n    case PHASES.START:\n      console.log(`Battle: START`)\n      // do phase 2 stuff\n      // If turn start effects are there, note them\n      // otherwise, the user goes first\n      break\n    case PHASES.ATTACK:\n      console.log(`Battle: ATTACK`)\n      // do phase 3 stuff\n\n      break\n    case PHASES.RESOLVE_ATTACK:\n      console.log(`Battle: RESOLVE_ATTACK`)\n      // do phase 4 stuff\n      break\n    case PHASES.CHANGE_TURN:\n      // do phase 5 stuff\n      console.log(`Battle: CHANGE_TURN`)\n      break\n    case PHASES.END_TURN:\n      console.log(`Battle: END_TURN`) // do phase 5 stuff\n      break\n    case PHASES.REWARD:\n      console.log(`Battle: REWARD`) // do phase 5 stuff\n      break\n    case PHASES.END_BATTLE:\n      console.log(`Battle: END_BATTLE`) // do phase 5 stuff\n      break\n    default:\n      console.log(`Battle: Defaul case reached`) // do phase 5 stuff\n      break\n  }\n}\n\nconst changeTurn = (currentPlayer, contextualState, contextualDispatch) => {\n  const newPlayer = currentPlayer === 'player' ? 'opponent' : 'player'\n\n  const newState = {\n    battleManager: {\n      ...contextualState.battleManager,\n      turn: contextualState.battleManager.turn + 1,\n      currentPlayer: newPlayer,\n    },\n  }\n\n  contextualDispatch({\n    type: ACTIONS.UPDATEGAMEDATA,\n    payload: newState,\n  })\n}\n\nconst endBattle = (win, contextualState, contextualDispatch) => {\n  // Implement logic to determine win or lose\n  const newState = { ...contextualState } // Create a copy of the current state\n\n  if (win) {\n    // Implement logic for winning the battle\n    newState.current.level++ // Increment the level\n    newState.current.scene = {\n      screen: SCENES.VICTORY, // Transition to the level screen\n      details: null, //VICTORY DETAILS, based on who you beat, etc. You can set details for the new level\n    }\n  } else {\n    // Implement logic for losing the battle\n    newState.current.scene = {\n      screen: SCENES.GAMEOVER, // Transition to the game over screen\n      details: null, // You can provide details for the game over\n    }\n  }\n\n  contextualDispatch({\n    type: ACTIONS.UPDATEGAMEDATA,\n    payload: newState,\n  })\n}\n\n// OLD AND YUCKY Deprecated because we switched to moves from cards\nexport const playCardHandler = (state, { card, battlePayload }) => {\n  console.log(`playCardHandler: payload&card`, card, battlePayload)\n  let nextState = { ...state }\n  const myEnergy = nextState.hero.energy\n  const enemyHealth = nextState.battle.enemy.health\n  let damage = card.num\n  let energyCost = card.cost\n  let cardName = card.name\n\n  //Can the USER use the card?\n  if (myEnergy < energyCost) {\n    return setAlertHandler(\n      nextState,\n      `Not enough energy to play that card :(. End turn to replenish Energy!`,\n    )\n  }\n  //if the USER can use the card:\n  //apply hero buff effects\n  switch (nextState.hero.effects.buff) {\n    case EFFECTS.DOUBLEDAMAGE:\n      damage = damage * 2\n      break\n    case null:\n      console.log(`null (regular) case for no hero buffs applied`)\n      break\n    default:\n      console.log(`default case for hero buffs applied`)\n  }\n\n  //Check if the enemy is defeated\n  if (enemyHealth - damage <= 0) {\n    nextState = winBattleHandler(nextState, { battlePayload: battlePayload })\n  }\n\n  // TODO Add note about the buff, and effects applied\n  const dialog = `${energyCost}${energyEmoji} used ${cardName}. Dealt ${damage}${dmgEmoji}!`\n\n  nextState = setDialogHandler(nextState, { dialog })\n\n  // remove the card\n  const myHandIndex = nextState.battle.hand.indexOf(card)\n  let hand = [...nextState.battle.hand]\n  hand.splice(myHandIndex, 1)\n\n  // apply the spliced hand (removed the used card) into the state\n  nextState = {\n    ...nextState,\n    battle: {\n      ...nextState.battle,\n      hand: hand,\n    },\n  }\n\n  if (card.effect != null || undefined) {\n    const statusPayload = { card, battlePayload }\n    nextState = applyStatusHandler(nextState, statusPayload)\n  }\n\n  const energyLeft = myEnergy - energyCost\n  const enemyHealthLeft = nextState.battle.enemy.health - damage\n  nextState = {\n    ...nextState,\n    hero: { ...nextState.hero, energy: energyLeft },\n    battle: {\n      ...nextState.battle,\n      enemy: {\n        ...nextState.battle.enemy,\n        health: enemyHealthLeft,\n      },\n      // hand,\n    },\n  }\n\n  // TODO: Finish PRESENCE effects. PRESENCE buffs other cards while the card is in hand.\n  // Presence may have to apply earlier.\n  for (let i = 0; i < nextState.battle.hand.length; i++) {\n    switch (nextState.battle.hand[i].effect) {\n      case EFFECTS.BUILDUP:\n        nextState.battle.hand[i].num += 2\n        nextState.battle.hand[i].qty += 1\n        // nextState.hero.effects\n        break\n      default:\n        console.log(`no individual effects (like BUILDUP) found for this card`)\n    }\n  }\n\n  return discardCardHandler(nextState, { cardToAddToDiscarded: card })\n}\nexport const discardCardHandler = (state, payload) => {\n  // notes the card that is in the discard pile.\n  // removing from deck happens elsewhere\n  return {\n    ...state,\n    battle: {\n      ...state.battle,\n      discarded: [...state.battle.discarded, payload.cardToAddToDiscarded],\n    },\n  }\n}\nexport const applyStatusHandler = (state, { card, battlePayload }) => {\n  let nextState = { ...state }\n  const statusEffect = card.effect\n  console.log(`Apply Status of ${statusEffect}`, card, battlePayload)\n\n  console.log(\n    `card.effectChance: ${card.effectChance},atkSeed ${\n      battlePayload.atkSeed\n    }, ${card.effectChance > battlePayload.atkSeed}`,\n  )\n\n  // if a card has a percentage chance of having an effect work, try that before applying.\n  if (!card.effectChance || card.effectChance > battlePayload.atkSeed) {\n    // success, apply status\n    switch (statusEffect) {\n      case EFFECTS.STUN:\n        console.log(`stun case met, applying stun`)\n        return {\n          ...nextState,\n          battle: {\n            ...nextState.battle,\n            enemy: { ...nextState.battle.enemy, status: EFFECTS.STUN },\n          },\n        }\n      case EFFECTS.POISON:\n        // add poison effect to enemy.\n        // TODO finish poison\n        if (!nextState.battle.enemy.poison) {\n          return {\n            ...nextState,\n            battle: {\n              ...nextState.battle,\n              // enemy: { ...nextState.battle.enemy, status: EFFECTS.POISON },\n              enemy: { ...nextState.battle.enemy, poison: card.qty },\n            },\n          }\n        } else {\n          return {\n            ...nextState,\n            battle: {\n              ...nextState.battle,\n              // enemy: { ...nextState.battle.enemy, status: EFFECTS.POISON },\n              enemy: {\n                ...nextState.battle.enemy,\n                poison: nextState.battle.enemy.poison + card.qty,\n              },\n            },\n          }\n        }\n      case EFFECTS.SLEEP:\n        // 50% chance of waking up\n        return {\n          ...nextState,\n          battle: {\n            ...nextState.battle,\n            enemy: { ...nextState.battle.enemy, status: EFFECTS.SLEEP },\n          },\n        }\n      case 'sheild':\n        // temporary\n        return {\n          ...nextState,\n        }\n      case 'armor':\n        return {\n          ...nextState,\n        }\n      case EFFECTS.DOUBLEDAMAGE:\n        // double attacks this turn\n        // nextState.hero.effects.buff = EFFECTS.DOUBLEDAMAGE\n        return {\n          ...nextState,\n          hero: {\n            ...nextState.hero,\n            effects: { ...nextState.hero.effects, buff: EFFECTS.DOUBLEDAMAGE },\n          },\n        }\n      case EFFECTS.DRAW:\n        console.log(\n          `drawing ${card.qty}, hand length before:${nextState.battle.hand.length}`,\n        )\n        for (let i = 0; i < card.qty; i++) {\n          nextState = drawCardHandler(nextState)\n        }\n        console.log(\n          `drew ${card.qty} cards, now hand is ${nextState.battle.hand.length} cards`,\n          nextState,\n        )\n        return nextState\n      case EFFECTS.LIFESTEAL:\n        const healAmount = card.num\n        nextState.hero.health = nextState.hero.health + healAmount\n        return { ...nextState }\n      default:\n        console.log(`no statusEffect matched, returning state`)\n        return nextState\n    }\n  } else {\n    console.log(\n      `percentage chance of effect landing was less than the seed, returning state`,\n    )\n    // TODO no status applied, set Dialog to reflect this. This state must be mutating somehow\n    // const newDialog = nextState.battle.dialog + ` no Effect applied`\n    // console.log(`newDialog SHOULD be:`, newDialog)\n    // nextState = setDialogHandler(nextState, { newDialog })\n    // ${appliedEffect? `Applied ${appliedEffect} effect`: \"\"}\n\n    return nextState\n  }\n}\nexport const drawCardHandler = (state) => {\n  if (state.deck.length > 0) {\n    console.log(`draw. Deck has ${state.deck.length} cards`)\n    return {\n      ...state,\n      battle: {\n        ...state.battle,\n        hand: [...state.battle.hand, state.deck[0]],\n      },\n      deck: state.deck.slice(1),\n    }\n  } else {\n    return {\n      ...state,\n      alert: 'No cards left to draw :( ',\n    }\n  }\n}\n","import { shuffle } from \"../utils/reducer-utils\"\nimport { EFFECTS } from \"../effects\"\nimport { allAvailableRewards } from \"../consts/allAvailableRewards\"\nimport { startingDeck, fullEnergyAmount } from \"../consts/consts\"\nimport { decideEnemy, decideEnemyATK } from \"../utils/reducer-utils\"\nimport { drawCardHandler } from \"./battleHandlers\"\nimport { addCardHandler, setAlertHandler } from \"./dataHandlers\"\nimport {\n  setSceneHandler,\n  gameOverHandler,\n  winBattleHandler,\n} from \"./sceneHandlers\"\n\nexport const endTurnHandler = (state, payload) => {\n  const { enemySeed, atkSeed, beginBattleSeed, startingHandCount } = payload\n  let nextState = { ...state }\n  //\n  const { hero, battle } = nextState\n  const enemyStatus = nextState.battle.enemy.status\n  const heroBuff = nextState.hero.effects.buff\n\n  // apply status effects. maybe a applyStatusEffectsHandler()\n  let finalHealth = hero.health\n  //  let finalHealth = hero.health - battle.enemy.nextAttack.damage\n\n  // TODO: Add check for battle-long battleBuffs\n\n  // ENDTURN: Resolve applied enemy effects\n  //First special cases like Poison\n  if (nextState.battle.enemy.poison) {\n    console.log(`Poisoned, so check if dead, and if not apply poison damage`)\n    if (nextState.battle.enemy.health - nextState.battle.enemy.poison <= 0) {\n      // you win the battle, continue\n      nextState = winBattleHandler(nextState, {\n        battlePayload: {\n          enemySeed,\n          atkSeed,\n          beginBattleSeed,\n          startingHandCount,\n        },\n      })\n    } else {\n      // Take enemy health away from poison damage\n      nextState = {\n        ...nextState,\n        battle: {\n          ...nextState.battle,\n          enemy: {\n            ...nextState.battle.enemy,\n            // health: nextState.battle.enemy.health - poisonDamage,\n            health:\n              nextState.battle.enemy.health - nextState.battle.enemy.poison,\n          },\n        },\n      }\n    }\n  }\n\n  // Then the rest of the status effects\n  switch (enemyStatus) {\n    case EFFECTS.STUN:\n      console.log(`stunned, so don't attack, set status to _null_`)\n      const enemyWithoutStatusState = {\n        ...nextState,\n        battle: {\n          ...nextState.battle,\n          enemy: { ...nextState.battle.enemy, status: null },\n        },\n      }\n      nextState = enemyWithoutStatusState\n      break\n    case EFFECTS.SLEEP:\n      console.log(\n        `Sleep. 50% chance wakes up - status is removed, no damage applies while active`\n      )\n      // @TODO: replace Math.random() with Seed\n      const decision = Math.floor(Math.random() * 2)\n      if (decision === 1) {\n        const enemyAppliedSleepState = {\n          ...nextState,\n          battle: {\n            ...nextState.battle,\n            enemy: { ...nextState.battle.enemy, status: null },\n          },\n        }\n        nextState = enemyAppliedSleepState\n      }\n      break\n    case null:\n      console.log(\n        ` enemyStatus of null matched, returning a hero-damaged state`\n      )\n      finalHealth = finalHealth - battle.enemy.nextAttack.damage\n      break\n    default:\n      console.log(`no enemyStatus matched, returning state`)\n  }\n\n  //ENDTURN: Resolve your buffs\n  switch (heroBuff) {\n    case EFFECTS.DOUBLEDAMAGE: {\n      // your buff lasts one turn. Set back to _null_\n      const removedDoubleDamageState = {\n        ...nextState,\n        hero: {\n          ...nextState.hero,\n          effects: {\n            ...nextState.hero.effects,\n            buff: null,\n          },\n        },\n      }\n      nextState = removedDoubleDamageState\n      break\n    }\n    default:\n      console.log(\n        `endTurnHandler: default case reached while checking heroBuff of: ${heroBuff}`\n      )\n  }\n\n  if (finalHealth > 0) {\n    // if not dead, update health and fill energy, draw a card, and set enemy's attack\n    const endTurnState = {\n      ...nextState,\n      hero: {\n        ...nextState.hero,\n        health: finalHealth,\n        energy: fullEnergyAmount,\n      },\n    }\n\n    const drawCardState = drawCardHandler(endTurnState)\n    const drawSecondCardState = drawCardHandler(drawCardState)\n    nextState = setAtkHandler(drawSecondCardState, payload)\n    // Clear the alert messages\n    nextState = setAlertHandler(nextState, ``)\n\n    return nextState\n  } else {\n    return gameOverHandler(state)\n  }\n}\n\nexport const setEnemyHandler = (state, payload) => {\n  const { seed, enemyArr } = payload\n\n  return {\n    ...state,\n    battle: { ...state.battle, enemy: decideEnemy(seed, enemyArr) },\n  }\n}\n\nexport const setAtkHandler = (state, payload) => {\n  const { seed } = payload\n\n  return {\n    ...state,\n    battle: {\n      ...state.battle,\n      enemy: {\n        ...state.battle.enemy,\n        nextAttack: decideEnemyATK(seed, state.battle.enemy.attacks),\n      },\n    },\n  }\n}\n\nexport const beginBattleHandler = (state, payload) => {\n  const { startingHandCount, seed } = payload\n  let shuffledDeck = []\n  if (state.deck.length <= 0) {\n    // impure\n    console.log(`using starting deck`)\n    shuffledDeck = shuffle(startingDeck, seed)\n  } else {\n    console.log(`using current deck`, state.deck)\n    shuffledDeck = shuffle(state.deck, seed)\n  }\n  let nextState = {\n    ...state,\n    battle: { ...state.battle, beginning: true, hand: [] },\n    deck: [...shuffledDeck],\n    hero: { ...state.hero, energy: fullEnergyAmount },\n  }\n\n  for (let i = 0; i < startingHandCount; i++) {\n    nextState = drawCardHandler(nextState)\n  }\n\n  return nextState\n}\n\nexport const generateRewardsHandler = (state, payload) => {\n  console.log(\n    `generateRewardsHandler running:`,\n    state,\n    `payload (currently none)`,\n    payload\n  )\n  // take list of rewards, use a seed for the randomization\n  // FIXME: Make this function pure\n  let randomizedCards = shuffle(allAvailableRewards, Math.random())\n  // let randomizedCards = shuffle(rewardAttacks, Math.random() * seed)\n  console.log(`reward card arr`, randomizedCards)\n\n  const cardsToReturn = randomizedCards.slice(0, 3)\n  console.log(`reward card arr sliced for only 3`, randomizedCards)\n\n  const nextState = { ...state, availableRewards: cardsToReturn }\n  return nextState\n}\n\nexport const setRewardHandler = (state, payload) => {\n  // const nextState = {...state}\n  // const nextState = addCardHandler(nextState, payload)\n  // const newState = addCardHandler(nextState, payload)\n  const newState = addCardHandler(state, payload)\n\n  const newStateWithFreshRewards = generateRewardsHandler(\n    newState\n    // ,payload (seed, level)\n  )\n  const nextSceneState = setSceneHandler(\n    newStateWithFreshRewards,\n    payload.battlePayload\n  )\n  return nextSceneState\n  // return newState;\n}\n","import {\n  healHandler,\n  setMyBalanceHandler,\n  addCardHandler,\n} from \"./dataHandlers\"\nimport { setSceneHandler, setTransitionHandler } from \"./sceneHandlers\"\n\n// GameEvent Handlers\nexport const restHandler = (state) => {\n  const fullHealed = {\n    ...state,\n    hero: { ...state.hero, health: state.hero.maxHP },\n  }\n  return fullHealed\n}\n\n// const eventChoiceHandler = (state, { type, num, battlePayload }) => {\nexport const eventChoiceHandler = (state, { choice, battlePayload }) => {\n  let newState = { ...state }\n\n  switch (choice.resultType) {\n    case \"health\":\n      console.log(`health choice`)\n      newState = healHandler(newState, choice.resultNum)\n      // newState = setEventResultOBJ(newState, choice)\n      break\n    case \"money\":\n      console.log(`money choice`)\n      if (choice.resultNum !== 0) {\n        newState = setMyBalanceHandler(newState, choice.resultNum)\n        // newState = setEventResultOBJ(newState, choice)\n      }\n      break\n    case \"cards\":\n      console.log(`cards choice`)\n      break\n    case \"enemy\":\n      console.log(`enemy choice`)\n      break\n    case \"story\":\n      console.log(`story choice`)\n      break\n    case \"exit\":\n      console.log(`exit choice`)\n      break\n    default:\n      console.log(`no proper executeChoice choice`)\n      break\n  }\n\n  console.log(`eventChoiceHandler b4`)\n\n  // Work on setting up the transition element\n  const transSceneState = setTransitionHandler(newState, {\n    choice,\n    battlePayload,\n  })\n  console.log(`eventChoiceHandler after`, newState)\n\n  return transSceneState\n\n  // const nextSceneState = setSceneHandler(newState, battlePayload)\n  // return nextSceneState\n}\n\nexport const purchaseHandler = (state, payload) => {\n  // ---\n  const { card, battlePayload } = payload\n  const nextState = { ...state }\n  //subtract the money from the gameData.gold,\n  // add the card from the payload\n  if (!card.price) {\n    console.warn(\n      `card.price does not exist here. card.price = ${card.price}. fullcard:`,\n      card\n    )\n  }\n  if (nextState.gold >= card.price) {\n    const addedCardState = addCardHandler(nextState, { card })\n    const newGoldBalance = addedCardState.gold - card.price\n\n    const newCardandGoldState = { ...addedCardState, gold: newGoldBalance }\n    const returnableState = setSceneHandler(newCardandGoldState, battlePayload)\n    return returnableState\n  } else {\n    // if you don't have enough money, you can buy.\n    console.log(`not enough money to buy ${card.name}`)\n    return nextState\n  }\n  // return returnableState\n  // ---\n}\n","import { ACTIONS } from \"./actions\"\nimport {\n  setMyDataHandler,\n  healHandler,\n  setMyBalanceHandler,\n  addCardHandler,\n  addPackHandler,\n  setAlertHandler,\n} from \"./handlers/dataHandlers\"\nimport {\n  endTurnHandler,\n  setEnemyHandler,\n  setAtkHandler,\n  beginBattleHandler,\n  generateRewardsHandler,\n  setRewardHandler,\n} from \"./handlers/battleSetupHandlers\"\nimport {\n  playCardHandler,\n  discardCardHandler,\n  drawCardHandler,\n} from \"./handlers/battleHandlers\"\nimport {\n  setSceneHandler,\n  setTransitionHandler,\n  gameOverHandler,\n} from \"./handlers/sceneHandlers\"\nimport {\n  restHandler,\n  eventChoiceHandler,\n  purchaseHandler,\n} from \"./handlers/eventHandlers\"\n\nexport default function reducer(state, action) {\n  //we can always deep clone the state immediately here,\n  //solving all problems of stale state\n  const { payload } = action\n  switch (action.type) {\n    case ACTIONS.SET_TRANS:\n      return setTransitionHandler(state, payload)\n    case ACTIONS.SET_SCENE:\n      return setSceneHandler(state, payload)\n    case ACTIONS.SET_MYDATA:\n      return setMyDataHandler(state)\n    case ACTIONS.APPLY_HEAL:\n      return healHandler(state, payload)\n    case ACTIONS.SET_MYBALANCE:\n      return setMyBalanceHandler(state, payload)\n    case ACTIONS.SET_ALERT:\n      return setAlertHandler(state, payload)\n    case ACTIONS.SET_DECK:\n      return { ...state, deck: payload }\n    case ACTIONS.DRAW_CARD:\n      return drawCardHandler(state, payload)\n    case ACTIONS.PLAY_CARD:\n      return playCardHandler(state, payload)\n    case ACTIONS.DISCARD_CARD:\n      return discardCardHandler(state, payload)\n    case ACTIONS.SET_ENEMY:\n      return setEnemyHandler(state, payload)\n    case ACTIONS.SET_ATK:\n      return setAtkHandler(state, payload)\n    // level handlers\n    case ACTIONS.EVENT_CHOICE:\n      return eventChoiceHandler(state, payload)\n    case ACTIONS.GENERATE_REWARDS:\n      return generateRewardsHandler(state, payload)\n    case ACTIONS.SELECT_REWARD:\n      return setRewardHandler(state, payload)\n    case ACTIONS.PURCHASE_ITEM:\n      return purchaseHandler(state, payload)\n    case ACTIONS.SELECT_REST:\n      return restHandler(state)\n    case ACTIONS.BEGIN_BATTLE:\n      return beginBattleHandler(state, payload)\n    case ACTIONS.END_TURN:\n      return endTurnHandler(state, payload)\n    case ACTIONS.ADD_CARD:\n      return addCardHandler(state, payload)\n    case ACTIONS.SELECT_PACK:\n      return addPackHandler(state, payload)\n    case ACTIONS.GAME_OVER:\n      return gameOverHandler(state)\n    default:\n      console.log(`no action type matched, returning state`)\n      return state\n  }\n}\n\n//@TODO: we are extracting the defeat state to make it reusable\n// eslint-disable-next-line\nconst checkIfDefeatedState = (state, { damage, battlePayload }) => {\n  let nextState = { ...state }\n  const enemyHealth = nextState.battle.enemy.health\n\n  if (enemyHealth - damage <= 0) {\n    console.log(`you defeated the enemy!`)\n    //put hand back into deck\n    let nextDeck = []\n    nextDeck.push(...nextState.deck)\n    nextDeck.push(...nextState.battle.hand)\n    console.log(`nextDeck`, nextDeck)\n\n    // generate new rewards\n    nextState = generateRewardsHandler(nextState, battlePayload)\n\n    nextState = setMyDataHandler({\n      ...nextState,\n      gold: nextState.gold + 25,\n      deck: nextDeck,\n    })\n    console.log(`nextState`, nextState)\n\n    const payload = battlePayload\n    console.log(`payload`, battlePayload)\n    nextState = setSceneHandler(nextState, payload)\n  }\n}\n","import React from 'react'\nimport { motion } from 'framer-motion'\n\nconst questionMarks = ['?', '?', '?']\nconst greenColors = ['#9bbc0f', '#8bac0f', '#306230', '#0f380f', '#0d0c0c']\n\nconst variants = {\n  hidden: { opacity: 0, scale: 1, rotate: 30, color: greenColors[0] },\n  visible: { opacity: 1, scale: 2, rotate: -30, color: greenColors },\n}\n\nfunction QuestionMarks() {\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center' }}>\n      {questionMarks.map((mark, index) => (\n        <motion.div\n          key={index}\n          variants={variants}\n          initial=\"hidden\"\n          animate=\"visible\"\n          exit=\"hidden\"\n          transition={{\n            delay: Math.random(), // random delay\n            duration: 1,\n            repeat: Infinity,\n            repeatType: 'reverse',\n            backgroundColor: greenColors[index % greenColors.length], // cycle through colors\n          }}\n        >\n          {mark}\n        </motion.div>\n      ))}\n    </div>\n  )\n}\n\nexport default QuestionMarks\n","import React, { useState } from 'react'\nimport Screen from './components/Screen'\nimport { useReducer } from 'react'\nimport { map } from './consts/mapGenerator_old'\nimport { startingData } from './consts/consts'\nimport reducer from './reducer'\nimport { useDispatchContext, useStateContext } from './MainContext'\nimport './scanlines.css'\nimport './styles.css'\nimport './index.css'\nimport './input.css'\n// import ClickGlow from './components/effects/ClickGlow'\nimport Flashing from './components/effects/Flashing'\nimport Confetti from './components/effects/Confetti'\nimport DialoguePopup from './components/common/DialoguePopup'\nimport SpinningBoxes from './components/effects/SpinningBoxes'\nimport QuestionMarks from './components/effects/QuestionMarks'\nimport CharacterAnims from './components/effects/CharacterAnims'\nimport { cusLog } from './utils/debugging-utils'\n\nconst message = 'intro message'\n\nexport default function App() {\n  const [gameData, dispatch] = useReducer(reducer, startingData)\n\n  const contextualState = useStateContext()\n  const contextualDispatch = useDispatchContext()\n\n  return (\n    <div style={{ backgroundColor: 'black' }}>\n      {/* <Flashing /> */}\n      <div\n        className=\"App scanlines\"\n        style={{\n          backgroundImage: 'url(backgrounds/gridBGdark.png)',\n          backgroundRepeat: 'repeat',\n          backgroundSize: '800px 500px',\n          width: '100vw',\n          height: '100vh',\n          maxWidth: '800px',\n          maxHeight: '1000px',\n          // display this div in the center:\n          margin: 'auto',\n          center: 'true',\n        }}\n      >\n        {/* < ClickGlow /> */}\n\n        {/* Working animations */}\n        {/* <SpinningBoxes /> */}\n        {/* <QuestionMarks /> */}\n        {/* <Confetti amount={300} /> */}\n        {/* <CharacterAnims /> */}\n\n        {/* Dialogue goes here and passes state in or runs from useReducer state somehow */}\n        <DialoguePopup message={message} />\n        {/* <DialoguePopup message={message} /> */}\n\n        <Screen gameData={gameData} dispatch={dispatch} map={map} />\n      </div>\n    </div>\n    // #TODO: Test out why tailwind is broken here\n    // <h1 className=\"text-3xl font-bold underline\">Hello world!</h1>\n  )\n}\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\n// import why did you render\nimport './wdyr'\n\nimport App from './App'\nimport { MainProvider } from './MainContext'\n\nconst rootElement = document.getElementById('root')\nconst root = createRoot(rootElement)\n\nroot.render(\n  <MainProvider>\n    <App />\n  </MainProvider>,\n)\n"],"sourceRoot":""}